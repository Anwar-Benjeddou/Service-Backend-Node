{"version":3,"file":"static/js/6686.13a7354d.chunk.js","mappings":"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","sources":["Routes/Admin/Annuler/Annulation.Colis.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n\n//import { PageTitle } from '../../layout-components';\nimport { IconButton, Box, Card, CardContent } from \"@material-ui/core\";\nimport { InputGroup, FormControl, Button, DropdownButton, Dropdown } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport { Row, Col, Tabs, Tab } from \"react-bootstrap\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport { CSVLink } from \"react-csv\";\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\nimport filterFactory, { textFilter } from 'react-bootstrap-table2-filter';\nimport TemplatePrintAdmin from '../../Template/TemplatePrintAdmin'\nimport QRcode from '../../QRcode/QRcode'\nimport * as FileSaver from 'file-saver';\nimport * as XLSX from 'xlsx';\nimport Aux from \"../../../hoc/_Aux\";\nimport MessageModal from \"./../../../Components/Alert/Alert\";\nimport ModalModifierColis from '../../ModificationColis/Modal.modification.colis'\nimport moment from \"moment\"\nimport i18n from './../../../i18n';\n\nvar urlbackend = require(\"../../../env/env\")();\nconst fileType = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\nconst fileExtension = '.xlsx';\nfunction AnnulationColis() {\n\n\n    const [pendingPackages, setpendingPackages] = useState([])\n    const [ongoingPackages, setongoingPackages] = useState([])\n    const [enlevePackages, setenlevePackages] = useState([])\n    const [showMessageParams, setShowMessageParams] = useState({\n        display: false,\n        type: \"success\",\n        message: null\n    })\n    const [drivers, setdrivers] = useState([])\n    //  const [driver, setdriver] = useState([])\n    //     };\n    // }\n    function priceFormatter(column, colIndex, { sortElement, filterElement }) {\n        return (\n            <div style={{ display: 'flex', flexDirection: 'column' }}>\n                {filterElement}\n                {column.text}\n                {sortElement}<span className=\"fa fa-filter\"></span>\n            </div>\n        );\n    }\n    const ModifierColis = (cell, row, rowIndex, formatExtraData) => {\n        return (\n            <div>\n\n                <ModalModifierColis colisModifier={row.colis} reloaddata={()=>getdata()}  > </ModalModifierColis>\n\n\n            </div>\n        );\n    };\n    const Impression = (cell, row, rowIndex, formatExtraData) => {\n        return (\n            <div>\n\n                <TemplatePrintAdmin Template={row} providerindex={row.colis}  > </TemplatePrintAdmin>\n\n\n            </div>\n        );\n    };\n    const getdata = () => {\n\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                'Access-Control-Allow-Headers': 'Authorization',\n                \"x-access-token\": localStorage.getItem('token'),\n                'Authorization': 'Bearer ' + localStorage.getItem('token'),\n            },\n        };\n\n        /*    axios.get(\n              urlbackend + \"/package/pending?current_page=1&per_page=500\",\n              config\n          ).then((response)=>{\n              this.setState({ pendingPackages: response.data.data.data });\n              console.log(response.data)\n          })\n          axios.get(urlbackend + \"/driver\", config).then((response)=>{\n              this.setState({ drivers: response.data.data });\n\n          }) */\n        var getpendingPackages = axios.get(\n            urlbackend + \"/admin/pickup/annuler?current_page=1&per_page=500\",\n            config\n        )\n       \n      \n        axios\n            .all([getpendingPackages])\n            .then(\n                axios.spread((...response) => {\n                    setpendingPackages(response[0].data.data.data);\n\n                    /*     this.setState({ pendingPackages: response[0].data.data.data });\n                        this.setState({ ongoingPackages: response[1].data.content });\n                        this.setState({ enlevePackages: response[2].data.content });\n\n                        this.setState({ drivers: response[3].data.content }); */\n                })\n            )\n            .catch((errors) => {\n                // react on errors.\n                console.error(errors);\n            });\n    }\n    useEffect(() => {\n        getdata()\n    }, [])\n    const nextstep = (id) => {\n        setShowMessageParams({\n            display: false,\n            type: \"success\",\n            message: null\n        });\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                'Access-Control-Allow-Headers': 'Authorization',\n                \"x-access-token\": localStorage.getItem('token'),\n                'Authorization': 'Bearer ' + localStorage.getItem('token'),\n            },\n        };\n        axios.put(urlbackend + \"/forcing/pickup/to_done\", { \"colis\": id }, config).then((response) => {\n            setShowMessageParams({\n                display: true,\n                type: \"success\",\n                message: \"Forçage effectué avec succès !\"\n            });\n            getdata()\n\n\n        }).catch(() => {\n            setShowMessageParams({\n                display: true,\n                type: \"danger\",\n                message: \"Une erreur s'est produite lors du forçage !\"\n            });\n            console.log(\"no\")\n        })\n\n    }\n    const nextstepongoing = (id) => {\n        setShowMessageParams({\n            display: false,\n            type: \"success\",\n            message: null\n        });\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                'Access-Control-Allow-Headers': 'Authorization',\n                \"x-access-token\": localStorage.getItem('token'),\n                'Authorization': 'Bearer ' + localStorage.getItem('token'),\n            },\n        };\n        axios.put(urlbackend + \"/forcing/pickup/to_ongoing\", { \"colis\": id }, config).then((response) => {\n            setShowMessageParams({\n                display: true,\n                type: \"success\",\n                message: \"Forçage effectué avec succès !\"\n            });\n            getdata()\n\n\n        }).catch(() => {\n            setShowMessageParams({\n                display: true,\n                type: \"danger\",\n                message: \"Une erreur s'est produite lors du forçage !\"\n            });\n            console.log(\"no\")\n        })\n\n    }\n    const forcageongoing = (cell, row, rowIndex, formatExtraData) => {\n\n\n        return (\n            <Button\n                variant=\"warning\"\n                onClick={() => nextstepongoing(row.colis.id)}\n            >\n                {\" \"}\n                <span className=\"fa fa-forward\"></span>\n            </Button>\n        );\n    }\n    const forcagedone = (cell, row, rowIndex, formatExtraData) => {\n\n\n        return (\n            <Button\n                variant=\"warning\"\n                onClick={() => nextstep(row.colis.id)}\n            >\n                {\" \"}\n                <span className=\"fa fa-forward\"></span>\n            </Button>\n        );\n    }\n\n\n    \n\n    const flowlink = (cell, row, rowIndex, formatExtraData) => {\n        //var k = drivers\n        return (\n            <InputGroup >\n                <FormControl\n                    as=\"select\"\n                    id=\"{driver}\"\n                    onChange={(value) =>\n                        savedriver(\n                            value.target.value,\n                            row.colis.id\n                        )\n                    }\n                    custom\n                >\n                    <option>Sélectionner un chauffeur</option>\n\n                    {drivers.map((driver, index) => (\n                        <option\n                            className=\" badge badge-info\"\n                            key={driver.id}\n                            value={driver.id}\n                        >\n                            {driver.username}\n                        </option>\n                    ))}\n                </FormControl>\n            </InputGroup>\n        );\n    }\n\n    const columns = [\n        {\n            dataField: \"colis.index_colis\",\n            text:i18n.t('package-number'),\n            headerFormatter: priceFormatter,\n            filter: textFilter({placeholder:i18n.t('search')}),\n            sort:true\n\n        },\n        {\n            dataField: \"colis.provider.username\",\n            text: i18n.t('sender'),\n            formatter: (cell, row) => {\n                return (<div>{`${row.colis.provider?.username} `} <br></br> {`${row.colis.provider?.phone_number}`}</div>);\n            },\n            headerFormatter: priceFormatter,\n            filter: textFilter({placeholder:i18n.t('search')}),\n\n        },\n        {\n            dataField: \"colis.name_complete\",\n            text: i18n.t('client-name'),\n            headerFormatter: priceFormatter,\n            filter: textFilter({placeholder:i18n.t('search')}),\n\n\n        },\n        {\n            dataField: \"colis.address\",\n            text: i18n.t('address'),\n            headerFormatter: priceFormatter,\n            filter: textFilter({placeholder:i18n.t('search')}),\n\n            style: { textAlign: \"center\" },\n\n\n            formatter: (cell, row) => {\n                return (<div>{`${row.colis.gouvernorat} `} <br></br> {`${row.colis.address}`}</div>);\n            }\n            // formatter: this.linkFollow,\n\n        },\n        {\n            dataField: \"colis.phone_number\",\n            text: i18n.t('phone-number'),\n            headerFormatter: priceFormatter,\n            filter: textFilter({placeholder:i18n.t('search')}),\n\n        },\n\n\n\n\n \n        {\n            dataField: \"colis.name_complete\",\n            text: i18n.t('qr-code'),\n            formatter: (cell, row) => {\n                return (\n                    <div>\n\n                        <QRcode url={row.colis.id} />\n                    </div>\n                );\n            }\n\n\n        },\n      \n\n\n        \n\n\n\n    ];\n    const columnsongoing = [\n        {\n            dataField: \"colis.index_colis\",\n            text: \"Numéro colis\",\n            headerFormatter: priceFormatter,\n            filter: textFilter({placeholder:i18n.t('search')}),\n            sort:true\n\n        },\n        {\n            dataField: \"colis.provider.username\",\n            text: \"Expéditeur\",\n            formatter: (cell, row) => {\n                return (<div>{`${row.colis.provider?.username} `} <br></br> {`${row.colis.provider?.phone_number}`}</div>);\n            },\n            headerFormatter: priceFormatter,\n            filter: textFilter({placeholder:i18n.t('search')}),\n        },\n\n        {\n            dataField: \"colis.name_complete\",\n            text: \"Client\",\n            \n            headerFormatter: priceFormatter,\n            filter: textFilter({placeholder:i18n.t('search')}),\n\n        },\n        {\n            dataField: \"colis.address\",\n            text: \"addresse de client\",\n\n            style: { textAlign: \"center\" },\n\n\n            formatter: (cell, row) => {\n                return (<div>{`${row.colis.gouvernorat} `} <br></br> {`${row.colis.address}`}</div>);\n            },\n            headerFormatter: priceFormatter,\n            filter: textFilter({placeholder:i18n.t('search')})\n        },\n        {\n            dataField: \"colis.phone_number\",\n            text: \"N. de téléphone\",\n            headerFormatter: priceFormatter,\n            filter: textFilter({placeholder:i18n.t('search')})\n        },\n\n        {\n            dataField: \"driver.username\",\n            text: \"chauffeur affecté\",\n            headerFormatter: priceFormatter,\n            filter: textFilter({placeholder:i18n.t('search')})\n        },\n       \n        {\n            dataField: \"driver.username\",\n            text: \"Forcage étapes suivantes\",\n            formatter: forcagedone,\n            style: { textAlign: \"center\" },\n\n        },\n        {\n            dataField: \"colis.name_complete\",\n            text: \"qrcode\",\n            formatter: (cell, row) => {\n                return (\n                    <div>\n\n                        <QRcode url={row.colis.id} />\n                    </div>\n                );\n            }\n\n\n        },\n        {\n            dataField: \"driver.username\",\n            text: \"Modifier\",\n            formatter: Impression,\n            style: { textAlign: \"center\" },\n\n        },\n        {\n            dataField: \"colis\",\n            text: \"Modifier\",\n            formatter: ModifierColis,\n            style: { textAlign: \"center\" },\n\n        },\n\n\n    ];\n    const columnsdone = [\n        {\n            dataField: \"colis.index_colis\",\n            text: \"Numéro colis\",\n\n            headerFormatter: priceFormatter,\n            filter: textFilter({placeholder:i18n.t('search')})\n        },\n        {\n            dataField: \"colis.provider.username\",\n            text: \"Expéditeur\",\n            formatter: (cell, row) => {\n                return (<div>{`${row.colis.provider?.username} `} <br></br> {`${row.colis.provider?.phone_number}`}</div>);\n            },\n            headerFormatter: priceFormatter,\n            filter: textFilter({placeholder:i18n.t('search')})\n        },\n        {\n            dataField: \"colis.name_complete\",\n            text: \"Client\",\n            headerFormatter: priceFormatter,\n            filter: textFilter({placeholder:i18n.t('search')})\n\n        },\n        {\n            dataField: \"colis.address\",\n            text: \"addresse de client\",\n\n            style: { textAlign: \"center\" },\n            headerFormatter: priceFormatter,\n            filter: textFilter({placeholder:i18n.t('search')}),\n\n            formatter: (cell, row) => {\n                return (<div>{`${row.colis.gouvernorat} `} <br></br> {`${row.colis.address}`}</div>);\n            }\n            // formatter: this.linkFollow,\n\n        },\n        {\n            dataField: \"colis.phone_number\",\n            text: \"N. de téléphone\",\n            headerFormatter: priceFormatter,\n            filter: textFilter({placeholder:i18n.t('search')}),\n\n        },\n\n        {\n            dataField: \"driver.username\",\n            text: \"chauffeur affecté\",\n            headerFormatter: priceFormatter,\n            filter: textFilter({placeholder:i18n.t('search')}),\n        },\n        {\n            dataField: \"driver.username\",\n            text: \"chauffeur affecté\",\n            formatter: (cell, row) => {\n                return (<QRcode url={row.colis.id} />);\n            }\n\n        },\n\n        {\n            dataField: \"driver.username\",\n            text: \"check magasinier (entrée stock)\",\n            style: { textAlign: \"center\" },\n            formatter: (cell, row) => {\n\n                if (row.check_magasinier === 1) { return <i className=\"fa fa-circle text-c-green f-10 m-r-15\" /> } else {\n                    return <i className=\"fa fa-circle text-c-red f-10 m-r-15\" />\n                }\n            }\n        },\n     \n        {\n            dataField: \"driver.username\",\n            text: \"Impression\",\n            formatter: Impression,\n            style: { textAlign: \"center\" },\n\n        },\n        {\n            dataField: \"colis\",\n            text: \"Modifier\",\n            formatter: ModifierColis,\n            style: { textAlign: \"center\" },\n\n        },\n\n    ];\n\n\n    const savedriver = (iddriver, idpacket) => {\n        setShowMessageParams({\n            display: false,\n            type: \"success\",\n            message: null\n        });\n\n        //\n        console.log({ driver: iddriver, coliss: [idpacket] })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                'Access-Control-Allow-Headers': 'Authorization',\n                \"x-access-token\": localStorage.getItem('token'),\n                'Authorization': 'Bearer ' + localStorage.getItem('token'),\n            },\n        };\n        axios.put(\n            urlbackend + \"/pikup/add/driver\",\n            { driver: iddriver, coliss: [idpacket] },\n            config\n        )\n            .then((response) => {\n                setShowMessageParams({\n                    display: true,\n                    type: \"success\",\n                    message: \"Chauffeur mis à jour avec succès !\"\n                });\n                console.log(\"add Succefull:\", showMessageParams.display);\n                //alert(\"add Succefull\");\n                console.log(\"response.data\", response.data);\n                getdata()\n\n                //this.componentDidMount();\n                //this.reloaddata()\n                //  this.setState({ drivers: [] });\n            })\n            .catch((e) => {\n                console.log(\"error data=>\", e);\n                setShowMessageParams({\n                    display: true,\n                    type: \"danger\",\n                    message: \"Une erreur s'est produite lors de mise à jour du chauffeur !\"\n                });\n            });\n    }\n    useEffect(() => {\n        // console.log(\"show message value:\",showMessage);\n    }, [showMessageParams]);\n    const downloadfile = (type, list) => {\n      if(type === \"csv\"){\n        var listdownload = list.map((e)=>({\"Numéro colis\": e.colis.index_colis , \"Expéditeur\": e.colis.provider.username ,\"N. de téléphone Expéditeur\" :e.colis.provider.phone_number ,\n\n    \"client \" : e.colis.name_complete , \"N. de téléphone\": e.colis.phone_number , \"gouvernorat\": e.colis.gouvernorat ,\"addresse\": e.colis.city+\":\" +e.colis.address ,\"prix\" : e.colis.price , \"type paiment\":e.colis.payment_mode ,\"type d'envoi\": e.colis.type_envoi,\n    \"date created\":moment(e.colis.created_at).format(\"DD/MM/YYYY, HH:mm\")\n    \n    }))\n        const ws = XLSX.utils.json_to_sheet(listdownload);\n        const wb = { Sheets: { 'data': ws }, SheetNames: ['data'] };\n        const excelBuffer = XLSX.write(wb, { bookType: 'xlsx', type: 'array' });\n        const data = new Blob([excelBuffer], {type: fileType});\n        FileSaver.saveAs(data, \"fileName\" + fileExtension);\n      }else{\n\n        alert(\"save pdf\")\n      }\n    }\n    // render() {\n    return (\n        <Aux>\n\n            <Row>\n                <Col>\n                    <button className=\"btn btn-info\" onClick={() => getdata()} > <span className=\"fa fa-refresh\"></span>{i18n.t('refresh')}</button>\n\n\n                    <hr />\n                    <Tabs defaultActiveKey=\"home\">\n                        <Tab eventKey=\"home\" title={i18n.t('cancel-name')}>\n                            {/* <div>value:{showMessage.toString()}</div> */}\n                            <Card className=\"card-box mb-4\">\n                                <div className=\"card-header\">\n                                    {/*   <Button\n                                        variant=\"success\"\n                                        onClick={() => nextstep(\"ee\")}\n                                    >\n                                        {\" \"}\n                                        <span className=\"fa fa-download\"></span>\n                                    </Button> */}\n                                  \n                                    <div className=\"card-header--title\">\n                                        {/* <b>This table card has custom content</b> */}\n                                    </div>\n                                    <Box className=\"card-header--actions\">\n                                        <IconButton\n                                            size=\"small\"\n                                            color=\"primary\"\n                                            className=\"text-primary\"\n                                            title=\"View details\"\n                                        ></IconButton>\n                                    </Box>\n                                </div>\n                                <CardContent className=\"p-0\">\n                                    <div className=\"table-responsive\">\n                                        <div className=\"table-responsive\" style={{ height: \"2000px\" }}>\n                                            <div className=\"app-row\">\n                                                <div className=\"app-col-xs-12 app-col-md-12\">\n                                                    <BootstrapTable\n                                                        striped\n                                                        bordered\n                                                        hover\n                                                        variant=\"dark\"\n                                                        //   expandRow={expandRow}\n                                                        bootstrap4={true}\n                                                        keyField=\"id\"\n                                                        data={pendingPackages}\n                                                        columns={columns}\n                                                        pagination={paginationFactory({\n                                                            sizePerPage: 15,\n                                                            sizePerPageList: [5, 10, 15, 20, 25],\n                                                        })}\n                                                        filter={filterFactory()}\n                                                        headerClasses=\"table thead-light mb-0\"\n                                                    ></BootstrapTable>\n\n\n\n\n                                                </div>\n                                            </div>\n                                        </div>\n                                        {/*      <table className=\"table  table-hover text-nowrap mb-0\">\n                                            <thead className=\"table thead-light mb-0\">\n                                                <tr>\n                                                    <th>Fournisseur</th>\n                                                    <th className=\"text-center\">customer</th>\n                                                    <th className=\"text-center\">address</th>\n                                                    <th className=\"text-center\">Chauffeur</th>\n                                                    <th className=\"text-center\">Date prélèvement</th>\n                                                    <th className=\"text-center\">Actions</th>\n                                                    <th className=\"text-center\"></th>\n                                                </tr>\n                                            </thead>\n                                            <tbody>\n                                                {pendingPackages.map((pickup, index) => (\n                                                    <tr key={index}>\n                                                        <td>\n                                                            <div className=\"d-flex align-items-center\">\n                                                                <a\n                                                                    href=\"#/\"\n                                                                    onClick={(e) => e.preventDefault()}\n                                                                    className=\"font-weight-bold text-black\"\n                                                                    title=\"...\"\n                                                                >\n\n                                                                    {pickup.check_replanification === 1 ? <i className=\"fa fa-circle text-c-red f-10 m-r-15\" /> : <i className=\"fa fa-circle text-c-green f-10 m-r-15\" />}\n                                                                    {pickup.colis.provider.username} :{\" \"}\n                                                                    {pickup.colis.provider.phone_number}\n                                                                </a>\n\n                                                            </div>\n                                                        </td>\n                                                        <td className=\"text-center\">\n                                                            <div className=\"h-auto \">\n                                                                {pickup.colis.name_complete} : {pickup.colis.phone_number}\n                                                                <span >\n\n                                                                </span>\n                                                            </div>\n                                                        </td>\n                                                        <td className=\"text-center\">\n                                                            <div className=\"h-auto \">\n                                                                {pickup.colis.code_postal} :{\" \"}\n                                                                {pickup.colis.address}\n                                                            </div>\n                                                        </td>\n                                                        <td className=\"text-center\">\n\n                                                            {pickup.driver\n                                                                ? pickup.driver.username\n                                                                : <div style={{ background: \"#e863da\" }}> \"not approved\" </div>}\n\n                                                        </td>\n                                                        <td className=\"text-center\">\n                                                            <div className=\"h-auto \">\n                                                                {pickup.colis.created_at}\n                                                            </div>\n                                                        </td>\n\n                                                        <td>\n                                                            <InputGroup className=\"mb-3\">\n                                                                <FormControl\n                                                                    as=\"select\"\n                                                                    id=\"{driver}\"\n                                                                    onChange={(value) =>\n                                                                        savedriver(\n                                                                            value.target.value,\n                                                                            pickup.colis.id\n                                                                        )\n                                                                    }\n                                                                    custom\n                                                                >\n                                                                    <option>Sélectionner un chauffeur</option>\n\n                                                                    {drivers.map((driver, index) => (\n                                                                        <option\n                                                                            className=\" badge badge-info\"\n                                                                            key={driver.id}\n                                                                            value={driver.id}\n                                                                        >\n                                                                            {driver.username}\n                                                                        </option>\n                                                                    ))}\n                                                                </FormControl>\n                                                            </InputGroup>\n                                                        </td>\n                                                        <td>\n\n                                                            <TemplatePrint Template={pickup} > </TemplatePrint>\n                                                        </td>\n                                                        <td>\n                                                            {/* <div className=\"h-auto  badge badge-danger\"> \n                          <button className=\"badge-info\" onClick={()=>this.savedriver()}>savedriver</button>\n\n                    </div> \n                        <div className=\" badge badge-danger\">\n                          delete\n\n                   </div> \n                                                        </td>\n                                                        <td className=\"text-center\">\n                                                            <Box>\n                                                                <IconButton color=\"primary\" size=\"small\">\n                                                                    {/* <FontAwesomeIcon icon={['fas', 'ellipsis-h']} /> \n                                                                </IconButton>\n                                                            </Box>\n                                                        </td>\n                                                    </tr>\n                                                ))}\n                                            </tbody>\n                                        </table>\n                                    */}\n                                    </div>\n                                </CardContent>\n                            </Card>\n                        </Tab>\n                </Tabs>\n                </Col>\n            </Row>\n        </Aux>\n    );\n\n}\n\nexport default AnnulationColis;\n"],"names":["urlbackend","require","useState","pendingPackages","setpendingPackages","display","type","message","showMessageParams","priceFormatter","column","colIndex","sortElement","filterElement","style","flexDirection","text","className","getdata","config","headers","localStorage","getItem","getpendingPackages","axios","then","response","data","catch","errors","console","error","useEffect","columns","dataField","i18n","headerFormatter","filter","textFilter","placeholder","sort","formatter","cell","row","colis","provider","username","phone_number","textAlign","gouvernorat","address","url","id","onClick","defaultActiveKey","eventKey","title","size","color","height","striped","bordered","hover","variant","bootstrap4","keyField","pagination","paginationFactory","sizePerPage","sizePerPageList","filterFactory","headerClasses"],"sourceRoot":""}