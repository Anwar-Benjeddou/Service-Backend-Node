{"version":3,"file":"static/js/7195.9cde2933.chunk.js","mappings":"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","sources":["Routes/Admin/packagedecision/Livraision.Decision.js","Routes/Admin/packagedecision/Console.Decision.js","Routes/Admin/packagedecision/Console.Colis.js","Routes/Admin/packagedecision/Package.decision.js","Routes/QRcode/QRcode.js","../node_modules/@material-ui/core/node_modules/react-transition-group/esm/TransitionGroupContext.js","../node_modules/classnames/index.js","../node_modules/react-bootstrap/esm/CardImg.js","../node_modules/react-bootstrap/esm/Card.js"],"sourcesContent":["\nimport React, { useEffect, useState } from 'react';\nimport {\n    Row,\n    Col,\n    Card,\n    Button,\n    Modal,\n    FormControl,\n    InputGroup\n} from \"react-bootstrap\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\n\nimport Aux from \"../../../hoc/_Aux\";\nimport axios from 'axios';\nvar urlbackend = require(\"../../../env/env\")();\nconst phoneRegExp = /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/;\nconst SignupSchema = Yup.object().shape({\n    email: Yup.string().email(\"Invalid Email\").required(\"Email is Required\"),\n    phone_number: Yup.string()\n        .matches(phoneRegExp, \"Phone number is not valid\")\n        .required(\"Phone is Required\"),\n    city: Yup.string()\n        .min(2, \"City is Too Short!\")\n        .max(20, \"City is Too Long!\")\n        .required(\"City is Required\"),\n    description: Yup.string()\n        .min(2, \"description is Too Short!\")\n        .max(20, \"description is Too Long!\")\n        .required(\"description is Required\"),\n    name: Yup.string()\n        .min(2, \"name is Too Short!\")\n        .max(20, \"name is Too Long!\")\n        .required(\"name is Required\"),\n    code: Yup.string()\n        .min(2, \"code is Too Short!\")\n        .max(20, \"code is Too Long!\")\n        .required(\"code is Required\"),\n});\nfunction LivraisonDecision(props) {\n    const [show, setShow] = useState(false);\n    //const [pickupsUpdate] = useState(props.pickup)\n    const [drivers, setdriver] = useState([])\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n    useEffect(() => {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                'Access-Control-Allow-Headers': 'Authorization',\n                \"x-access-token\": localStorage.getItem('token'),\n                'Authorization': 'Bearer ' + localStorage.getItem('token'),\n            },\n        };\n\n        axios\n            .get(urlbackend + \"/driver\", config)\n            .then((response) => {\n                console.log(\"this respon list\", response.data);\n                //this.setState({ Drivers: response.data.data });\n                setdriver(response.data.data)\n            })\n            .catch((e) => {\n                console.log(e);\n            });\n    }, [])\n    const handlSubmit = (values) => {\n       \n     if(values.driver){\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                'Access-Control-Allow-Headers': 'Authorization',\n                \"x-access-token\": localStorage.getItem('token'),\n                'Authorization': 'Bearer ' + localStorage.getItem('token'),\n            },\n        };\n        axios.post(urlbackend + \"/mobile/delivery/add\", {driver:values.driver, colis: [props.pickup.colis.id]}, config)\n            .then(response => {\n                alert(\"add Succefull\")\n                console.log(response.data)\n                props.change()\n                handleClose()\n            })\n            .catch(e => {\n                console.log(e)\n            })\n     }else{\n         alert(\"choisir un chauffeur\")\n     }\n    };\n    const showForm = ({\n        values,\n        errors,\n        touched,\n        handleChange,\n        handleSubmit,\n        handleBlur,\n        setFieldValue,\n        isSubmitting,\n        dirty,\n        isValid,\n        handleReset,\n    }) => {\n        // console.log(errors);\n        return (\n            <Aux>\n                <Row>\n                    <Col>\n                        <Card>\n                            <Card.Header>\n                                <Card.Title as=\"h5\">Colis dilevred</Card.Title>\n                            </Card.Header>\n                            <Card.Body>\n                                <Row>\n                                    <Col md={12}>\n                                        <label htmlFor=\"basic-url\">driver</label>\n\n                                        <InputGroup className=\"mb-3\">\n                                            <FormControl\n                                                as=\"select\"\n                                                id=\"driver\"\n                                                custom\n                                                onChange={handleChange}\n                                                onBlur={handleBlur}\n                                                value={values.driver}\n                                            >\n                                                <option>choose driver</option>\n\n                                                {drivers.map((driver, index) => (\n                                                    <option key={driver.id} value={driver.id}>\n                                                        {driver.username}\n                                                    </option>\n                                                ))}\n                                            </FormControl>\n                                        </InputGroup>\n\n                                       {/*  <label htmlFor=\"basic-url\">Type Of Colis</label>\n\n                                        <InputGroup className=\"mb-3\">\n                                            <FormControl\n                                                as=\"select\"\n                                                id=\"type\"\n                                                custom\n                                                onChange={handleChange}\n                                                onBlur={handleBlur}\n                                                value={values.type}\n                                            >\n                                                <option>choose type</option>\n\n                                                {[\"Docs\", \"Envelope\", \"Box\"].map((type, index) => (\n                                                    <option key={type} value={type}>\n                                                        {type}\n                                                    </option>\n                                                ))}\n                                            </FormControl>\n                                        </InputGroup>\n */}\n                                    </Col>\n                                    <Col md={6}>\n\n\n\n\n\n\n\n\n                                    </Col>\n                                </Row>\n\n                                <Button\n                                    onClick={() => {\n                                        handlSubmit(values);\n                                        handleReset();\n                                        // console.log(values);\n                                    }}\n                                >\n                                    Save\n                </Button>\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                </Row>\n            </Aux>\n        );\n    };\n    return (\n        <>\n            <Button variant=\"info\"\n                onClick={handleShow}> <span className=\"fa fa-paper-plane\"></span></Button>\n\n\n            <Modal show={show} onHide={handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Colis dilevred   </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n\n\n                    <Formik\n                        initialValues={{\n                        }}\n                        onSubmit={(values, { setSubmitting }) => {\n                            this.submitForm(values);\n                            setSubmitting(false);\n                        }}\n                        validationSchema={SignupSchema}\n                    >\n                        {(props) => showForm(props)}\n                    </Formik>\n\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        Close\n            </Button>\n                    {/* <Button variant=\"primary\" onClick={handleClose}>\n            Save Changes\n            </Button> */}\n                </Modal.Footer>\n            </Modal>\n        </>\n    );\n}\n\nexport default LivraisonDecision","\nimport React, { useEffect, useState } from 'react';\nimport {\n    Row,\n    Col,\n    Card,\n    Button,\n    Modal,\n    FormControl,\n    InputGroup\n} from \"react-bootstrap\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\n\nimport Aux from \"../../../hoc/_Aux\";\nimport axios from 'axios';\nvar urlbackend = require(\"../../../env/env\")();\nconst phoneRegExp = /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/;\nconst SignupSchema = Yup.object().shape({\n    email: Yup.string().email(\"Invalid Email\").required(\"Email is Required\"),\n    phone_number: Yup.string()\n        .matches(phoneRegExp, \"Phone number is not valid\")\n        .required(\"Phone is Required\"),\n    city: Yup.string()\n        .min(2, \"City is Too Short!\")\n        .max(20, \"City is Too Long!\")\n        .required(\"City is Required\"),\n    description: Yup.string()\n        .min(2, \"description is Too Short!\")\n        .max(20, \"description is Too Long!\")\n        .required(\"description is Required\"),\n    name: Yup.string()\n        .min(2, \"name is Too Short!\")\n        .max(20, \"name is Too Long!\")\n        .required(\"name is Required\"),\n    code: Yup.string()\n        .min(2, \"code is Too Short!\")\n        .max(20, \"code is Too Long!\")\n        .required(\"code is Required\"),\n});\nfunction ConsoleDecision(props) {\n    const [show, setShow] = useState(false);\n    //const [pickupsUpdate] = useState(props.pickup)\n    const [drivers, setdriver] = useState([])\n    const [agences, setagences] = useState([])\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n    useEffect(() => {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                'Access-Control-Allow-Headers': 'Authorization',\n                \"x-access-token\": localStorage.getItem('token'),\n                'Authorization': 'Bearer ' + localStorage.getItem('token'),\n            },\n        };\n\n        axios\n            .get(urlbackend + \"/driver\", config)\n            .then((response) => {\n                console.log(\"this respon list\", response.data);\n                //this.setState({ Drivers: response.data.data });\n                setdriver(response.data.data)\n            })\n            .catch((e) => {\n                console.log(e);\n            });\n            axios\n            .get(urlbackend + \"/agence\", config)\n            .then((response) => {\n                console.log(\"this respon list\", response.data);\n                //this.setState({ Drivers: response.data.data });\n                setagences(response.data.data)\n            })\n            .catch((e) => {\n                console.log(e);\n            });\n    }, [])\n    const handlSubmit = (values) => {\n        console.log(values);\n        console.log(props.pickup)\n        console.log({\n            colis: [{\n                address: props.pickup.address,\n                customer: props.pickup.id,\n                type: values.type,\n                provider: props.pickup.provider\n\n            }]\n        })\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                'Access-Control-Allow-Headers': 'Authorization',\n                \"x-access-token\": localStorage.getItem('token'),\n                'Authorization': 'Bearer ' + localStorage.getItem('token'),\n            },\n        };\n        axios.post(urlbackend + \"/mobile/console/add\", {driver:values.driver, agence_to:values.agence,colis: [props.pickup.colis.id]}, config)\n            .then(response => {\n                alert(\"add Succefull\")\n                console.log(response.data)\n                props.change()\n                handleClose()\n            })\n            .catch(e => {\n                console.log(e)\n            })\n    };\n    const showForm = ({\n        values,\n        errors,\n        touched,\n        handleChange,\n        handleSubmit,\n        handleBlur,\n        setFieldValue,\n        isSubmitting,\n        dirty,\n        isValid,\n        handleReset,\n    }) => {\n        // console.log(errors);\n        return (\n            <Aux>\n                <Row>\n                    <Col>\n                        <Card>\n                            <Card.Header>\n                                <Card.Title as=\"h5\">Colis dilevred</Card.Title>\n                            </Card.Header>\n                            <Card.Body>\n                                <Row>\n                                    <Col md={12}>\n                                        <label htmlFor=\"basic-url\">driver</label>\n\n                                        <InputGroup className=\"mb-3\">\n                                            <FormControl\n                                                as=\"select\"\n                                                id=\"driver\"\n                                                custom\n                                                onChange={handleChange}\n                                                onBlur={handleBlur}\n                                                value={values.driver}\n                                            >\n                                                <option>choose driver</option>\n\n                                                {drivers.map((driver, index) => (\n                                                    <option key={driver.id} value={driver.id}>\n                                                        {driver.username}\n                                                    </option>\n                                                ))}\n                                            </FormControl>\n                                        </InputGroup>\n\n                                         <label htmlFor=\"basic-url\">Agence Vers</label>\n\n                                        <InputGroup className=\"mb-3\">\n                                            <FormControl\n                                                as=\"select\"\n                                                id=\"agence\"\n                                                custom\n                                                onChange={handleChange}\n                                                onBlur={handleBlur}\n                                                value={values.type}\n                                            >\n                                                <option>choose type</option>\n\n                                                {agences.map((agence, index) => (\n                                                    <option key={agence} value={agence.id}>\n                                                        {agence.name}\n                                                    </option>\n                                                ))}\n                                            </FormControl>\n                                        </InputGroup>\n\n                                    </Col>\n                                    <Col md={6}>\n\n\n\n\n\n\n\n\n                                    </Col>\n                                </Row>\n\n                                <Button\n                                    onClick={() => {\n                                        handlSubmit(values);\n                                        handleReset();\n                                        // console.log(values);\n                                    }}\n                                >\n                                    Save\n                </Button>\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                </Row>\n            </Aux>\n        );\n    };\n    return (\n        <>\n            <Button variant=\"info\"\n                onClick={handleShow}> <span className=\"fa fa-paper-plane\"></span></Button>\n\n\n            <Modal show={show} onHide={handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Colis dilevred   </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n\n\n                    <Formik\n                        initialValues={{\n                        }}\n                        onSubmit={(values, { setSubmitting }) => {\n                            this.submitForm(values);\n                            setSubmitting(false);\n                        }}\n                        validationSchema={SignupSchema}\n                    >\n                        {(props) => showForm(props)}\n                    </Formik>\n\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        Close\n            </Button>\n                    {/* <Button variant=\"primary\" onClick={handleClose}>\n            Save Changes\n            </Button> */}\n                </Modal.Footer>\n            </Modal>\n        </>\n    );\n}\n\nexport default ConsoleDecision","\nimport React, { useEffect, useState } from 'react';\nimport {\n    Row,\n    Col,\n    Card,\n    Button,\n    Modal,\n    FormControl,\n    InputGroup\n} from \"react-bootstrap\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\n\nimport Aux from \"../../../hoc/_Aux\";\nimport axios from 'axios';\nvar urlbackend = require(\"../../../env/env\")();\nconst phoneRegExp = /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/;\nconst SignupSchema = Yup.object().shape({\n    email: Yup.string().email(\"Invalid Email\").required(\"Email is Required\"),\n    phone_number: Yup.string()\n        .matches(phoneRegExp, \"Phone number is not valid\")\n        .required(\"Phone is Required\"),\n    city: Yup.string()\n        .min(2, \"City is Too Short!\")\n        .max(20, \"City is Too Long!\")\n        .required(\"City is Required\"),\n    description: Yup.string()\n        .min(2, \"description is Too Short!\")\n        .max(20, \"description is Too Long!\")\n        .required(\"description is Required\"),\n    name: Yup.string()\n        .min(2, \"name is Too Short!\")\n        .max(20, \"name is Too Long!\")\n        .required(\"name is Required\"),\n    code: Yup.string()\n        .min(2, \"code is Too Short!\")\n        .max(20, \"code is Too Long!\")\n        .required(\"code is Required\"),\n});\nfunction Consolecolis(props) {\n    const [show, setShow] = useState(false);\n    //const [pickupsUpdate] = useState(props.pickup)\n    const [drivers, setdriver] = useState([])\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n    useEffect(() => {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                'Access-Control-Allow-Headers': 'Authorization',\n                \"x-access-token\": localStorage.getItem('token'),\n                'Authorization': 'Bearer ' + localStorage.getItem('token'),\n            },\n        };\n\n        axios\n            .get(urlbackend + \"/driver\", config)\n            .then((response) => {\n                console.log(\"this respon list\", response.data);\n                //this.setState({ Drivers: response.data.data });\n                setdriver(response.data.data)\n            })\n            .catch((e) => {\n                console.log(e);\n            });\n    }, [])\n    const handlSubmit = (values) => {\n       if(values.driver){\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                'Access-Control-Allow-Headers': 'Authorization',\n                \"x-access-token\": localStorage.getItem('token'),\n                'Authorization': 'Bearer ' + localStorage.getItem('token'),\n            },\n        };\n        axios.post(urlbackend + \"/mobile/delivery/add\", {driver:values.driver, colis: [props.pickup.colis.id]}, config)\n            .then(response => {\n                alert(\"add Succefull\")\n                console.log(response.data)\n                props.change()\n                handleClose()\n            })\n            .catch(e => {\n                console.log(e)\n            })\n       } else{\n           alert('choose driver')\n       }\n    };\n    const showForm = ({\n        values,\n        errors,\n        touched,\n        handleChange,\n        handleSubmit,\n        handleBlur,\n        setFieldValue,\n        isSubmitting,\n        dirty,\n        isValid,\n        handleReset,\n    }) => {\n        // console.log(errors);\n        return (\n            <Aux>\n                <Row>\n                    <Col>\n                        <Card>\n                            <Card.Header>\n                                <Card.Title as=\"h5\">Console dilevred</Card.Title>\n                            </Card.Header>\n                            <Card.Body>\n                                <Row>\n                                    <Col md={12}>\n                                        <label htmlFor=\"basic-url\">driver</label>\n\n                                        <InputGroup className=\"mb-3\">\n                                            <FormControl\n                                                as=\"select\"\n                                                id=\"driver\"\n                                                custom\n                                                onChange={handleChange}\n                                                onBlur={handleBlur}\n                                                value={values.driver}\n                                            >\n                                                <option>choose driver</option>\n\n                                                {drivers.map((driver, index) => (\n                                                    <option key={driver.id} value={driver.id}>\n                                                        {driver.username}\n                                                    </option>\n                                                ))}\n                                            </FormControl>\n                                        </InputGroup>\n\n                                       {/*  <label htmlFor=\"basic-url\">Type Of Colis</label>\n\n                                        <InputGroup className=\"mb-3\">\n                                            <FormControl\n                                                as=\"select\"\n                                                id=\"type\"\n                                                custom\n                                                onChange={handleChange}\n                                                onBlur={handleBlur}\n                                                value={values.type}\n                                            >\n                                                <option>choose type</option>\n\n                                                {[\"Docs\", \"Envelope\", \"Box\"].map((type, index) => (\n                                                    <option key={type} value={type}>\n                                                        {type}\n                                                    </option>\n                                                ))}\n                                            </FormControl>\n                                        </InputGroup>\n */}\n                                    </Col>\n                                    <Col md={6}>\n\n\n\n\n\n\n\n\n                                    </Col>\n                                </Row>\n\n                                <Button\n                                    onClick={() => {\n                                        handlSubmit(values);\n                                        handleReset();\n                                        // console.log(values);\n                                    }}\n                                >\n                                    Save\n                </Button>\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                </Row>\n            </Aux>\n        );\n    };\n    return (\n        <>\n            <Button variant=\"info\"\n                onClick={handleShow}> <span className=\"fa fa-paper-plane\"></span></Button>\n\n\n            <Modal show={show} onHide={handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Colis dilevred   </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n\n\n                    <Formik\n                        initialValues={{\n                            driver:\"\"\n                        }}\n                        onSubmit={(values, { setSubmitting }) => {\n                            this.submitForm(values);\n                            setSubmitting(false);\n                        }}\n                        validationSchema={SignupSchema}\n                    >\n                        {(props) => showForm(props)}\n                    </Formik>\n\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        Close\n            </Button>\n                    {/* <Button variant=\"primary\" onClick={handleClose}>\n            Save Changes\n            </Button> */}\n                </Modal.Footer>\n            </Modal>\n        </>\n    );\n}\n\nexport default Consolecolis","import React from \"react\";\n\n//import { PageTitle } from '../../layout-components';\nimport { IconButton, Box, Card, CardContent } from \"@material-ui/core\";\nimport axios from \"axios\";\nimport { Row, Col, Tabs, Tab, InputGroup, FormControl, Button } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\n\nimport QRcode from '../../QRcode/QRcode'\n\nimport Aux from \"../../../hoc/_Aux\";\nimport LivraisonDecision from \"./Livraision.Decision\";\n// import ModalExchange from \"./exchange/ModalExchange\";\nimport ConsoleDecision from './Console.Decision'\nimport Consolecolis from './Console.Colis'\n\nvar urlbackend = require(\"../../../env/env\")();\n\nclass PackageDecision extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            pendingExch: [],\n            enlevePackages: [],\n            getDoneExchfroms: [],\n            drivers: [],\n            driver: \"\",\n            providers: [],\n            agences: []\n        };\n    }\n\n    componentDidMount() {\n        this.setState({ enlevePackages: []});\n        this.setState({ getDoneExchfroms: [] })\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                'Access-Control-Allow-Headers': 'Authorization',\n                \"x-access-token\": localStorage.getItem('token'),\n                'Authorization': 'Bearer ' + localStorage.getItem('token'),\n            },\n        };\n\n        var getDoneExch = axios.get(urlbackend + \"/admin/pickup/list?current_page=1&per_page=500\", config);\n        var getDoneExchfrom = axios.get(urlbackend + \"/console/for_delivery?current_page=1&per_page=500\", config);\n\n        /*  var getEnlevePack = axios.get(\n           urlbackend + \"/package/done \",\n           config\n         ); */\n        var getprovider = axios.get(urlbackend + \"/provider\", config)\n         var getagences = axios.get(urlbackend + \"/agence\", config)\n\n\n        axios\n            .all([getDoneExch, getprovider, getDoneExchfrom ,getagences])\n            .then(\n                axios.spread((...response) => {\n                    console.log(\"this respon list0\", response[2].data.data.data);\n                    //   console.log(\"this respon  providerssss list1\", response[2].data);\n                      this.setState({ agences: response[3].data.data });\n\n                    this.setState({ enlevePackages: Object.values(response[0].data.data.data).filter(e=>e.check_magasinier === 1) });\n                    this.setState({ providers: response[1].data.data })\n                    this.setState({ getDoneExchfroms: Object.values(response[2].data.data.data) })\n\n\n                })\n            )\n            .catch((errors) => {\n                // react on errors.\n                console.error(errors);\n            });\n    }\n    savedriver(iddriver, idpacket) {\n        //\n        console.log(iddriver);\n        console.log(idpacket);\n\n\n\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Access-Control-Allow-Headers\": \"x-access-token\",\n                \"x-access-token\": localStorage.getItem('token')\n            },\n        };\n\n        axios\n            .post(\n                urlbackend + \"/package/edit/driver \",\n                { driver: iddriver, package: idpacket },\n                config\n            )\n            .then((response) => {\n                alert(\"add Succefull\");\n                console.log(response.data);\n                this.componentDidMount();\n            })\n            .catch((e) => {\n                console.log(e);\n            });\n    }\n    reloaddata() {\n        this.componentDidMount()\n    }\n    changepackagefromagence(e) {\n        console.log(\"this.state.providers\", e.target.value)\n        console.log(\"this.state.providers\", this.state.enlevePackages)\n        var lementchange = e.target.value\n        // this.setState({enlevePackages: newtable.map(element=> element.package.package ===e.target.value)})\n        if (lementchange === \"all\") {\n            const config = {\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Access-Control-Allow-Headers': 'Authorization',\n                    \"x-access-token\": localStorage.getItem('token'),\n                    'Authorization': 'Bearer ' + localStorage.getItem('token'),\n                },\n            };\n            axios.get(\n                urlbackend + \"/exchange/forDelivery\",\n                config\n            ).then((Response) => {\n                this.setState({ enlevePackages: Response.data.data.data });\n\n\n            })\n\n        } else {\n            const config = {\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Access-Control-Allow-Headers': 'Authorization',\n                    \"x-access-token\": localStorage.getItem('token'),\n                    'Authorization': 'Bearer ' + localStorage.getItem('token'),\n                },\n            };\n            axios.get(\n                urlbackend + \"/package/done?current_page=1&per_page=500\",\n                config\n            ).then((Response) => {\n                this.setState({ enlevePackages: Response.data.data.data.filter(item => item.FromAgence.id === lementchange) })\n\n            })\n        }\n\n\n        //  this.setState({enlevePackages: this.state.enlevePackages.filter(item => item.package.provider === e.target.value )\n\n    }\n\n    changepackageenleve(e) {\n        console.log(\"this.state.providers\", e.target.value)\n        console.log(\"this.state.providers\", this.state.enlevePackages)\n        var lementchange = e.target.value\n        // this.setState({enlevePackages: newtable.map(element=> element.package.package ===e.target.value)})\n        if (lementchange === \"all\") {\n            const config = {\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Access-Control-Allow-Headers': 'Authorization',\n                    \"x-access-token\": localStorage.getItem('token'),\n                    'Authorization': 'Bearer ' + localStorage.getItem('token'),\n                },\n            };\n            axios.get(\n                urlbackend + \"/package/done?current_page=1&per_page=500\",\n                config\n            ).then((Response) => {\n                this.setState({ enlevePackages: Response.data.data.data })\n\n            })\n\n        } else {\n            const config = {\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Access-Control-Allow-Headers': 'Authorization',\n                    \"x-access-token\": localStorage.getItem('token'),\n                    'Authorization': 'Bearer ' + localStorage.getItem('token'),\n                },\n            };\n\n            axios.get(\n                urlbackend + \"/package/done?current_page=1&per_page=500\",\n                config\n            ).then((Response) => {\n                this.setState({ enlevePackages: Response.data.data.data.filter(item => item.provider.id === lementchange) })\n\n            })\n        }\n\n\n        //  this.setState({enlevePackages: this.state.enlevePackages.filter(item => item.package.provider === e.target.value )\n\n    }\n    render() {\n        return (\n            <Aux>\n                <Row>\n                    <Col>\n                        <h5>Colis for dilevred  </h5>\n\n                        <button className=\"btn btn-info\" onClick={() => this.reloaddata()} >   refresh</button>\n\n\n\n\n\n\n                        <hr />\n                        <Tabs defaultActiveKey=\"home\">\n                            <Tab eventKey=\"home\" title=\"Customer From Provider\">\n                                <Card className=\"card-box mb-4\">\n\n                                    <div className=\"card-header\">\n                                        <div className=\"card-header--title\">\n                                            {/* <b>This table card has custom content</b> */}\n                                        </div>\n                                        <Box className=\"card-header--actions\">\n                                            <IconButton\n                                                size=\"small\"\n                                                color=\"primary\"\n                                                className=\"text-primary\"\n                                                title=\"View details\"\n                                            ></IconButton>\n                                        </Box>\n                                    </div>\n                                    <CardContent className=\"p-0\">\n                                        <InputGroup className=\"mb-3\">\n                                            <FormControl\n                                                as=\"select\"\n                                                id=\"provider\"\n                                                onChange={(value) => this.changepackageenleve(value)}\n\n                                            >\n                                                <option value=\"all\">choisir un provider</option>\n\n                                                {this.state.providers.map((provider, index) => (\n                                                    <option key={provider.id} value={provider.id}>\n                                                        {provider.username}\n                                                    </option>\n                                                ))}\n                                            </FormControl>\n                                        </InputGroup>\n                                        <div className=\"table-responsive\">\n                                            <table className=\"table  table-hover text-nowrap mb-0\">\n                                                <thead className=\"table thead-light mb-0\">\n                                                    <tr>\n                                                        <th>Numéro colis</th>\n                                                        <th>Client</th>\n\n                                                        <th className=\"text-center\">addresse de client</th>\n                                                        <th className=\"text-center\">Actions Livraison</th>\n                                                        <th className=\"text-center\">Actions Traansfert</th>\n                                                        <th className=\"text-center\"> historique</th>\n                                                        <th className=\"text-center\"></th>\n                                                    </tr>\n                                                </thead>\n                                                <tbody>\n                                                    {this.state.enlevePackages.map((pickup, index) => (\n                                                        <tr key={index}>\n                                                               <td className=\"text-center center\">\n                                                                <div className=\"font-weight-bold text-black\"\n                                                                    title=\"...\">\n                                                                    {pickup.colis?.index_colis}\n\n                                                                </div>\n                                                            </td>\n                                                            <td>\n                                                                <div className=\"d-flex align-items-center\">\n                                                                    <div>\n                                                                        <a\n                                                                            href=\"#/\"\n                                                                            onClick={(e) => e.preventDefault()}\n                                                                            className=\"font-weight-bold text-black\"\n                                                                            title=\"...\"\n                                                                        >\n                                                                            {pickup.colis?.name_complete} :{\" \"}\n                                                                            {pickup.colis?.phone_number}\n                                                                        </a>\n                                                                        <span className=\"text-black-50 d-block\">\n                                                                        </span>\n                                                                    </div>\n                                                                </div>\n                                                            </td>\n\n\n                                                            <td className=\"text-center center\">\n                                                                <div className=\"font-weight-bold text-black\"\n                                                                    title=\"...\">\n                                                                    {pickup.colis?.gouvernorat}: {pickup.colis?.provider.username}\n\n                                                                </div>\n                                                            </td>\n                                                            <td className=\"text-center center\">\n                                                                <LivraisonDecision pickup={pickup} change={() => this.componentDidMount()} />\n                                                            </td>\n                                                            <td className=\"text-center center\">\n                                                                <ConsoleDecision pickup={pickup} change={() => this.componentDidMount()} />\n                                                            </td>\n                                                            <td className=\"text-center center\">\n                                                                <QRcode url={pickup.colis?.id}  />\n                                                            </td>\n                                                            \n                                                            <td className=\"text-center center\">\n                                                                <Link to={\"/history/colis/\" + pickup.colis?.id}>\n                                                                    <Button\n                                                                        variant=\"success\"\n                                                                        onClick={() => console.log(\"not yet\")}\n                                                                    >\n                                                                        {\" \"}\n                                                                        <span className=\"fa fa-file\"></span>\n                                                                    </Button>\n                                                                </Link>\n                                                            </td>\n                                                        </tr>\n                                                    ))}\n                                                </tbody>\n                                            </table>\n                                        </div>\n                                    </CardContent>\n                                </Card>\n                            </Tab>\n                            <Tab eventKey=\"profile\" title=\"Customer From Agence\">\n                                <Card className=\"card-box mb-4\">\n                                    <div className=\"card-header\">\n                                        <div className=\"card-header--title\">\n                                            {/* <b>This table card has custom content</b> */}\n                                        </div>\n                                        <Box className=\"card-header--actions\">\n                                            <IconButton\n                                                size=\"small\"\n                                                color=\"primary\"\n                                                className=\"text-primary\"\n                                                title=\"View details\"\n                                            ></IconButton>\n                                        </Box>\n                                    </div>\n                                    <CardContent className=\"p-0\">\n                                        <InputGroup className=\"mb-3\">\n                                            <FormControl\n                                                as=\"select\"\n                                                id=\"agence\"\n                                                onChange={(value) => this.changepackagefromagence(value)}\n\n                                            >\n                                                <option value=\"all\">choose all agences</option>\n\n                                                {this.state.agences.map((agence, index) => (\n                                                    <option key={agence.id} value={agence.id}>\n                                                        {agence.name}\n                                                    </option>\n                                                ))}\n                                            </FormControl>\n                                        </InputGroup>\n                                        <div className=\"table-responsive\">\n                                            <table className=\"table  table-hover text-nowrap mb-0\">\n                                                <thead className=\"table thead-light mb-0\">\n                                                    <tr>\n                                                        <th>NameComplete</th>\n\n                                                        <th className=\"text-center\">addresse</th>\n                                                        <th className=\"text-center\">Actions dilevred</th>\n                                                        <th className=\"text-center\"> History</th>\n                                                        <th className=\"text-center\"></th>\n                                                    </tr>\n                                                </thead>\n                                                <tbody>\n                                                    {this.state.getDoneExchfroms.map((pickup, index) => (\n                                                        <tr key={index}>\n                                                            <td>\n                                                                <div className=\"d-flex align-items-center\">\n                                                                    <div>\n                                                                        <a\n                                                                            href=\"#/\"\n                                                                            onClick={(e) => e.preventDefault()}\n                                                                            className=\"font-weight-bold text-black\"\n                                                                            title=\"...\"\n                                                                        >\n                                                                            {pickup.id} :{\" \"}\n                                                                            {pickup.colis?.phone_number}\n                                                                        </a>\n                                                                        <span className=\"text-black-50 d-block\">\n                                                                        </span>\n                                                                    </div>\n                                                                </div>\n                                                            </td>\n\n\n                                                            <td className=\"text-center center\">\n                                                                <div className=\"font-weight-bold text-black\"\n                                                                    title=\"...\">\n                                                                    {pickup.colis?.gouvernorat}: {pickup.colis?.address}\n\n                                                                </div>\n                                                            </td>\n                                                            <td className=\"text-center center\">\n                                                                <Consolecolis pickup={pickup} change={() => this.componentDidMount()} />\n                                                            </td>\n                                                          \n\n                                                            <td className=\"text-center center\">\n                                                                <Link to={\"/history/colis/\" + pickup.colis?.id}>\n                                                                    <Button\n                                                                        variant=\"success\"\n                                                                        onClick={() => console.log(\"not yet\")}\n                                                                    >\n                                                                        {\" \"}\n                                                                        <span className=\"fa fa-file\"></span>\n                                                                    </Button>\n                                                                </Link>\n                                                            </td>\n                                                            <td className=\"text-center center\">\n                                                            <QRcode url={pickup.colis?.id}  />\n                                                            </td>\n                                                          \n                                                        </tr>))}\n                                                </tbody>\n                                            </table>\n                                        </div>\n                                    </CardContent>\n                                </Card>\n                            </Tab>\n                        </Tabs>\n                    </Col>\n                </Row>\n            </Aux>\n        );\n    }\n}\n\nexport default PackageDecision;\n","import React, { useState } from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, Form } from 'reactstrap';\n\nimport { QRCode } from \"react-qr-svg\";\nimport { ModalFooter } from 'react-bootstrap';\nimport { FaCloudDownloadAlt, FaPrint } from 'react-icons/fa';\nconst saveSvgAsPng = require('save-svg-as-png')\nconst imageOptions = {\n  scale: 5,\n  encoderOptions: 1,\n  backgroundColor: 'white',\n}\n\n/**\n * Class Create Qr code\n * @param imageOptions {Object} props of QR code background scale ....can be modified with custmer needs\n * @param props {ReactHooks} props of class\n * @param  FaPrint {package} print QR code\n * @param  FaCloudDownloadAlt {package} download image QR code\n \n */\n\n\nconst QRcode = (props) => {\n  const {\n    buttonLabel,\n    className\n  } = props;\n\n\n  const [modal, setModal] = useState(false);\n  const [unmountOnClose] = useState(true);\n\n  const toggle = () => setModal(!modal);\n  const handleClick = () => {\n    saveSvgAsPng.saveSvgAsPng(document.getElementById('svg-chart'), 'shapes.png', imageOptions);\n  };\n\n  return (\n    <div>\n      <Form inline onSubmit={(e) => e.preventDefault()}>\n\n\n        <Button color=\"info\" onClick={toggle}>{buttonLabel}<span className=\"fa fa-qrcode\"></span></Button>\n      </Form>\n      <Modal aria-labelledby=\"contained-modal-title-vcenter\"\n        centered isOpen={modal} toggle={toggle} className={className} unmountOnClose={unmountOnClose} >\n        <ModalHeader toggle={toggle}>   <div style={{ color: \"black\", fontWeight: 'bold', textAlign: \"center\" }}>  <span >  show qrcode </span> </div> </ModalHeader>\n        <ModalBody size=\"lg\">\n          <div><p style={{ color: \"black\", fontWeight: 'bold', textAlign: \"center\" }}>  {props.url}</p></div>\n          <p style={{ color: \"black\", fontWeight: 'bold', textAlign: \"center\" }}>\n            <QRCode\n              id={\"svg-chart\"}\n              bgColor=\"#FFFFFF\"\n              fgColor=\"#000000\"\n              level=\"Q\"\n              style={{ width: 256 }}\n              value={props.url}\n            /></p>\n\n\n\n\n        </ModalBody>\n        <ModalFooter>\n\n          <Button onClick={handleClick}>Download Image <FaCloudDownloadAlt /></Button>\n\n          <Button onClick={() => window.print()}>PRINT <FaPrint /> </Button>\n\n\n        </ModalFooter>\n      </Modal>\n    </div>\n  );\n}\n\n\nexport default QRcode;","import React from 'react';\nexport default React.createContext(null);","/*!\n  Copyright (c) 2016 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tclasses.push(classNames.apply(null, arg));\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"className\", \"variant\", \"as\"];\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  variant: null\n};\nvar CardImg = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\nfunction (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      variant = _ref.variant,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'img' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref,\n    className: classNames(variant ? prefix + \"-\" + variant : prefix, className)\n  }, props));\n});\nCardImg.displayName = 'CardImg';\nCardImg.defaultProps = defaultProps;\nexport default CardImg;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"className\", \"bg\", \"text\", \"border\", \"body\", \"children\", \"as\"];\nimport classNames from 'classnames';\nimport React, { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nimport CardContext from './CardContext';\nimport CardImg from './CardImg';\nvar DivStyledAsH5 = divWithClassName('h5');\nvar DivStyledAsH6 = divWithClassName('h6');\nvar CardBody = createWithBsPrefix('card-body');\nvar CardTitle = createWithBsPrefix('card-title', {\n  Component: DivStyledAsH5\n});\nvar CardSubtitle = createWithBsPrefix('card-subtitle', {\n  Component: DivStyledAsH6\n});\nvar CardLink = createWithBsPrefix('card-link', {\n  Component: 'a'\n});\nvar CardText = createWithBsPrefix('card-text', {\n  Component: 'p'\n});\nvar CardHeader = createWithBsPrefix('card-header');\nvar CardFooter = createWithBsPrefix('card-footer');\nvar CardImgOverlay = createWithBsPrefix('card-img-overlay');\nvar defaultProps = {\n  body: false\n};\nvar Card = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      bg = _ref.bg,\n      text = _ref.text,\n      border = _ref.border,\n      body = _ref.body,\n      children = _ref.children,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'card');\n  var cardContext = useMemo(function () {\n    return {\n      cardHeaderBsPrefix: prefix + \"-header\"\n    };\n  }, [prefix]);\n  return /*#__PURE__*/React.createElement(CardContext.Provider, {\n    value: cardContext\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, prefix, bg && \"bg-\" + bg, text && \"text-\" + text, border && \"border-\" + border)\n  }), body ?\n  /*#__PURE__*/\n  // @ts-ignore\n  React.createElement(CardBody, null, children) : children));\n});\nCard.displayName = 'Card';\nCard.defaultProps = defaultProps;\nCard.Img = CardImg;\nCard.Title = CardTitle;\nCard.Subtitle = CardSubtitle;\nCard.Body = CardBody;\nCard.Link = CardLink;\nCard.Text = CardText;\nCard.Header = CardHeader;\nCard.Footer = CardFooter;\nCard.ImgOverlay = CardImgOverlay;\nexport default Card;"],"names":["urlbackend","require","SignupSchema","Yup","shape","email","required","phone_number","matches","city","min","max","description","name","code","props","useState","show","setShow","drivers","setdriver","handleClose","useEffect","config","headers","localStorage","getItem","axios","then","response","console","log","data","catch","e","showForm","values","handleChange","errors","touched","handleBlur","handleSubmit","handleReset","setFieldValue","isSubmitting","dirty","isValid","Row","Col","as","md","htmlFor","InputGroup","className","FormControl","id","custom","onChange","onBlur","value","driver","map","index","username","Button","onClick","colis","pickup","alert","change","handlSubmit","variant","Modal","onHide","closeButton","initialValues","onSubmit","setSubmitting","submitForm","validationSchema","agences","setagences","type","agence","address","customer","provider","agence_to","PackageDecision","state","pendingExch","enlevePackages","getDoneExchfroms","providers","this","setState","getDoneExch","getDoneExchfrom","getprovider","getagences","Object","filter","check_magasinier","error","iddriver","idpacket","package","componentDidMount","target","lementchange","Response","item","FromAgence","reloaddata","Tabs","defaultActiveKey","Tab","eventKey","title","Card","Box","IconButton","size","color","CardContent","changepackageenleve","index_colis","href","preventDefault","name_complete","gouvernorat","QRcode","url","Link","to","changepackagefromagence","React","saveSvgAsPng","imageOptions","scale","encoderOptions","backgroundColor","buttonLabel","modal","setModal","unmountOnClose","toggle","inline","centered","isOpen","style","fontWeight","textAlign","QRCode","bgColor","fgColor","level","width","document","getElementById","window","print","hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","apply","key","call","join","module","exports","_excluded","CardImg","_ref","ref","bsPrefix","_ref$as","Component","_objectWithoutPropertiesLoose","prefix","useBootstrapPrefix","_extends","displayName","defaultProps","DivStyledAsH5","divWithClassName","DivStyledAsH6","CardBody","createWithBsPrefix","CardTitle","CardSubtitle","CardLink","CardText","CardHeader","CardFooter","CardImgOverlay","bg","text","border","body","children","cardContext","useMemo","cardHeaderBsPrefix","CardContext","Img","Title","Subtitle","Body","Text","Header","Footer","ImgOverlay"],"sourceRoot":""}