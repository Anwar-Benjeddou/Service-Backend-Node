{"version":3,"file":"static/js/81.57d89883.chunk.js","mappings":"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","sources":["Routes/Settings/providersettings/List.Provider.js","../node_modules/react-bootstrap/esm/CardImg.js","../node_modules/react-bootstrap/esm/Card.js","../node_modules/react-bootstrap/esm/CardContext.js","../node_modules/react-bootstrap/esm/divWithClassName.js"],"sourcesContent":["// import React from 'react';\n// import { Row, Col, Card, Table, Button } from 'react-bootstrap';\n// import { Link } from \"react-router-dom\"\n// import axios from 'axios'\n// import { confirmAlert } from 'react-confirm-alert';\n// import 'react-confirm-alert/src/react-confirm-alert.css'; // Import\n// import UpdateScale from \"./UpdateScale\"\n// import Aux from \"../../../hoc/_Aux\";\n// //import ViewProvider from './ViewProvider'\n// //import UpdateProvider from './Update.Provider'\n// import i18n from './../../../i18n';\n\n// var urlbackend = require('../../../env/env')();\n\n\n// class ListProvider extends React.Component {\n//     state = {\n//         Providers: [],\n//     };\n\n//     componentDidMount() {\n\n//         const config = {\n//             headers: {\n//                 'Content-Type': 'application/json',\n//                 'Access-Control-Allow-Headers': 'Authorization',\n//                 \"x-access-token\": localStorage.getItem('token'),\n//                 'Authorization': 'Bearer ' + localStorage.getItem('token'),\n//             },\n//         };\n//         axios.get(urlbackend + \"/provider\", config)\n//             .then(response => {\n//                 console.log(\"this respon list\", response.data)\n//                 this.setState({ Providers: response.data.data })\n\n//             })\n//             .catch(e => {\n//                 console.log(e)\n//             })\n\n//     }\n\n//     Delette(Provider) {\n//         console.log(\"hellodelet\", Provider.id)\n//         confirmAlert({\n//             title: i18n.t('title-confirm-delete'),\n//             message: i18n.t('ask-confirm-delete'),\n//             buttons: [\n//                 {\n//                     label: i18n.t('yes'),\n//                     onClick: () => {\n//                         axios.delete(\"http://localhost:5000/api/v1/Providers/\" + Provider.id).then(() => {\n\n//                             var array = [...this.state.Providers];\n//                             var index = array.indexOf(Provider)\n//                             if (index !== -1) {\n//                                 array.splice(index, 1);\n//                                 this.setState({ Providers: array });\n//                             }\n\n\n//                         })\n//                     }\n//                 },\n//                 {\n//                     label: i18n.t('no'),\n//                     onClick: null\n//                 }\n//             ]\n//         });\n//         /*  */\n//     }\n\n\n//   /*   Update = (Provider) => {\n//         console.log(\"Update\", JSON.stringify(Provider))\n\n//     }\n//  */\n\n\n\n//     render() {\n//         return (\n//             <Aux>\n//                 <Row>\n//                     <Col>\n//                         <Card>\n//                             <Card.Header>\n//                                 <Card.Title as=\"h5\">  <Link to=\"/Add/provider\" >  <Button>{i18n.t('add-provider')}</Button> </Link> </Card.Title>\n//                             </Card.Header>\n//                             <Card.Body>\n//                                 <Table striped bordered hover responsive>\n//                                     <thead>\n//                                         <tr>\n//                                             <th>{i18n.t('fullname')}</th>\n//                                             <th>{i18n.t('username')}</th>\n//                                             <th>{i18n.t('email')}</th>\n//                                             <th>{i18n.t('phone-number')}</th>\n//                                             <th>{i18n.t('agency')}</th>\n//                                             <th>{i18n.t('address')}</th>\n//                                             <th>{i18n.t('code-fiscal')}</th>\n//                                             <th>{i18n.t('action-event')}</th>\n//                                         </tr>\n//                                     </thead>\n//                                     <tbody>\n//                                         {this.state.Providers.map((Provider, index) => (\n\n//                                             <tr key={Provider.id}>\n//                                                 <td> {Provider.firstname} {Provider.lastname}</td>\n//                                                 <td>{Provider.username} </td>\n//                                                 <td>{Provider.email} </td>\n//                                                 <td>{Provider.phone_number} </td>\n//                                                 <td>{Provider.agence.name} </td>\n//                                                 <td>{Provider.agence.address}  {Provider.city} </td>\n//                                                 <td> {Provider.company} {Provider.code_fiscal} {Provider.password}  </td>\n//                                                 <td>  <Button variant=\"danger\"\n//                                                     onClick={() => this.Delette(Provider)}> <span className=\"fa fa-trash\"></span></Button>\n\n//                                                     {/* <UpdateProvider Provider={Provider} change={ ()=>this.componentDidMount()}/>\n//                                                         <ViewProvider Provider={Provider} /> */}\n//                                                 </td>\n//                                                 <td>\n//                                                     <UpdateScale provider={Provider} upadteData={()=> this.componentDidMount()}/>\n\n//                                                      {/* <Button variant=\"info\"\n//                                                     onClick={() => this.Update(Provider)}> <span className=\"fa fa-edit\"></span></Button> */}\n\n//                                                     {/* <UpdateProvider Provider={Provider} change={ ()=>this.componentDidMount()}/>\n//                                                         <ViewProvider Provider={Provider} /> */}\n//                                                 </td>\n//                                             </tr>\n\n\n//                                         ))}\n//                                     </tbody>\n//                                 </Table>\n//                             </Card.Body>\n//                         </Card>\n//                     </Col>\n//                 </Row>\n//             </Aux>\n//         );\n//     }\n// }\n\n// export default ListProvider;\nimport React, { useEffect, useState } from 'react';\nimport { Row, Col, Card, Table, Button } from 'react-bootstrap';\nimport { Link } from \"react-router-dom\"\nimport axios from 'axios'\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\nimport filterFactory, { textFilter } from 'react-bootstrap-table2-filter';\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import\nimport Aux from \"../../../hoc/_Aux\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\n//import ViewProvider from './ViewProvider'\n//import UpdateProvider from './Update.Provider'\nimport i18n from './../../../i18n';\nvar urlbackend = require('../../../env/env')();\n\n\nfunction ListProviders() {\n    const [Providers, setPorvider] = useState([])\n    function priceFormatter(column, colIndex, { sortElement, filterElement }) {\n        return (\n            <div style={{ display: 'flex', flexDirection: 'column' }}>\n                {filterElement}\n                {column.text}\n               {/*  {sortElement}<span className=\"fa fa-filter\"></span> */}\n            </div>\n        );\n    }\n    const columns = [\n        {\n            dataField: \"lastname\",\n            text: \"Expideteur\",\n            headerFormatter: priceFormatter,\n            formatter: (cell, row) => {\n                return (<div>{`${row.lastname} `} {`${row.firstname}`}</div>);\n            },\n            filter: textFilter(),\n\n        },\n        {\n            dataField: \"username\",\n            text: \"username\",\n            \n            headerFormatter: priceFormatter,\n            filter: textFilter(),\n\n        },\n        {\n            dataField: \"phone_number\",\n            text: \"Telphone\",\n            \n            headerFormatter: priceFormatter,\n            filter: textFilter(),\n\n        },\n        {\n            dataField: \"lastname\",\n            text: \"code_fiscal\",\n            headerFormatter: priceFormatter,\n            formatter: (cell, row) => {\n                return (<div>{`${row.company} `} {`${row.code_fiscal}`}</div>);\n            },\n            filter: textFilter(),\n\n        },\n       \n        \n\n\n    ];\n    useEffect(() => {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                'Access-Control-Allow-Headers': 'Authorization',\n                \"x-access-token\": localStorage.getItem('token'),\n                'Authorization': 'Bearer ' + localStorage.getItem('token'),\n            },\n        };\n        axios.get(urlbackend + \"/provider\", config)\n            .then(response => {\n                console.log(\"this respon list\", response.data)\n                setPorvider(response.data.data.reverse())\n\n            })\n            .catch(e => {\n                console.log(e)\n            })\n\n    },[])\n\n\n    return (\n        <Aux>\n            <Row>\n                <Col>\n                    <Card>\n                        <Card.Header>\n                            <Card.Title as=\"h5\"> <Link to=\"/Add/provider\" >  <Button>{i18n.t('add-provider')}</Button> </Link>    </Card.Title>\n                        </Card.Header>\n                        <Card.Body>\n                            <BootstrapTable\n                                striped\n                                bordered\n                                hover\n                                variant=\"dark\"\n                                //   expandRow={expandRow}\n                                bootstrap4={true}\n                                keyField=\"id\"\n                                data={Providers}\n                                columns={columns}\n                                pagination={paginationFactory({\n                                    sizePerPage: 15,\n                                    sizePerPageList: [5, 10, 15, 20, 25],\n                                })}\n                                filter={filterFactory()}\n                                headerClasses=\"table thead-light mb-0\"\n                            ></BootstrapTable>\n\n                            {/*    <Table striped responsive>\n                                    <thead>\n                                        <tr>\n                                        <th>Nom</th>\n                                            <th>username</th>\n                                            <th>N. de téléphone</th>\n                                            <th>agence</th>\n                                            <th>address</th>\n                                            <th>code_fiscal</th>\n                                            <th>Actions</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {Providers.map((Provider, index) => (\n\n                                            <tr key={Provider.id}>\n                                               <td> {Provider.firstname} {Provider.lastname}</td>\n                                                <td>{Provider.username} </td>\n                                                <td>{Provider.phone_number} </td>\n                                                <td>{Provider.agence.name} </td>\n                                                <td>{Provider.agence.address}  {Provider.city} </td>\n                                                <td> {Provider.company} {Provider.code_fiscal}  </td>\n                                                <td> <Link to={\"/facture/provider/\" + Provider.id}  > <Button variant=\"info\"> <span className=\"fa fa-file\"></span></Button></Link>\n                                              <ListColisFacture provider={Provider.id} /> \n                                                    \n                                                </td>\n                                            </tr>\n\n\n                                        ))}\n                                    </tbody>\n                                </Table> */}\n                        </Card.Body>\n                    </Card>\n                </Col>\n            </Row>\n        </Aux>\n    );\n}\n\nexport default ListProviders;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"className\", \"variant\", \"as\"];\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  variant: null\n};\nvar CardImg = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\nfunction (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      variant = _ref.variant,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'img' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref,\n    className: classNames(variant ? prefix + \"-\" + variant : prefix, className)\n  }, props));\n});\nCardImg.displayName = 'CardImg';\nCardImg.defaultProps = defaultProps;\nexport default CardImg;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"className\", \"bg\", \"text\", \"border\", \"body\", \"children\", \"as\"];\nimport classNames from 'classnames';\nimport React, { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nimport CardContext from './CardContext';\nimport CardImg from './CardImg';\nvar DivStyledAsH5 = divWithClassName('h5');\nvar DivStyledAsH6 = divWithClassName('h6');\nvar CardBody = createWithBsPrefix('card-body');\nvar CardTitle = createWithBsPrefix('card-title', {\n  Component: DivStyledAsH5\n});\nvar CardSubtitle = createWithBsPrefix('card-subtitle', {\n  Component: DivStyledAsH6\n});\nvar CardLink = createWithBsPrefix('card-link', {\n  Component: 'a'\n});\nvar CardText = createWithBsPrefix('card-text', {\n  Component: 'p'\n});\nvar CardHeader = createWithBsPrefix('card-header');\nvar CardFooter = createWithBsPrefix('card-footer');\nvar CardImgOverlay = createWithBsPrefix('card-img-overlay');\nvar defaultProps = {\n  body: false\n};\nvar Card = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      bg = _ref.bg,\n      text = _ref.text,\n      border = _ref.border,\n      body = _ref.body,\n      children = _ref.children,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'card');\n  var cardContext = useMemo(function () {\n    return {\n      cardHeaderBsPrefix: prefix + \"-header\"\n    };\n  }, [prefix]);\n  return /*#__PURE__*/React.createElement(CardContext.Provider, {\n    value: cardContext\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, prefix, bg && \"bg-\" + bg, text && \"text-\" + text, border && \"border-\" + border)\n  }), body ?\n  /*#__PURE__*/\n  // @ts-ignore\n  React.createElement(CardBody, null, children) : children));\n});\nCard.displayName = 'Card';\nCard.defaultProps = defaultProps;\nCard.Img = CardImg;\nCard.Title = CardTitle;\nCard.Subtitle = CardSubtitle;\nCard.Body = CardBody;\nCard.Link = CardLink;\nCard.Text = CardText;\nCard.Header = CardHeader;\nCard.Footer = CardFooter;\nCard.ImgOverlay = CardImgOverlay;\nexport default Card;","import React from 'react';\nvar context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'CardContext';\nexport default context;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport classNames from 'classnames';\nexport default (function (className) {\n  return /*#__PURE__*/React.forwardRef(function (p, ref) {\n    return /*#__PURE__*/React.createElement(\"div\", _extends({}, p, {\n      ref: ref,\n      className: classNames(p.className, className)\n    }));\n  });\n});"],"names":["urlbackend","require","useState","Providers","setPorvider","priceFormatter","column","colIndex","sortElement","filterElement","style","display","flexDirection","text","columns","dataField","headerFormatter","formatter","cell","row","lastname","firstname","filter","textFilter","company","code_fiscal","useEffect","config","headers","localStorage","getItem","axios","then","response","console","log","data","reverse","catch","e","as","to","i18n","striped","bordered","hover","variant","bootstrap4","keyField","pagination","paginationFactory","sizePerPage","sizePerPageList","filterFactory","headerClasses","_excluded","CardImg","React","_ref","ref","bsPrefix","className","_ref$as","Component","props","_objectWithoutPropertiesLoose","prefix","useBootstrapPrefix","_extends","classNames","displayName","defaultProps","DivStyledAsH5","divWithClassName","DivStyledAsH6","CardBody","createWithBsPrefix","CardTitle","CardSubtitle","CardLink","CardText","CardHeader","CardFooter","CardImgOverlay","Card","bg","border","body","children","cardContext","useMemo","cardHeaderBsPrefix","CardContext","value","Img","Title","Subtitle","Body","Link","Text","Header","Footer","ImgOverlay","context","p"],"sourceRoot":""}