{"version":3,"file":"static/js/5543.e72c4471.chunk.js","mappings":"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","sources":["Routes/Provider/Pickup/Status.Pickup.list.js","Routes/Template/TemplatePrint.js","Routes/Ticket/Ticket.add.js","../node_modules/file-saver/src/FileSaver.js","../node_modules/react-bootstrap/esm/CardImg.js","../node_modules/react-bootstrap/esm/Card.js","../node_modules/react-bootstrap/esm/DropdownButton.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n\n//import { PageTitle } from '../../layout-components';\nimport { IconButton, Box, Card, CardContent } from \"@material-ui/core\";\nimport axios from \"axios\";\nimport { Row, Col, Tabs, Tab, Button, DropdownButton, Dropdown } from \"react-bootstrap\";\nimport TemplatePrint from '../../Template/TemplatePrint'\nimport Aux from \"../../../hoc/_Aux\";\n//import ReactToPrint from 'react-to-print';\nimport jwtDecode from \"jwt-decode\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport { Link } from \"react-router-dom\";\nimport filterFactory from \"react-bootstrap-table2-filter\";\n//import { CSVLink } from \"react-csv\";\nimport * as FileSaver from 'file-saver';\nimport * as XLSX from 'xlsx';\nimport moment from \"moment\"\nimport TicketAdd from '../../Ticket/Ticket.add'\nimport jsPDF from \"jspdf\";\nimport \"jspdf-autotable\";\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\nimport i18n from './../../../i18n';\nimport config from \"../../Config/config\";\nvar urlbackend = require(\"../../../env/env\")();\nconst fileExtension = '.xlsx';\nconst fileType = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\n\nfunction ListPickupProvider() {\n\n    const [pendingPackages, setpendingPackages] = useState([]);\n    const [ongoingPackages, setongoingPackages] = useState([]);\n    const [enlevePackages, setenlevePackages] = useState([]);\n    const [pendingPackagesnotready, setpendingPackagesnotready] = useState([]);\n    const [providerinfo, setproviderinfo] = useState({});\n    const [providerr, setproviderr] = useState({})\n    const acceptecoli = (idcolis) => {\n        //\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                'Access-Control-Allow-Headers': 'Authorization',\n                \"x-access-token\": localStorage.getItem('token'),\n                'Authorization': 'Bearer ' + localStorage.getItem('token'),\n            },\n        };\n        axios.put(\n            urlbackend + \"/provider/pickup/to_ready\",\n            { coliss: [idcolis] },\n            config\n        )\n            .then((response) => {\n                alert(\"add Succefull\");\n                console.log(\"response.data\", response.data);\n                getdata()\n\n                //this.reloaddata()\n                // this.setState({ drivers: [] });\n            })\n            .catch((e) => {\n                console.log(e);\n            });\n\n    }\n    const expandRow = {\n        parentClassName: 'parent-expand-foo',\n        renderer: (row, rowIndex) => (\n            <div>\n                <p >\n                    <span style={{ color: \"black\", fontWeight: 'bold', textAlign: \"center\" }}>  {`DIGITAL LINK URI `}{\"     :\"} </span> {row.DL} </p>\n                <p>    <span style={{ color: \"black\", fontWeight: 'bold', textAlign: \"center\" }}>  {`prix :`}{\" \"} </span> {row.colis.price} (TND) </p>\n\n\n\n\n                <p>\n                    Description produit: {row.colis.designation}\n                </p>\n\n            </div>\n        ),\n        onlyOneExpanding: true,\n    };\n    const linkFollow = (cell, row, rowIndex, formatExtraData) => {\n        return (\n            <div>\n                <Link to={\"/history/colis/provider/\" + row.colis.id}>\n                    <Button\n                        variant=\"info\"\n                        onClick={() => console.log(\"not yet\")}\n                    >\n                        {\" \"}\n                        <span className=\"fa fa-file\"></span>\n                    </Button>\n                </Link>\n\n\n\n            </div>\n        );\n    };\n    const Impression = (cell, row, rowIndex, formatExtraData) => {\n        return (\n            <div>\n\n                <TemplatePrint Template={row} providerinfo={providerr}  > </TemplatePrint>\n\n\n            </div>\n        );\n    };\n    const demandeTicket = (cell, row, rowIndex, formatExtraData) => {\n        return (\n            <div>\n\n                <TicketAdd colis={row.colis} />\n\n\n\n            </div>\n        );\n    };\n\n\n\n\n    const linkFollownotready = (cell, row, rowIndex, formatExtraData) => {\n        return (\n            <div>\n                <Button\n                    variant=\"info\"\n                    onClick={() => acceptecoli(row.colis.id)}\n                >\n                    {\" \"}\n                    <span className=\"fa fa-send\"></span>\n                </Button>\n                <TemplatePrint Template={row}  > </TemplatePrint>\n                <TicketAdd colis={row.colis} />\n\n            </div>\n        );\n    };\n    const columns = [\n        {\n            dataField: \"colis.index_colis\",\n            text: i18n.t('package-number'),\n\n\n        },\n\n        {\n            dataField: \"colis.name_complete\",\n            text: i18n.t('client-name'),\n\n\n        },\n        {\n            dataField: \"colis.address\",\n            text: i18n.t('address'),\n            style: { textAlign: \"center\" },\n\n\n            formatter: (cell, row) => {\n                return (<div>{`${row.colis.gouvernorat} `} <br></br> {`${row.colis.city}`}: {`${row.colis.address}`}</div>);\n            }\n            // formatter: this.linkFollow,\n\n        },\n        {\n            dataField: \"colis.phone_number\",\n            text: i18n.t('phone-number'),\n\n        },\n        {\n            dataField: \"colis.designation\",\n            text: i18n.t('designation'),\n\n\n        },\n        {\n            dataField: \"colis.price\",\n            text: i18n.t('price'),\n            formatter: (cell, row) => {\n                return (<div>{`${row.colis.price} `} <br></br> {`${row.colis.payment_mode}`}</div>);\n            }\n\n        },\n\n        {\n            dataField: \"colis.type_envoi\",\n            text: i18n.t('send-type'),\n\n        },\n\n\n        {\n            text: i18n.t('history'),\n            style: { textAlign: \"center\" },\n            formatter: linkFollow,\n\n        },\n        {\n            text: i18n.t('print'),\n            style: { textAlign: \"center\" },\n            formatter: Impression,\n\n        }, {\n            text: i18n.t('add-order'),\n            style: { textAlign: \"center\" },\n            formatter: demandeTicket,\n\n        },\n    ];\n    const columnsnotready = [\n        {\n            dataField: \"colis.index_colis\",\n            text: i18n.t('package-number'),\n\n\n        },\n\n        {\n            dataField: \"colis.name_complete\",\n            text: i18n.t('client-name'),\n\n\n        },\n        {\n            dataField: \"colis.address\",\n            text: i18n.t('address'),\n            style: { textAlign: \"center\" },\n\n\n            formatter: (cell, row) => {\n                return (<div>{`${row.colis.gouvernorat} `} <br></br> {`${row.colis.city}`}: {`${row.colis.address}`}</div>);\n\n            }\n            // formatter: this.linkFollow,\n\n        },\n        {\n            dataField: \"colis.phone_number\",\n            text: i18n.t('phone-number'),\n\n        },\n        {\n            dataField: \"colis.designation\",\n            text: i18n.t('designation'),\n\n\n        },\n        {\n            dataField: \"colis.price\",\n            text: i18n.t('price'),\n            formatter: (cell, row) => {\n                return (<div>{`${row.colis.price} `} <br></br> {`${row.colis.payment_mode}`}</div>);\n            }\n\n        },\n\n        {\n            dataField: \"colis.type_envoi\",\n            text: i18n.t('send-type'),\n\n        },\n\n\n        {\n            text: i18n.t('action-event'),\n            style: { textAlign: \"center\" },\n            formatter: linkFollownotready,\n\n        },\n\n    ];\n    const columnsencours = [\n        {\n            dataField: \"colis.index_colis\",\n            text: i18n.t('package-number'),\n\n\n        },\n\n        {\n            dataField: \"colis.name_complete\",\n            text: i18n.t('client-name'),\n\n\n        },\n        {\n            dataField: \"colis.address\",\n            text: i18n.t('address'),\n            style: { textAlign: \"center\" },\n\n\n            formatter: (cell, row) => {\n                return (<div>{`${row.colis.gouvernorat} `} <br></br> {`${row.colis.city}`}: {`${row.colis.address}`}</div>);\n\n            }\n            // formatter: this.linkFollow,\n\n        },\n        {\n            dataField: \"colis.phone_number\",\n            text: i18n.t('phone-number'),\n\n        },\n        {\n            dataField: \"colis.designation\",\n            text: i18n.t('designation'),\n\n\n        },\n        {\n            dataField: \"colis.price\",\n            text: i18n.t('price'),\n            formatter: (cell, row) => {\n                return (<div>{`${row.colis.price} `} <br></br> {`${row.colis.payment_mode}`}</div>);\n            }\n\n        },\n\n        {\n            dataField: \"colis.type_envoi\",\n            text: i18n.t('send-type'),\n\n        },\n\n\n\n        {\n            text: i18n.t('history'),\n            style: { textAlign: \"center\" },\n            formatter: linkFollow,\n\n        },\n        {\n            text: i18n.t('print'),\n            style: { textAlign: \"center\" },\n            formatter: Impression,\n\n        }, {\n            text: i18n.t('add-order'),\n            style: { textAlign: \"center\" },\n            formatter: demandeTicket,\n\n        },\n\n    ];\n    // const selectRow = {\n    //     mode: 'checkbox',\n    //     clickToSelect: true,\n    //     style: { background: '#c8e6c9' },\n    //    // selected:selectedRows,\n    //     onSelect: (row, isSelect, rowIndex, e) => {\n    //       console.log(row.id);\n    //       console.log(isSelect);\n    //       console.log(rowIndex);\n    //       console.log(e.target.value);\n    //     },\n    //     onSelectAll: (isSelect, rows, e) => {\n    //       console.log(isSelect);\n    //       console.log(rows);\n    //       console.log(e);\n    //     },\n    //     clickToExpand: true\n\n    //   };\n    useEffect(() => {\n        console.log(jwtDecode(localStorage.getItem('token')))\n        setproviderinfo(jwtDecode(localStorage.getItem('token')))\n        var m = jwtDecode(localStorage.getItem('token')).id\n\n        axios.get(urlbackend + '/provider/info/' + m, config).then((Response) => {\n            setproviderr(Response.data)\n            getdata()\n\n\n            console.log(\"Response.data\", Response.data)\n        }).catch(() => {\n            console.log(\"he\")\n        })\n        getdata()\n    }, [])\n    const getdata = () => {\n        //    this.setState({ pendingPackages: [] })\n        //    this.setState({ ongoingPackages: [] })\n        //    this.setState({ enlevePackages: [] })\n        setpendingPackagesnotready([])\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                'Access-Control-Allow-Headers': 'Authorization',\n                \"x-access-token\": localStorage.getItem('token'),\n                'Authorization': 'Bearer ' + localStorage.getItem('token'),\n            },\n        };\n\n        /*    axios.get(\n              urlbackend + \"/package/pending?current_page=1&per_page=500\",\n              config\n          ).then((response)=>{\n              this.setState({ pendingPackages: response.data.data.data });\n              console.log(response.data)\n          })\n          axios.get(urlbackend + \"/driver\", config).then((response)=>{\n              this.setState({ drivers: response.data.data });\n  \n          }) */\n\n        var getpendingPackages = axios.get(\n            urlbackend + \"/provider/pickup/pending?current_page=1&per_page=500\",\n            config\n        )\n        // var getpendingPackagesnotready = axios.get(\n        //     urlbackend + \"/provider/pickup/not_ready?current_page=1&per_page=500\",\n        //     config\n        // )\n        var getongoingpackage = axios.get(\n            urlbackend + \"/provider/pickup/ongoing?current_page=1&per_page=500\",\n            config\n        )\n        var getdonepackage = axios.get(\n            urlbackend + \"/provider/pickup/done?current_page=1&per_page=500\",\n            config\n        )\n\n\n        axios\n            .all([getpendingPackages, getongoingpackage, getdonepackage])\n            .then(\n                axios.spread((...response) => {\n                    console.log(\"this respon listsssss0\", response[0].data);\n\n                    if (response[0].data.data.length !== 0) {\n                        //this.setState({ pendingPackages: });\n                        setpendingPackages(response[0].data.data.data)\n                    } else {\n                        setpendingPackages([])\n\n                    }\n                    if (response[1].data.data.length !== 0) {\n                        setongoingPackages(response[1].data.data.data)\n                    } else {\n                        setongoingPackages([])\n\n                    }\n                    if (response[2].data.data.length !== 0) {\n                        //this.setState({ enlevePackages:  });\n                        setenlevePackages(response[2].data.data.data)\n                    }\n                    else {\n                        setenlevePackages([])\n\n                    }\n\n\n                    /*     this.setState({ pendingPackages: response[0].data.data.data });\n                        this.setState({ ongoingPackages: response[1].data.content });\n                        this.setState({ enlevePackages: response[2].data.content });\n    \n                        this.setState({ drivers: response[3].data.content }); */\n                })\n            )\n            .catch((errors) => {\n                // react on errors.\n                console.error(errors);\n            });\n\n\n\n    }\n    // const acceptecoli=(idcolis)=> {\n    //     //\n\n    //     const config = {\n    //         headers: {\n    //             'Content-Type': 'application/json',\n    //             'Access-Control-Allow-Headers': 'Authorization',\n    //             \"x-access-token\": localStorage.getItem('token'),\n    //             'Authorization': 'Bearer ' + localStorage.getItem('token'),\n    //         },\n    //     };\n    //     axios.put(\n    //         urlbackend + \"/provider/pickup/to_ready\",\n    //         { coliss: [idcolis] },\n    //         config\n    //     )\n    //         .then((response) => {\n    //             alert(\"add Succefull\");\n    //             console.log(\"response.data\", response.data);\n    //             this.componentDidMount();\n    //             //this.reloaddata()\n    //             this.setState({ drivers: [] });\n    //         })\n    //         .catch((e) => {\n    //             console.log(e);\n    //         });\n    // }\n    const reloaddata = () => {\n        getdata()\n    }\n    const exportPDFFF = (typeexport) => {\n\n        if (typeexport === \"pdf\") {\n            const unit = \"pt\";\n            const size = \"A4\"; // Use A1, A2, A3 or A4\n            const orientation = \"landscape\"; // portrait or landscape\n\n            // const marginLeft = 40;\n            const doc = new jsPDF(orientation, unit, size);\n\n            doc.setFontSize(13);\n\n            const title = providerinfo.username\n            const title1 = providerinfo.firstname + \"-\" + providerinfo.lastname\n            const headers = [[\"Numéro colis\", \"Client\", \"N. de téléphone\", \"Gouvernorat addresse\", \"prix\", \"type\", \"validation\"]];\n\n            const data = ongoingPackages.map(elt => [elt.colis.index_colis, elt.colis.name_complete, elt.colis.phone_number, elt.colis.address + \" : \" + elt.colis.city + \" : \" + elt.colis.gouvernorat, elt.colis.price + '(' + elt.colis.payment_mode + ')', elt.colis.type_envoi]);\n\n            let content = {\n                startY: 120,\n                head: headers,\n                body: data\n            };\n            var image = new Image();\n            image.src = config.images;\n\n            doc.addImage(image, 'PNG', 600, 30, 200, 80);\n            doc.rect(280, 40, 2, 50, 'F');\n            doc.rect(500, 40, 2, 52, 'F');\n            doc.rect(280, 40, 220, 2, 'F');\n            doc.rect(280, 90, 220, 2, 'F');\n            // doc.rect(20, 40, 2, 50, 'F');\n            // doc.rect(20, 40, 2, 52, 'F');\n            // doc.rect(280, 40, 220, 2, 'F');\n            // doc.rect(280, 90, 220, 2, 'F');\n            doc.setFont(undefined, 'bold')\n            doc.text(\"Bon d'enlèvement\", 300, 60);\n            doc.text((\"Date :\" + new moment().format('DD -MM-YYYY  HH:mm')), 300, 80);\n            doc.setFont(undefined, 'normal')\n\n            doc.text((\"Expéditeur :\" + title), 50, 40);\n            doc.text((\"Nom :\" + title1), 50, 60);\n            doc.text((\"N. de téléphone :\" + providerinfo.phone_number), 50, 80);\n            doc.text((\"Total:\" + ongoingPackages.length + \" colis\"), 50, 100);\n\n\n\n            doc.autoTable(content);\n\n\n            doc.save(\"report.pdf\")\n        }\n        else {\n            var listdownload = ongoingPackages.map((e) => ({\n                \"Numéro colis\": e.colis.index_colis,\n\n                \"client \": e.colis.name_complete, \"N. de téléphone\": e.colis.phone_number, \"gouvernorat\": e.colis.gouvernorat, \"addresse\": e.colis.city + \":\" + e.colis.address, \"prix\": e.colis.price, \"type paiment\": e.colis.payment_mode, \"type d'envoi\": e.colis.type_envoi\n\n            }))\n            const ws = XLSX.utils.json_to_sheet(listdownload);\n            const wb = { Sheets: { 'data': ws }, SheetNames: ['data'] };\n            const excelBuffer = XLSX.write(wb, { bookType: 'xlsx', type: 'array' });\n            const data = new Blob([excelBuffer], { type: fileType });\n            FileSaver.saveAs(data, \"fileName\" + fileExtension);\n        }\n    }\n    const calculvaleurmanifest = (table) => {\n\n        var myTotal = 0;  // Variable to hold your total\n\n        for (var i = 0, len = table.length; i < len; i++) {\n            myTotal += parseFloat(table[i].colis.price);  // Iterate over your first array and then grab the second element add the values up\n        }\n        return myTotal\n    }\n    const exportPDF = (typeexport) => {\n\n        if (typeexport === \"pdf\") {\n            const unit = \"pt\";\n            const size = \"A4\"; // Use A1, A2, A3 or A4\n            const orientation = \"landscape\"; // portrait or landscape\n\n            // const marginLeft = 40;\n            const doc = new jsPDF(orientation, unit, size);\n\n            doc.setFontSize(13);\n\n            const title = providerinfo.username\n            const title1 = providerinfo.firstname + \"-\" + providerinfo.lastname\n            const headers = [[\"Numéro colis\", \"Client\", \"N. de téléphone\", \"Gouvernorat addresse\", \"prix\", \"type\", \"validation\"]];\n\n            const data = pendingPackages.map(elt => [elt.colis.index_colis, elt.colis.name_complete, elt.colis.phone_number, elt.colis.address + \" : \" + elt.colis.city + \" : \" + elt.colis.gouvernorat, elt.colis.price + '(' + elt.colis.payment_mode + ')', elt.colis.type_envoi]);\n\n            let content = {\n                startY: 125,\n                head: headers,\n                body: data\n            };\n            var image = new Image();\n            image.src = config.images;\n\n            doc.addImage(image, 'PNG', 600, 30, 200, 80);\n            doc.rect(280, 40, 2, 50, 'F');\n            doc.rect(500, 40, 2, 52, 'F');\n            doc.rect(280, 40, 220, 2, 'F');\n            doc.rect(280, 90, 220, 2, 'F');\n            // doc.rect(20, 40, 2, 50, 'F');\n            // doc.rect(20, 40, 2, 52, 'F');\n            // doc.rect(280, 40, 220, 2, 'F');\n            // doc.rect(280, 90, 220, 2, 'F');\n            doc.setFont(undefined, 'bold')\n            doc.text(\"Bon d'enlèvement\", 300, 60);\n            doc.text((\"Date :\" + new moment().format('DD -MM-YYYY  HH:mm')), 300, 80);\n            doc.setFont(undefined, 'normal')\n\n            doc.text((\"Expéditeur :\" + title), 50, 40);\n            doc.text((\"Nom :\" + title1), 50, 60);\n            doc.text((\"N. de téléphone :\" + providerinfo.phone_number), 50, 80);\n            doc.text((\"Total:\" + pendingPackages.length + \" colis\"), 50, 100);\n            doc.text((\"Total:\" + calculvaleurmanifest(pendingPackages) + \" TND\"), 50, 120);\n\n\n\n            doc.autoTable(content);\n\n\n            doc.save(\"report.pdf\")\n        }\n        else {\n            var listdownload = pendingPackages.map((e) => ({\n                \"Numéro colis\": e.colis.index_colis,\n\n                \"client \": e.colis.name_complete, \"N. de téléphone\": e.colis.phone_number, \"gouvernorat\": e.colis.gouvernorat, \"addresse\": e.colis.city + \":\" + e.colis.address, \"prix\": e.colis.price, \"type paiment\": e.colis.payment_mode, \"type d'envoi\": e.colis.type_envoi\n\n            }))\n            const ws = XLSX.utils.json_to_sheet(listdownload);\n            const wb = { Sheets: { 'data': ws }, SheetNames: ['data'] };\n            const excelBuffer = XLSX.write(wb, { bookType: 'xlsx', type: 'array' });\n            const data = new Blob([excelBuffer], { type: fileType });\n            FileSaver.saveAs(data, \"fileName\" + fileExtension);\n        }\n    }\n    return (\n        <Aux >\n\n            <Row>\n                <Col>\n                    <button className=\"btn btn-info\" onClick={() => reloaddata()} >   <span className=\"fa fa-refresh\"></span>  {i18n.t('refresh')}</button>\n\n\n                    <hr />\n                    <Tabs defaultActiveKey=\"home\">\n                        {false && <Tab eventKey=\"ready\" title=\"not Ready\">\n                            <Card className=\"card-box mb-4\">\n                                <div className=\"card-header\">\n                                    <div className=\"card-header--title\">\n                                        {/* <b>This table card has custom content</b> */}\n                                    </div>\n                                    <Box className=\"card-header--actions\">\n                                        <IconButton\n                                            size=\"small\"\n                                            color=\"primary\"\n                                            className=\"text-primary\"\n                                            title=\"View details\"\n                                        ></IconButton>\n                                    </Box>\n                                </div>\n                                <CardContent className=\"p-0\">\n                                    <div className=\"table-responsive\" style={{ height: \"2000px\" }}>\n                                        <div className=\"app-row\">\n                                            <div className=\"app-col-xs-12 app-col-md-12\">\n                                                <BootstrapTable\n                                                    striped\n                                                    bordered\n                                                    hover\n                                                    variant=\"dark\"\n                                                    expandRow={expandRow}\n                                                    bootstrap4={true}\n                                                    keyField=\"id\"\n                                                    data={pendingPackagesnotready}\n                                                    columns={columnsnotready}\n                                                    //  selectRow={selectRow}\n                                                    pagination={paginationFactory({\n                                                        sizePerPage: 15,\n                                                        sizePerPageList: [5, 10, 15, 20, 25],\n                                                    })}\n                                                    filter={filterFactory()}\n                                                    headerClasses=\"table thead-light mb-0\"\n                                                ></BootstrapTable>\n\n                                                {/*  <CSVLink data={pendingPackages}><Button\n                                                    color=\"primary\"\n                                                    variant=\"contained\"\n\n                                                >\n                                                    download csv\n                                                </Button>\n\n                                                </CSVLink> */}\n\n\n                                            </div>\n                                        </div>\n                                    </div>\n                                </CardContent>\n                            </Card>\n                        </Tab>}\n\n                        <Tab eventKey=\"home\" title={i18n.t('status-planned')}>\n                            <Card className=\"card-box mb-4\">\n                                <div className=\"card-header\">\n                                    <div className=\"card-header--title\">\n                                        {/* <b>This table card has custom content</b> */}\n                                    </div>\n                                    <Box className=\"card-header--actions\">\n                                        <IconButton\n                                            size=\"small\"\n                                            color=\"primary\"\n                                            className=\"text-primary\"\n                                            title=\"View details\"\n                                        ></IconButton>\n                                        {/*    <ReactToPrint\n                                                content={() => this.componentRef}\n                                                trigger={() => <button className=\"btn btn-primary\">Print to PDF!</button>}\n                                            /> */}\n                                        <div>\n                                            <DropdownButton\n                                                title={<span className=\"fa fa-download\">{i18n.t('download-manifest')}</span>}\n                                                variant=\"info\"\n                                                id={`dropdown-variants-success`}\n                                                key=\"success\"\n                                                onSelect={(e) => exportPDF(e)}\n                                            >\n                                                <Dropdown.Item eventKey=\"pdf\">{i18n.t('pdf')}</Dropdown.Item>\n                                                <Dropdown.Item eventKey=\"csv\">{i18n.t('excel')} </Dropdown.Item>\n\n                                            </DropdownButton>\n                                            {/*  <Button onClick={() => exportPDF()}>{i18n.t('download-manifest')}</Button> */}\n                                        </div>\n                                    </Box>\n                                </div>\n                                <CardContent className=\"p-0\">\n                                    <div className=\"table-responsive\" style={{ height: \"2000px\" }}>\n                                        {/* <table className=\"table  table-hover text-nowrap mb-0\" ref={(response) => (this.componentRef = response)}>\n                                                <thead className=\"table thead-light mb-0\">\n                                                    <tr>\n                                                        <th className=\"text-center\">customer</th>\n                                                        <th className=\"text-center\">address</th>\n                                                        <th className=\"text-center\">Date prélèvement</th>\n                                                        <th className=\"text-center\"></th>\n                                                        <th className=\"text-center\"></th>\n                                                    </tr>\n                                                </thead>\n                                                <tbody>\n                                                    {pendingPackages && pendingPackages.map((pickup, index) => (\n                                                        <tr key={index}>\n\n                                                            <td className=\"text-center\">\n                                                                <div className=\"h-auto \">\n                                                                    {pickup.colis.name_complete} : {pickup.colis.phone_number}\n                                                                    <span >\n\n                                                                    </span>\n                                                                </div>\n                                                            </td>\n                                                            <td className=\"text-center\">\n                                                                <div className=\"h-auto \">\n                                                                    {pickup.colis.code_postal} :{\" \"}\n                                                                    {pickup.colis.address}\n                                                                </div>\n                                                            </td>\n\n                                                            <td className=\"text-center\">\n                                                                <div className=\"h-auto \">\n                                                                    {pickup.colis.created_at}\n                                                                </div>\n                                                            </td>\n\n\n                                                            <td>\n\n                                                                <TemplatePrint Template={pickup} providerinfo={providerinfo} > </TemplatePrint>\n                                                            </td>\n                                                            <td>\n                                                          \n                                                            </td>\n                                                            <td className=\"text-center\">\n                                                                <Box>\n                                                                    <IconButton color=\"primary\" size=\"small\">\n                                                                      \n                                                                    </IconButton>\n                                                                </Box>\n                                                            </td>\n                                                        </tr>\n                                                    ))}\n                                                </tbody>\n                                            </table> */}\n                                        <div className=\"app-row\">\n                                            <div className=\"app-col-xs-12 app-col-md-12\">\n                                                <BootstrapTable\n                                                    striped\n                                                    bordered\n                                                    hover\n                                                    variant=\"dark\"\n                                                    expandRow={expandRow}\n                                                    bootstrap4={true}\n                                                    keyField=\"id\"\n                                                    data={pendingPackages}\n                                                    columns={columns}\n                                                    // selectRow={selectRow}\n                                                    pagination={paginationFactory({\n                                                        sizePerPage: 15,\n                                                        sizePerPageList: [5, 10, 15, 20, 25],\n                                                    })}\n                                                    filter={filterFactory()}\n                                                    headerClasses=\"table thead-light mb-0\"\n                                                ></BootstrapTable>\n\n                                                {/*   <CSVLink data={pendingPackages}><Button\n                                                    color=\"primary\"\n                                                    variant=\"contained\"\n\n                                                >\n                                                    download csv\n                                                </Button>\n\n                                                </CSVLink> */}\n\n\n                                            </div>\n                                        </div>\n                                    </div>\n                                </CardContent>\n                            </Card>\n                        </Tab>\n                        <Tab eventKey=\"profile\" title={i18n.t('status-engoing')}>\n                            <Card className=\"card-box mb-4\">\n                                <div className=\"card-header\">\n                                    <div className=\"card-header--title\">\n                                        {/* <b>This table card has custom content</b> */}\n                                    </div>\n                                    <Box className=\"card-header--actions\">\n                                        <IconButton\n                                            size=\"small\"\n                                            color=\"primary\"\n                                            className=\"text-primary\"\n                                            title=\"View details\"\n                                        ></IconButton>\n                                        <DropdownButton\n                                            title={<span className=\"fa fa-download\">{i18n.t('download-manifest')}</span>}\n                                            variant=\"info\"\n                                            id={`dropdown-variants-success`}\n                                            key=\"success\"\n                                            onSelect={(e) => exportPDFFF(e)}\n                                        >\n                                            <Dropdown.Item eventKey=\"pdf\">{i18n.t('pdf')}</Dropdown.Item>\n                                            <Dropdown.Item eventKey=\"csv\">{i18n.t('excel')} </Dropdown.Item>\n\n                                        </DropdownButton>\n                                    </Box>\n                                </div>\n                                <CardContent className=\"p-0\">\n                                    <div className=\"table-responsive\" style={{ height: \"2000px\" }} >\n                                        <div className=\"app-row\">\n                                            <div className=\"app-col-xs-12 app-col-md-12\">\n                                                <BootstrapTable\n                                                    striped\n                                                    bordered\n                                                    hover\n                                                    variant=\"dark\"\n                                                    keyField=\"id\"\n                                                    data={ongoingPackages}\n                                                    columns={columnsencours}\n                                                    // selectRow={selectRow}\n                                                    pagination={paginationFactory({\n                                                        sizePerPage: 15,\n                                                        sizePerPageList: [5, 10, 15, 20, 25],\n                                                    })}\n                                                    filter={filterFactory()}\n                                                    headerClasses=\"table thead-light mb-0\"\n                                                ></BootstrapTable>\n\n                                                {/*   <CSVLink data={pendingPackages}><Button\n                                                    color=\"primary\"\n                                                    variant=\"contained\"\n\n                                                >\n                                                    download csv\n                                                </Button>\n\n                                                </CSVLink> */}\n\n\n                                            </div>\n                                        </div>\n                                    </div>\n                                    {/* <table className=\"table  table-hover text-nowrap mb-0\">\n                                                <thead className=\"table thead-light mb-0\">\n                                                    <tr>\n                                                        <th className=\"text-center\">customer</th>\n                                                        <th className=\"text-center\">address</th>\n                                                        <th className=\"text-center\">Date prélèvement</th>\n                                                        <th className=\"text-center\"></th>\n                                                        <th className=\"text-center\"></th>\n\n                                                    </tr>\n                                                </thead>\n                                                <tbody>\n                                                    {ongoingPackages && ongoingPackages.map((pickup, index) => (\n\n                                                        <tr key={index}>\n\n                                                            <td className=\"text-center\">\n                                                                <div className=\"h-auto \">\n                                                                    {pickup.colis.name_complete} : {pickup.colis.phone_number}\n                                                                    <span >\n\n                                                                    </span>\n                                                                </div>\n                                                            </td>\n                                                            <td className=\"text-center\">\n                                                                <div className=\"h-auto \">\n                                                                    {pickup.colis.code_postal} :{\" \"}\n                                                                    {pickup.colis.address}\n                                                                </div>\n                                                            </td>\n                                                            <td className=\"text-center\">\n\n                                                                {pickup.driver\n                                                                    ? pickup.driver.username\n                                                                    : <div style={{ background: \"#e863da\" }}> </div>}\n\n                                                            </td>\n                                                            <td className=\"text-center\">\n                                                                <div className=\"h-auto \">\n                                                                    {pickup.date_enlevement}\n                                                                </div>\n                                                            </td>\n\n\n                                                            <td>\n\n                                                               <TemplatePrint Template={pickup} > </TemplatePrint> \n                                                            </td>\n                                                            <td>\n                                                                <div className=\"h-auto  badge badge-danger\"> \n                          <button className=\"badge-info\" onClick={()=>this.savedriver()}>savedriver</button>\n\n                    </div> \n                        <div className=\" badge badge-danger\">\n                          delete\n\n                   </div> \n                                                            </td>\n                                                            <td className=\"text-center\">\n                                                                <Box>\n                                                                    <IconButton color=\"primary\" size=\"small\">\n                                                                \n                                                                    </IconButton>\n                                                                </Box>\n                                                            </td>\n                                                        </tr>\n                                                    ))}\n                                                </tbody>\n                                            </table>\n                                        </div> */}\n                                </CardContent>\n                            </Card>\n                        </Tab>\n                        <Tab eventKey=\"contact\" title={i18n.t('pickups')}>\n                            <Card className=\"card-box mb-4\">\n                                <div className=\"card-header\">\n                                    <div className=\"card-header--title\">\n                                        {/* <b>This table card has custom content</b> */}\n                                    </div>\n                                    <Box className=\"card-header--actions\">\n                                        <IconButton\n                                            size=\"small\"\n                                            color=\"primary\"\n                                            className=\"text-primary\"\n                                            title=\"View details\"\n                                        ></IconButton>\n                                    </Box>\n                                </div>\n                                <CardContent className=\"p-0\">\n                                    <div className=\"table-responsive\" style={{ height: \"2000px\" }}>\n                                        <div className=\"app-row\">\n                                            <div className=\"app-col-xs-12 app-col-md-12\">\n                                                <BootstrapTable\n                                                    striped\n                                                    bordered\n                                                    hover\n                                                    variant=\"dark\"\n                                                    keyField=\"id\"\n                                                    data={enlevePackages}\n                                                    columns={columnsencours}\n                                                    // selectRow={selectRow}\n                                                    pagination={paginationFactory({\n                                                        sizePerPage: 15,\n                                                        sizePerPageList: [5, 10, 15, 20, 25],\n                                                    })}\n                                                    filter={filterFactory()}\n                                                    headerClasses=\"table thead-light mb-0\"\n                                                ></BootstrapTable>\n\n                                                {/*    <CSVLink data={pendingPackages}><Button\n                                                    color=\"primary\"\n                                                    variant=\"contained\"\n\n                                                >\n                                                    download csv\n                                                </Button>\n\n                                                </CSVLink>\n */}\n\n                                            </div>\n                                        </div>\n                                    </div>\n                                    {/* <div className=\"table-responsive\" style={{height:\"2000px\"}}>\n                                            <table className=\"table  table-hover text-nowrap mb-0\">\n                                                <thead className=\"table thead-light mb-0\">\n                                                    <tr>\n                                                        <th className=\"text-center\">customer</th>\n                                                        <th className=\"text-center\">address</th>\n                                                        <th className=\"text-center\">Date prélèvement</th>\n                                                        <th className=\"text-center\"></th>\n                                                        <th className=\"text-center\"></th>\n                                                    </tr>\n                                                </thead>\n                                                <tbody>\n                                                    {enlevePackages && enlevePackages.map((pickup, index) => (\n                                                        <tr key={index}>\n\n                                                            <td className=\"text-center\">\n                                                                <div className=\"h-auto \">\n                                                                    {pickup.colis.name_complete} : {pickup.colis.phone_number}\n                                                                    <span >\n\n                                                                    </span>\n                                                                </div>\n                                                            </td>\n                                                            <td className=\"text-center\">\n                                                                <div className=\"h-auto \">\n                                                                    {pickup.colis.code_postal} :{\" \"}\n                                                                    {pickup.colis.address}\n                                                                </div>\n                                                            </td>\n                                                            <td className=\"text-center\">\n\n                                                                {pickup.driver\n                                                                    ? pickup.driver.username\n                                                                    : <div style={{ background: \"#e863da\" }}> </div>}\n\n                                                            </td>\n                                                            <td className=\"text-center\">\n                                                                <div className=\"h-auto \">\n                                                                    {pickup.date_enlevement}\n                                                                </div>\n                                                            </td>\n                                                            <td className=\"text-center\">\n\n                                                            </td>\n                                                            <td>\n\n                                                                <TemplatePrint Template={pickup} > </TemplatePrint> \n                                                            </td>\n                                                        </tr>\n                                                    ))}\n                                                </tbody>\n                                            </table>\n                                        </div>*/}\n                                </CardContent>\n                            </Card>\n                        </Tab>\n                    </Tabs>\n                </Col>\n            </Row>\n        </Aux>\n    );\n}\n\nexport default ListPickupProvider;\n","\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Modal, Button } from 'react-bootstrap';\r\n//import { FaCloudDownloadAlt } from 'react-icons/fa';\r\n//import { jsPDF } from \"jspdf\";\r\nimport jwtDecode from \"jwt-decode\";\r\n//import axios from \"axios\"\r\n//import html2canvas from 'html2canvas';\r\nimport PrintPage from './T'\r\nimport axios from 'axios';\r\n// const saveSvgAsPng = require('save-svg-as-png')\r\n// const imageOptions = {\r\n//   scale: 5,\r\n//   encoderOptions: 1,\r\n//   backgroundColor: 'white',\r\n// }\r\nvar urlbackend = require(\"../../env/env\")();\r\n\r\nfunction TemplatePrint(props) {\r\n  const [show, setShow] = useState(false);\r\n  const [provider, setprovider] = useState(props.providerinfo);\r\n\r\n  useEffect(() => {\r\n\r\n\r\n  \r\n    setprovider(props.providerinfo?.data[0])\r\n \r\n \r\n\r\n  }, [])\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n\r\n  return (\r\n    <>\r\n      <Button variant=\"success\"\r\n        onClick={handleShow}> <span className=\"fa fa-print\"></span></Button>\r\n\r\n\r\n      <Modal size=\"xl\" show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title> Fast Box  </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <div style={{ paddingLeft: 50 }} >\r\n            <PrintPage Template={props.Template} providerinfo={provider}></PrintPage>\r\n          </div>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          {/*  <Button onClick={printemplate}>Télécharger <FaCloudDownloadAlt /></Button>  */}\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            Fermer\r\n          </Button>\r\n\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default TemplatePrint","\nimport React, { useEffect, useState } from 'react';\nimport {\n    Row,\n    Col,\n    Card,\n    Button,\n    Modal,\n    FormControl,\n    InputGroup\n} from \"react-bootstrap\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport CustomInput from \"../../Components/CustomInput\";\nimport InputStatus from \"../../Components/InputStatus\"\n\nimport Aux from \"../../hoc/_Aux\";\nimport axios from 'axios';\nvar urlbackend = require(\"../../env/env\")();\nconst phoneRegExp = /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/;\nconst SignupSchema = Yup.object().shape({\n    email: Yup.string().email(\"Invalid Email\").required(\"Email is Required\"),\n    phone_number: Yup.string()\n        .matches(phoneRegExp, \"Phone number is not valid\")\n        .required(\"Phone is Required\"),\n    city: Yup.string()\n        .min(2, \"City is Too Short!\")\n        .max(20, \"City is Too Long!\")\n        .required(\"City is Required\"),\n    description: Yup.string()\n        .min(2, \"description is Too Short!\")\n        .max(20, \"description is Too Long!\")\n        .required(\"description is Required\"),\n    name: Yup.string()\n        .min(2, \"name is Too Short!\")\n        .max(20, \"name is Too Long!\")\n        .required(\"name is Required\"),\n    code: Yup.string()\n        .min(2, \"code is Too Short!\")\n        .max(20, \"code is Too Long!\")\n        .required(\"code is Required\"),\n});\nfunction TicketAdd(props) {\n    const [show, setShow] = useState(false);\n    //const [pickupsUpdate] = useState(props.pickup)\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n    useEffect(() => {\n\n    }, [])\n    const handlSubmit = (values) => {\n\n        console.log(props.colis.id)\n        console.log(values)\n        console.log(props.colis.id)\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                'Access-Control-Allow-Headers': 'Authorization',\n                \"x-access-token\": localStorage.getItem('token'),\n                'Authorization': 'Bearer ' + localStorage.getItem('token'),\n            },\n        };\n        axios.post(urlbackend + \"/ticket/add\", {\n            \"message\": values.message,\n            \"colis\": props.colis.id,\n            \"type\": values.type,\n            \"priority\": values.priority,\n            \"value\": {\n                price: values.price,\n                city: values.city,\n                gouvernorat: values.gouvernorat,\n                address: values.address,\n                type_envoi: values.type_envoi,\n                payment_mode: values.payment_mode,\n\n            }\n        }, config)\n            .then(response => {\n                alert(\"add Succefull\")\n                console.log(response.data)\n                handleClose()\n            })\n            .catch(e => {\n                console.log(e)\n            })\n    };\n    const showForm = ({\n        values,\n        errors,\n        touched,\n        handleChange,\n        handleSubmit,\n        handleBlur,\n        setFieldValue,\n        isSubmitting,\n        dirty,\n        isValid,\n        handleReset,\n    }) => {\n        // console.log(errors);\n        return (\n            <Aux>\n                <Row>\n                    <Col>\n                        <Card>\n                            <Card.Header>\n                                <Card.Title as=\"h5\">Ajouter  demande pour modifier colis</Card.Title>\n                            </Card.Header>\n                            <Card.Body>\n                                <Row>\n                                    <Col md={12}>\n                                        <InputGroup className=\"mb-3\">\n                                            <FormControl\n                                                as=\"select\"\n                                                id=\"type\"\n                                                custom\n                                                onChange={handleChange}\n                                                onBlur={handleBlur}\n                                                value={values.type}\n                                            >\n                                                <option>choisir Type de demande</option>\n\n                                                {[\"Change Prix\", \"Change date livraison\", \"changer addresse\",\"changer N. de téléphone\", \"changer mode de payement\", \"changer type d'envoi\"].map((driver, index) => (\n                                                    <option key={driver} value={driver}>\n                                                        {driver}\n                                                    </option>\n                                                ))}\n                                            </FormControl>\n                                        </InputGroup>\n\n                                        <label htmlFor=\"basic-url\">Priorité</label>\n\n                                        <InputGroup className=\"mb-3\">\n                                            <FormControl\n                                                as=\"select\"\n                                                id=\"priority\"\n                                                custom\n                                                onChange={handleChange}\n                                                onBlur={handleBlur}\n\n                                            >\n                                                <option>choose priorité</option>\n\n                                                {[{ name: \"Haute\", value: \"2\" }, { name: \"moyenne\", value: \"1\" }, { name: \"failbe\", value: \"0\" }].map((agence, index) => (\n                                                    <option key={agence.name} value={agence.value}>\n                                                        {agence.name}\n                                                    </option>\n                                                ))}\n                                            </FormControl>\n                                        </InputGroup>\n                                        <CustomInput\n                                            name=\"message\"\n                                            label=\"message\"\n                                            onChange={handleChange}\n                                            onBlur={handleBlur}\n                                            value={values.message}\n                                            errors={errors.message}\n                                            touched={touched.message}\n                                            type=\"message\"\n                                        />\n                                        {values.type === \"Change Prix\" && <CustomInput\n                                            name=\"price\"\n                                            label=\"prix\"\n                                            onChange={handleChange}\n                                            onBlur={handleBlur}\n                                            value={values.price}\n                                            errors={errors.price}\n                                            touched={touched.price}\n                                        />}\n                                        {values.type === \"changer addresse\" && <CustomInput\n                                            name=\"city\"\n                                            label=\"city\"\n                                            onChange={handleChange}\n                                            onBlur={handleBlur}\n                                            value={values.city}\n                                            errors={errors.city}\n                                            touched={touched.city}\n                                            type=\"message\"\n                                        />}\n                                        {values.type === \"changer addresse\" && <CustomInput\n                                            name=\"gouvernorat\"\n                                            label=\"gouvernorat\"\n                                            onChange={handleChange}\n                                            onBlur={handleBlur}\n                                            value={values.gouvernorat}\n                                            errors={errors.gouvernorat}\n                                            touched={touched.gouvernorat}\n                                        />}\n                                        {values.type === \"changer addresse\" && <CustomInput\n                                            name=\"address\"\n                                            label=\"address\"\n                                            onChange={handleChange}\n                                            onBlur={handleBlur}\n                                            value={values.address}\n                                            errors={errors.address}\n                                            touched={touched.address}\n                                        />}\n                                            {values.type === \"changer N. de téléphone\" && <CustomInput\n                                            name=\"phone_number\"\n                                            label=\"N. de téléphone\"\n                                            onChange={handleChange}\n                                            onBlur={handleBlur}\n                                            value={values.phone_number}\n                                            errors={errors.phone_number}\n                                            touched={touched.phone_number}\n                                        />}\n                                        {values.type === \"changer type d'envoi\" &&   \n                                        <div>\n                                         <label htmlFor=\"basic-url\">type_envoi <InputStatus errors={errors.type_envoi} touched={touched.type_envoi} /></label>\n\n                                         <InputGroup className=\"mb-3\">\n                                             <FormControl\n                                                 as=\"select\"\n                                                 id=\"type_envoi\"\n                                                 custom\n                                                 onChange={handleChange}\n                                                 onBlur={handleBlur}\n                                                 value={values.type_envoi}\n                                             >\n                                                 <option>type envoi</option>\n                                         \n                                                 {[\"LIVRAISON A DOMICILE\", \"ECHANGE\", \"RECUPERATION\"].map((type_envoi, index) => (\n                                                     <option key={type_envoi} value={type_envoi}>\n                                                         {type_envoi}\n                                                     </option>\n                                                 ))}\n                                             </FormControl>\n                                         </InputGroup>\n                                         </div>}\n                                    </Col>\n                                    <Col md={6}>\n\n\n\n\n\n\n\n\n                                    </Col>\n                                </Row>\n\n                                <Button\n                                    onClick={() => {\n                                        handlSubmit(values);\n                                        handleReset();\n                                        // console.log(values);\n                                    }}\n                                >\n                                    Envoyer demande\n                                </Button>\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                </Row>\n            </Aux>\n        );\n    };\n    return (\n        <>\n            <Button variant=\"secondary\"\n                onClick={handleShow}> <span className=\"fa fa-ticket\"></span></Button>\n\n\n            <Modal show={show} onHide={handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title> </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n\n\n                    <Formik\n                        initialValues={{\n                            message: \"\",\n                            price: props.colis.price,\n                            city: props.colis.city,\n                            address: props.colis.address,\n                            gouvernorat: props.colis.gouvernorat,\n                            type_envoi: props.colis.type_envoi,\n                            payment_mode: props.colis.payment_mode,\n                            phone_number: props.colis.phone_number\n\n                        }}\n                        onSubmit={(values, { setSubmitting }) => {\n                            this.submitForm(values);\n                            setSubmitting(false);\n                        }}\n                        validationSchema={SignupSchema}\n                    >\n                        {(props) => showForm(props)}\n                    </Formik>\n\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        Fermer\n                    </Button>\n                    {/* <Button variant=\"primary\" onClick={handleClose}>\n            Save Changes\n            </Button> */}\n                </Modal.Footer>\n            </Modal>\n        </>\n    );\n}\n\nexport default TicketAdd","/*\n* FileSaver.js\n* A saveAs() FileSaver implementation.\n*\n* By Eli Grey, http://eligrey.com\n*\n* License : https://github.com/eligrey/FileSaver.js/blob/master/LICENSE.md (MIT)\n* source  : http://purl.eligrey.com/github/FileSaver.js\n*/\n\n// The one and only way of getting global scope in all environments\n// https://stackoverflow.com/q/3277182/1008999\nvar _global = typeof window === 'object' && window.window === window\n  ? window : typeof self === 'object' && self.self === self\n  ? self : typeof global === 'object' && global.global === global\n  ? global\n  : this\n\nfunction bom (blob, opts) {\n  if (typeof opts === 'undefined') opts = { autoBom: false }\n  else if (typeof opts !== 'object') {\n    console.warn('Deprecated: Expected third argument to be a object')\n    opts = { autoBom: !opts }\n  }\n\n  // prepend BOM for UTF-8 XML and text/* types (including HTML)\n  // note: your browser will automatically convert UTF-16 U+FEFF to EF BB BF\n  if (opts.autoBom && /^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(blob.type)) {\n    return new Blob([String.fromCharCode(0xFEFF), blob], { type: blob.type })\n  }\n  return blob\n}\n\nfunction download (url, name, opts) {\n  var xhr = new XMLHttpRequest()\n  xhr.open('GET', url)\n  xhr.responseType = 'blob'\n  xhr.onload = function () {\n    saveAs(xhr.response, name, opts)\n  }\n  xhr.onerror = function () {\n    console.error('could not download file')\n  }\n  xhr.send()\n}\n\nfunction corsEnabled (url) {\n  var xhr = new XMLHttpRequest()\n  // use sync to avoid popup blocker\n  xhr.open('HEAD', url, false)\n  try {\n    xhr.send()\n  } catch (e) {}\n  return xhr.status >= 200 && xhr.status <= 299\n}\n\n// `a.click()` doesn't work for all browsers (#465)\nfunction click (node) {\n  try {\n    node.dispatchEvent(new MouseEvent('click'))\n  } catch (e) {\n    var evt = document.createEvent('MouseEvents')\n    evt.initMouseEvent('click', true, true, window, 0, 0, 0, 80,\n                          20, false, false, false, false, 0, null)\n    node.dispatchEvent(evt)\n  }\n}\n\n// Detect WebView inside a native macOS app by ruling out all browsers\n// We just need to check for 'Safari' because all other browsers (besides Firefox) include that too\n// https://www.whatismybrowser.com/guides/the-latest-user-agent/macos\nvar isMacOSWebView = _global.navigator && /Macintosh/.test(navigator.userAgent) && /AppleWebKit/.test(navigator.userAgent) && !/Safari/.test(navigator.userAgent)\n\nvar saveAs = _global.saveAs || (\n  // probably in some web worker\n  (typeof window !== 'object' || window !== _global)\n    ? function saveAs () { /* noop */ }\n\n  // Use download attribute first if possible (#193 Lumia mobile) unless this is a macOS WebView\n  : ('download' in HTMLAnchorElement.prototype && !isMacOSWebView)\n  ? function saveAs (blob, name, opts) {\n    var URL = _global.URL || _global.webkitURL\n    var a = document.createElement('a')\n    name = name || blob.name || 'download'\n\n    a.download = name\n    a.rel = 'noopener' // tabnabbing\n\n    // TODO: detect chrome extensions & packaged apps\n    // a.target = '_blank'\n\n    if (typeof blob === 'string') {\n      // Support regular links\n      a.href = blob\n      if (a.origin !== location.origin) {\n        corsEnabled(a.href)\n          ? download(blob, name, opts)\n          : click(a, a.target = '_blank')\n      } else {\n        click(a)\n      }\n    } else {\n      // Support blobs\n      a.href = URL.createObjectURL(blob)\n      setTimeout(function () { URL.revokeObjectURL(a.href) }, 4E4) // 40s\n      setTimeout(function () { click(a) }, 0)\n    }\n  }\n\n  // Use msSaveOrOpenBlob as a second approach\n  : 'msSaveOrOpenBlob' in navigator\n  ? function saveAs (blob, name, opts) {\n    name = name || blob.name || 'download'\n\n    if (typeof blob === 'string') {\n      if (corsEnabled(blob)) {\n        download(blob, name, opts)\n      } else {\n        var a = document.createElement('a')\n        a.href = blob\n        a.target = '_blank'\n        setTimeout(function () { click(a) })\n      }\n    } else {\n      navigator.msSaveOrOpenBlob(bom(blob, opts), name)\n    }\n  }\n\n  // Fallback to using FileReader and a popup\n  : function saveAs (blob, name, opts, popup) {\n    // Open a popup immediately do go around popup blocker\n    // Mostly only available on user interaction and the fileReader is async so...\n    popup = popup || open('', '_blank')\n    if (popup) {\n      popup.document.title =\n      popup.document.body.innerText = 'downloading...'\n    }\n\n    if (typeof blob === 'string') return download(blob, name, opts)\n\n    var force = blob.type === 'application/octet-stream'\n    var isSafari = /constructor/i.test(_global.HTMLElement) || _global.safari\n    var isChromeIOS = /CriOS\\/[\\d]+/.test(navigator.userAgent)\n\n    if ((isChromeIOS || (force && isSafari) || isMacOSWebView) && typeof FileReader !== 'undefined') {\n      // Safari doesn't allow downloading of blob URLs\n      var reader = new FileReader()\n      reader.onloadend = function () {\n        var url = reader.result\n        url = isChromeIOS ? url : url.replace(/^data:[^;]*;/, 'data:attachment/file;')\n        if (popup) popup.location.href = url\n        else location = url\n        popup = null // reverse-tabnabbing #460\n      }\n      reader.readAsDataURL(blob)\n    } else {\n      var URL = _global.URL || _global.webkitURL\n      var url = URL.createObjectURL(blob)\n      if (popup) popup.location = url\n      else location.href = url\n      popup = null // reverse-tabnabbing #460\n      setTimeout(function () { URL.revokeObjectURL(url) }, 4E4) // 40s\n    }\n  }\n)\n\n_global.saveAs = saveAs.saveAs = saveAs\n\nif (typeof module !== 'undefined') {\n  module.exports = saveAs;\n}\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"className\", \"variant\", \"as\"];\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  variant: null\n};\nvar CardImg = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\nfunction (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      variant = _ref.variant,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'img' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref,\n    className: classNames(variant ? prefix + \"-\" + variant : prefix, className)\n  }, props));\n});\nCardImg.displayName = 'CardImg';\nCardImg.defaultProps = defaultProps;\nexport default CardImg;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"className\", \"bg\", \"text\", \"border\", \"body\", \"children\", \"as\"];\nimport classNames from 'classnames';\nimport React, { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nimport CardContext from './CardContext';\nimport CardImg from './CardImg';\nvar DivStyledAsH5 = divWithClassName('h5');\nvar DivStyledAsH6 = divWithClassName('h6');\nvar CardBody = createWithBsPrefix('card-body');\nvar CardTitle = createWithBsPrefix('card-title', {\n  Component: DivStyledAsH5\n});\nvar CardSubtitle = createWithBsPrefix('card-subtitle', {\n  Component: DivStyledAsH6\n});\nvar CardLink = createWithBsPrefix('card-link', {\n  Component: 'a'\n});\nvar CardText = createWithBsPrefix('card-text', {\n  Component: 'p'\n});\nvar CardHeader = createWithBsPrefix('card-header');\nvar CardFooter = createWithBsPrefix('card-footer');\nvar CardImgOverlay = createWithBsPrefix('card-img-overlay');\nvar defaultProps = {\n  body: false\n};\nvar Card = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      bg = _ref.bg,\n      text = _ref.text,\n      border = _ref.border,\n      body = _ref.body,\n      children = _ref.children,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'card');\n  var cardContext = useMemo(function () {\n    return {\n      cardHeaderBsPrefix: prefix + \"-header\"\n    };\n  }, [prefix]);\n  return /*#__PURE__*/React.createElement(CardContext.Provider, {\n    value: cardContext\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, prefix, bg && \"bg-\" + bg, text && \"text-\" + text, border && \"border-\" + border)\n  }), body ?\n  /*#__PURE__*/\n  // @ts-ignore\n  React.createElement(CardBody, null, children) : children));\n});\nCard.displayName = 'Card';\nCard.defaultProps = defaultProps;\nCard.Img = CardImg;\nCard.Title = CardTitle;\nCard.Subtitle = CardSubtitle;\nCard.Body = CardBody;\nCard.Link = CardLink;\nCard.Text = CardText;\nCard.Header = CardHeader;\nCard.Footer = CardFooter;\nCard.ImgOverlay = CardImgOverlay;\nexport default Card;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"title\", \"children\", \"bsPrefix\", \"rootCloseEvent\", \"variant\", \"size\", \"menuAlign\", \"menuRole\", \"renderMenuOnMount\", \"disabled\", \"href\", \"id\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Dropdown from './Dropdown';\nimport DropdownToggle from './DropdownToggle';\nimport DropdownMenu, { alignPropType } from './DropdownMenu';\nvar propTypes = {\n  /**\n   * An html id attribute for the Toggle button, necessary for assistive technologies, such as screen readers.\n   * @type {string|number}\n   * @required\n   */\n  id: PropTypes.any,\n\n  /** An `href` passed to the Toggle component */\n  href: PropTypes.string,\n\n  /** An `onClick` handler passed to the Toggle component */\n  onClick: PropTypes.func,\n\n  /** The content of the non-toggle Button.  */\n  title: PropTypes.node.isRequired,\n\n  /** Disables both Buttons  */\n  disabled: PropTypes.bool,\n\n  /**\n   * Aligns the dropdown menu responsively.\n   *\n   * _see [DropdownMenu](#dropdown-menu-props) for more details_\n   *\n   * @type {\"left\"|\"right\"|{ sm: \"left\"|\"right\" }|{ md: \"left\"|\"right\" }|{ lg: \"left\"|\"right\" }|{ xl: \"left\"|\"right\"} }\n   */\n  menuAlign: alignPropType,\n\n  /** An ARIA accessible role applied to the Menu component. When set to 'menu', The dropdown */\n  menuRole: PropTypes.string,\n\n  /** Whether to render the dropdown menu in the DOM before the first time it is shown */\n  renderMenuOnMount: PropTypes.bool,\n\n  /**\n   *  Which event when fired outside the component will cause it to be closed.\n   *\n   * _see [DropdownMenu](#dropdown-menu-props) for more details_\n   */\n  rootCloseEvent: PropTypes.string,\n\n  /** @ignore */\n  bsPrefix: PropTypes.string,\n\n  /** @ignore */\n  variant: PropTypes.string,\n\n  /** @ignore */\n  size: PropTypes.string\n};\n/**\n * A convenience component for simple or general use dropdowns. Renders a `Button` toggle and all `children`\n * are passed directly to the default `Dropdown.Menu`. This component accepts all of\n * [`Dropdown`'s props](#dropdown-props).\n *\n * _All unknown props are passed through to the `Dropdown` component._ Only\n * the Button `variant`, `size` and `bsPrefix` props are passed to the toggle,\n * along with menu-related props are passed to the `Dropdown.Menu`\n */\n\nvar DropdownButton = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var title = _ref.title,\n      children = _ref.children,\n      bsPrefix = _ref.bsPrefix,\n      rootCloseEvent = _ref.rootCloseEvent,\n      variant = _ref.variant,\n      size = _ref.size,\n      menuAlign = _ref.menuAlign,\n      menuRole = _ref.menuRole,\n      renderMenuOnMount = _ref.renderMenuOnMount,\n      disabled = _ref.disabled,\n      href = _ref.href,\n      id = _ref.id,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(Dropdown, _extends({\n    ref: ref\n  }, props), /*#__PURE__*/React.createElement(DropdownToggle, {\n    id: id,\n    href: href,\n    size: size,\n    variant: variant,\n    disabled: disabled,\n    childBsPrefix: bsPrefix\n  }, title), /*#__PURE__*/React.createElement(DropdownMenu, {\n    align: menuAlign,\n    role: menuRole,\n    renderOnMount: renderMenuOnMount,\n    rootCloseEvent: rootCloseEvent\n  }, children));\n});\nDropdownButton.displayName = 'DropdownButton';\nDropdownButton.propTypes = propTypes;\nexport default DropdownButton;"],"names":["urlbackend","require","fileType","useState","pendingPackages","setpendingPackages","ongoingPackages","setongoingPackages","enlevePackages","setenlevePackages","setpendingPackagesnotready","providerinfo","setproviderinfo","providerr","setproviderr","expandRow","parentClassName","renderer","row","rowIndex","style","color","fontWeight","textAlign","DL","colis","price","designation","onlyOneExpanding","linkFollow","cell","formatExtraData","to","id","variant","onClick","console","log","className","Impression","Template","demandeTicket","columns","dataField","text","i18n","formatter","gouvernorat","city","address","payment_mode","columnsencours","useEffect","jwtDecode","localStorage","getItem","m","axios","config","then","Response","data","getdata","catch","headers","getpendingPackages","getongoingpackage","getdonepackage","response","length","errors","error","exportPDF","typeexport","doc","jsPDF","setFontSize","title","username","title1","firstname","lastname","content","startY","head","body","map","elt","index_colis","name_complete","phone_number","type_envoi","image","Image","src","addImage","rect","setFont","undefined","moment","format","table","myTotal","i","len","parseFloat","calculvaleurmanifest","autoTable","save","listdownload","e","wb","Sheets","XLSX","SheetNames","excelBuffer","bookType","type","Blob","FileSaver","defaultActiveKey","eventKey","size","onSelect","height","striped","bordered","hover","bootstrap4","keyField","pagination","paginationFactory","sizePerPage","sizePerPageList","filter","filterFactory","headerClasses","exportPDFFF","props","show","setShow","provider","setprovider","handleClose","onHide","closeButton","paddingLeft","SignupSchema","Yup","shape","email","required","matches","min","max","description","name","code","showForm","values","touched","handleChange","handleBlur","handleSubmit","handleReset","setFieldValue","isSubmitting","dirty","isValid","as","md","custom","onChange","onBlur","value","driver","index","htmlFor","agence","label","message","priority","alert","handlSubmit","initialValues","onSubmit","setSubmitting","submitForm","validationSchema","b","a","autoBom","warn","test","c","d","XMLHttpRequest","open","responseType","onload","g","onerror","send","status","dispatchEvent","MouseEvent","document","createEvent","initMouseEvent","window","f","self","global","navigator","userAgent","saveAs","HTMLAnchorElement","prototype","h","URL","webkitURL","j","createElement","download","rel","href","origin","location","target","createObjectURL","setTimeout","revokeObjectURL","msSaveOrOpenBlob","innerText","HTMLElement","safari","FileReader","k","onloadend","result","replace","readAsDataURL","l","module","exports","_excluded","CardImg","React","_ref","ref","bsPrefix","_ref$as","Component","_objectWithoutPropertiesLoose","prefix","useBootstrapPrefix","_extends","classNames","displayName","defaultProps","DivStyledAsH5","divWithClassName","DivStyledAsH6","CardBody","createWithBsPrefix","CardTitle","CardSubtitle","CardLink","CardText","CardHeader","CardFooter","CardImgOverlay","Card","bg","border","children","cardContext","useMemo","cardHeaderBsPrefix","CardContext","Img","Title","Subtitle","Body","Link","Text","Header","Footer","ImgOverlay","propTypes","PropTypes","disabled","menuAlign","alignPropType","menuRole","renderMenuOnMount","rootCloseEvent","DropdownButton","Dropdown","DropdownToggle","childBsPrefix","DropdownMenu","align","role","renderOnMount"],"sourceRoot":""}