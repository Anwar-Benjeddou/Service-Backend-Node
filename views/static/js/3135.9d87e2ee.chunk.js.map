{"version":3,"file":"static/js/3135.9d87e2ee.chunk.js","mappings":"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","sources":["Components/CustomInput.js","Components/InputStatus.js","Routes/Admin/Console/Update.driver.js","Routes/Admin/Console/List.manifeste.Console.js","Routes/Config/config.js","../node_modules/file-saver/src/FileSaver.js","../node_modules/react-bootstrap/esm/DropdownButton.js"],"sourcesContent":["import React from 'react';\nimport { InputGroup, FormControl} from 'react-bootstrap';\nimport InputStatus from './InputStatus';\n\nconst CustomInput = ({ name,label, onChange , onBlur, value,type, isInvalid, errors,touched\n  \n}) => {\n  \n    \n  return (\n   <>\n   {\n       label === 'Phone' ? (\n        <>   \n        <label htmlFor=\"basic-url\">{name} <InputStatus errors={errors} touched={touched}/></label>\n        \n       <InputGroup className=\"mb-3\">\n       <InputGroup.Prepend>\n          <InputGroup.Text id=\"basic-addon1\">+216</InputGroup.Text>\n        </InputGroup.Prepend>\n           <FormControl\n               placeholder={label}\n               aria-label={name}\n               aria-describedby={name}\n               onChange={onChange}\n               onBlur={onBlur}\n               value={value}\n               isInvalid={isInvalid}\n               label={label}\n               name={name}\n               type={type}\n   \n           />\n       </InputGroup>\n       </>\n        ):(\n            <>\n            \n            <label htmlFor=\"basic-url\">{label}  <InputStatus errors={errors} touched={touched}/></label>\n\n       <InputGroup className=\"mb-3\">\n   \n           <FormControl\n               placeholder={label}\n               aria-label={label}\n               aria-describedby={label}\n               onChange={onChange}\n               onBlur={onBlur}\n               value={value}\n               isInvalid={isInvalid}\n               label={label}\n               name={name}\n               type={type}\n\n               \n   \n           />\n       </InputGroup>\n       </>\n        )\n      \n   }\n    \n    </>  \n   \n  );\n};\nexport default CustomInput;","import React from 'react';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport '../assets/scss/index.scss';\nimport i18n from './../i18n';\n\nconst getConfig = (errors, touched) => {\n  if (!touched) {\n    return [];\n  }\n\n  \n\n  if (errors && touched) {\n    return ['fa-times-circle-o input-invalid', errors];\n  }\n\n  if (!errors && touched) {\n    return ['fa-check-circle-o input-valid', i18n.t('valid-field')];\n  }\n};\n\nconst InputStatus = ({ errors, touched }) => {\n  const [classes, extra] = getConfig(errors, touched);\n  \n  return (\n    <Tooltip\n      title={\n        !Array.isArray(extra) ? (\n          <span className=\"tooltip-message\">\n            {extra} <br />\n          </span>\n        ) : (\n          extra.map(e => (\n            <span className=\"tooltip-message\">\n              {e} <br />\n            </span>\n          ))\n        )\n      }\n      placement=\"right\">\n      <span>\n        <i className={'fa ' + classes} />\n      </span>\n    </Tooltip>\n  );\n};\n\nexport default InputStatus;","\nimport React, { useEffect, useState } from 'react';\nimport {\n    Row,\n    Col,\n    Card,\n    Button,\n    Modal,\n    InputGroup,\n    FormControl,\n} from \"react-bootstrap\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\n\nimport Aux from \"../../../hoc/_Aux\";\nimport CustomInput from \"../../../Components/CustomInput\";\nimport axios from 'axios';\nvar urlbackend = require(\"../../../env/env\")();\nconst phoneRegExp = /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/;\nconst SignupSchema = Yup.object().shape({\n    email: Yup.string().email(\"Invalid Email\").required(\"Email is Required\"),\n    phone_number: Yup.string()\n        .matches(phoneRegExp, \"Phone number is not valid\")\n        .required(\"Phone is Required\"),\n    city: Yup.string()\n        .min(2, \"City is Too Short!\")\n        .max(20, \"City is Too Long!\")\n        .required(\"City is Required\"),\n    description: Yup.string()\n        .min(2, \"description is Too Short!\")\n        .max(20, \"description is Too Long!\")\n        .required(\"description is Required\"),\n    name: Yup.string()\n        .min(2, \"name is Too Short!\")\n        .max(20, \"name is Too Long!\")\n        .required(\"name is Required\"),\n    code: Yup.string()\n        .min(2, \"code is Too Short!\")\n        .max(20, \"code is Too Long!\")\n        .required(\"code is Required\"),\n});\nfunction Updatedriver(props) {\n    const [show, setShow] = useState(false);\n    const [zonesUpdate] = useState(props.zone)\n    const [agences, setagences] = useState([])\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n    const [newLivreur, setnewLivreur] = useState('')\n\n    useEffect(() => {\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Access-Control-Allow-Headers\": \"x-access-token\",\n                \"x-access-token\": localStorage.getItem('token'),\n                'Authorization': 'Bearer ' + localStorage.getItem('token'),\n            },\n        };\n\n        axios\n            .get(urlbackend + \"/driver\", config)\n            .then((response) => {\n                console.log(\"this respon list\", response.data);\n                setagences(response.data.data)\n                // this.setState({ agences: response.data.data });\n            })\n            .catch((e) => {\n                console.log(e);\n            });\n\n    }, [])\n    const handlSubmit = () => {\n        console.log(newLivreur);\n        console.log(props.Listcolis.map(e=>e.colis?.id));\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Access-Control-Allow-Headers\": \"x-access-token\",\n                \"x-access-token\": localStorage.getItem('token'),\n                'Authorization': 'Bearer ' + localStorage.getItem('token'),\n            },\n        };\nif(!newLivreur){\n\n    alert(\"merci de choisir un Livreur\")\n}else{\n    axios.put(urlbackend + \"/console/update/driver\", \n    {\n        \"driver\": newLivreur,\n        \"colis\": props.Listcolis.map(e=>e.colis?.id)\n}, config)\n    .then(response => {\n        alert(\"add Succefull\")\n        console.log(response.data)\n        props.changestate()\n        handleClose()\n\n    })\n    .catch(e => {\n        console.log(e)\n    })\n}\n     \n    };\n\n\n    return (\n        <>\n            <Button variant=\"info\" style={{ \"float\": \"right\" }}\n                onClick={handleShow}> <span className=\"fa fa-pencil\"></span> Changer Livreur </Button>\n\n\n            <Modal show={show} onHide={handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Affecture les colis pour un autre livreur    </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n\n\n\n                    <Row>                                  <Col md={12}>\n\n                        <InputGroup className=\"mb-3\">\n                            <FormControl\n                                as=\"select\"\n                                id=\"agence\"\n                                custom\n                                onChange={(e) => setnewLivreur(e.target.value)}\n                                onBlur={(e) => setnewLivreur(e.target.value)}\n                                value={newLivreur}\n                            >\n                                <option>changer Livreur</option>\n\n                                {agences.map((agence, index) => (\n                                    <option key={agence.id} value={agence.id}>\n                                        {agence.username}\n                                    </option>\n                                ))}\n                            </FormControl>\n                        </InputGroup>\n\n\n\n                    </Col>\n\n                    </Row>\n\n\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"info\" onClick={handlSubmit}>\n                        Enregistrer\n                    </Button>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        fermer\n                    </Button>\n                    {/* <Button variant=\"primary\" onClick={handleClose}>\n            Save Changes\n            </Button> */}\n                </Modal.Footer>\n            </Modal>\n        </>\n    );\n}\n\nexport default Updatedriver","import React from \"react\";\n\n//import { PageTitle } from '../../layout-components';\nimport { IconButton, Box, Card, CardContent } from \"@material-ui/core\";\nimport { InputGroup, FormControl, DropdownButton, Dropdown } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport { Row, Col, Tabs, Tab } from \"react-bootstrap\";\nimport jsPDF from \"jspdf\";\nimport \"jspdf-autotable\";\nimport * as FileSaver from 'file-saver';\nimport * as XLSX from 'xlsx';\nimport Updatedriver from './Update.driver'\n//import TemplatePrint from '../../Template/TemplatePrint'\nimport moment from 'moment'\nimport i18n from './../../../i18n';\nimport config from '../../Config/config'; \nimport Aux from \"../../../hoc/_Aux\";\nvar urlbackend = require(\"../../../env/env\")();\nconst fileType = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\nconst fileExtension = '.xlsx'\n\nclass ListManifesteConsole extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            pendingPackages: [],\n            ongoingPackages: [],\n            enlevePackages: [],\n\n            drivers: [],\n            driver: \"\",\n            idprovider: \"\",\n            providers: [],\n            driveriformationanifeste: {}\n        };\n    }\n    componentDidMount() {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                'Access-Control-Allow-Headers': 'Authorization',\n                \"x-access-token\": localStorage.getItem('token'),\n                'Authorization': 'Bearer ' + localStorage.getItem('token'),\n            },\n        };\n\n\n\n\n        var getdrivers = axios.get(urlbackend + \"/driver\", config);\n        var getproviders = axios.get(urlbackend + \"/provider\", config);\n\n        axios\n            .all([getdrivers, getproviders])\n            .then(\n                axios.spread((...response) => {\n                    this.setState({ providers: response[0].data.data });\n                    this.setState({ drivers: response[1].data.data });\n                    console.log(response[0].data)\n                    /*     this.setState({ pendingPackages: response[0].data.data.data });\n                        this.setState({ ongoingPackages: response[1].data.content });\n                        this.setState({ enlevePackages: response[2].data.content });\n    \n                        this.setState({ drivers: response[3].data.content }); */\n                })\n            )\n            .catch((errors) => {\n                // react on errors.\n                console.error(errors);\n            });\n\n    }\n    getlistpickups(provider) {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                'Access-Control-Allow-Headers': 'Authorization',\n                \"x-access-token\": localStorage.getItem('token'),\n                'Authorization': 'Bearer ' + localStorage.getItem('token'),\n            },\n        };\n        var table = this.state.providers\n        this.setState({ driveriformationanifeste: table.filter(e => e.id === provider)[0] })\n\n\n\n        var getpendingPackages = axios.get(\n            urlbackend + \"/admin/manifest/console/\" + provider,\n            config\n        )\n        axios\n            .all([getpendingPackages])\n            .then(\n                axios.spread((...response) => {\n                    response[0].data.data.length === 0 ? this.setState({ pendingPackages: [] }) : this.setState({ pendingPackages: response[0].data.data });\n                    //   this.setState({ drivers: response[1].data.data });\n                    response[0].data.data.length === 0 ? console.log(response[0].data) : console.log('hh')\n                    console.log(response[0].data)\n                    /*     this.setState({ pendingPackages: response[0].data.data.data });\n                        this.setState({ ongoingPackages: response[1].data.content });\n                        this.setState({ enlevePackages: response[2].data.content });\n        \n                        this.setState({ drivers: response[3].data.content }); */\n                })\n            )\n            .catch((errors) => {\n                // react on errors.\n                console.error(errors);\n            });\n\n\n\n    }\n    exportPDF = (type, list) => {\n        if (type === \"csv\") {\n            var listdownload = list.map((e) => ({\n                \"Numéro colis\": e.colis.index_colis,\n                \"Expéditeur\": e.colis.provider.username,\n                \"N. de téléphone Expéditeur\": e.colis.provider.phone_number,\n                \"client \": e.colis.name_complete,\n                \"N. de téléphone\": e.colis.phone_number,\n                \"gouvernorat\": e.colis.gouvernorat, \"addresse\": e.colis.city + \":\" + e.colis.address,\n                \"prix\": e.colis.price, \"type paiment\": e.colis.payment_mode,\n                \"type d'envoi\": e.colis.type_envoi,\n                \"vers agence\": e.to_agence.name,\n                \"Num console\": e.code\n\n            }))\n            const ws = XLSX.utils.json_to_sheet(listdownload);\n            const wb = { Sheets: { 'data': ws }, SheetNames: ['data'] };\n            const excelBuffer = XLSX.write(wb, { bookType: 'xlsx', type: 'array' });\n            const data = new Blob([excelBuffer], { type: fileType });\n            FileSaver.saveAs(data, \"fileName\" + fileExtension);\n        } else {\n            const unit = \"pt\";\n            const size = \"A4\"; // Use A1, A2, A3 or A4\n            const orientation = \"landscape\"; // portrait or landscape\n\n            // const marginLeft = 40;\n            const doc = new jsPDF(orientation, unit, size);\n\n            doc.setFontSize(10);\n\n\n            const driverfirstname = this.state.driveriformationanifeste.firstname\n            const driverlastname = this.state.driveriformationanifeste.lastname\n            const usernamedriver = this.state.driveriformationanifeste.username\n            const driverphone_number = this.state.driveriformationanifeste.phone_number\n           // const descriminator = this.state.driveriformationanifeste.descriminator\n            const headers = [[\"Transfert N\",\"vers agence\", \"Numéro colis\", \"Expéditeur\", \"N. de téléphone Expéditeur\", \"Client\", \"N. de téléphone\", \"Gouvernorat addresse\", \"prix\", \"type\", \"validation\"]];\n\n            const data = list.map(elt => [elt.code , elt.to_agence?.name, elt.colis.index_colis, elt.colis.provider.username, elt.colis.provider.phone_number, elt.colis.name_complete, elt.colis.phone_number, elt.colis.address + \" : \" + elt.colis.city + \" : \" + elt.colis.gouvernorat, elt.colis.price + '(' + elt.colis.payment_mode + ')', elt.colis.type_envoi]);\n\n            let content = {\n                startY: 140,\n                head: headers,\n                body: data\n            };\n\n            var image = new Image();\n            image.src = config.images;\n           doc.addImage(image, 'PNG', 600, 10, 200, 80);\n           doc.text(config.matricule, 600, 100);\n           doc.text(config.addresse1, 600, 110);\n           doc.text(config.addresse2, 600, 120);\n           doc.rect(280, 40, 2, 50, 'F');\n           doc.rect(500, 40, 2, 52, 'F');\n           doc.rect(280, 40, 220, 2, 'F');\n           doc.rect(280, 90, 220, 2, 'F');\n           // doc.rect(20, 40, 2, 50, 'F');\n           // doc.rect(20, 40, 2, 52, 'F');\n           // doc.rect(280, 40, 220, 2, 'F');\n           // doc.rect(280, 90, 220, 2, 'F');\n           doc.setFont(undefined, 'bold')\n           doc.text((\"Bon de Trasnfert\" ), 300, 60);\n           doc.text((\"Date :\"+ new moment().format('DD -MM-YYYY  HH:mm') ), 300, 80);\n           doc.text((\"Chauffeur :\"+  driverfirstname + \" \" +driverlastname ), 50, 40);\n           doc.text((\"N. de téléphone :\"+  driverphone_number), 50, 60);\n           doc.text((\"Total:\"+ list.length +\" colis\" ), 50, 80);\n\n           \n\n\n\n\n            doc.autoTable(content);\n\n\n            doc.save(\"report.pdf\")\n        }\n    }\n\n\n    savedriver() {\n        //\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                'Access-Control-Allow-Headers': 'Authorization',\n                \"x-access-token\": localStorage.getItem('token'),\n                'Authorization': 'Bearer ' + localStorage.getItem('token'),\n            },\n        };\n        if (!this.state.iddriver) {\n            alert(\"choisir un driver\")\n\n        } else {\n            axios.put(\n                urlbackend + \"/admin/delivery/driver\",\n                { driver: this.state.iddriver, provider: this.state.idprovider },\n                config\n            )\n                .then((response) => {\n                    alert(\"add Succefull\");\n                    console.log(\"response.data\", response.data);\n                    this.componentDidMount();\n                    //this.reloaddata()\n                    this.setState({ drivers: [] });\n                    this.setState({ pendingPackages: [] });\n                })\n                .catch((e) => {\n                    console.log(e);\n                });\n\n\n        }\n    }\n    reloaddata() {\n        this.componentDidMount()\n    }\n\n    changecolor(valeur) {\n        switch (valeur) {\n            case 0:\n                return \"#eeeeca\"\n            case 1:\n                return \"#adcadc\"\n            case 2:\n                return \"#eeeee1\"\n            case 3:\n                return \"#dcadb1\"\n            default:\n                break;\n        }\n\n    }\n    render() {\n        return (\n            <Aux>\n\n                <Row>\n                    <Col>\n\n\n                        <hr />\n                        <Tabs defaultActiveKey=\"home\">\n\n                            <Tab eventKey=\"home\" title=\"\">\n                                <Card className=\"card-box mb-4\">\n                                    <div className=\"card-header\">\n                                        {(this.state.pendingPackages.length !== 0) && <DropdownButton\n                                            title={<span className=\"fa fa-download\"> {i18n.t('delivery-note')}</span>}\n                                            variant=\"success\"\n                                            id={`dropdown-variants-success`}\n                                            key=\"success\"\n                                            onSelect={(e) => this.exportPDF(e, this.state.pendingPackages)}\n                                        >\n                                            <Dropdown.Item eventKey=\"pdf\">{i18n.t('pdf')}</Dropdown.Item>\n                                            <Dropdown.Item eventKey=\"csv\">{i18n.t('excel')} </Dropdown.Item>\n\n                                        </DropdownButton>}\n                                        <div className=\"card-header--title\">\n                                        {(this.state.pendingPackages.length !== 0) &&\n                                            <Updatedriver Listcolis={this.state.pendingPackages} changestate={()=> this.setState({pendingPackages:[]})}   />\n                                        }\n                                            {/* <b>This table card has custom content</b> */}\n                                        </div>\n                                        <Box className=\"card-header--actions\">\n                                            <IconButton\n                                                size=\"small\"\n                                                color=\"primary\"\n                                                className=\"text-primary\"\n                                                title=\"View details\"\n                                            ></IconButton>\n                                        </Box>\n                                        <Row>\n                                            <Col md={12} xl={8}>\n                                        <InputGroup className=\"mb-3\">\n                                            <FormControl\n                                                as=\"select\"\n                                                id=\"{this.state.driver}\"\n                                                onChange={(e) => {\n                                                    this.setState({ idprovider: e.target.value });\n                                                    this.getlistpickups(e.target.value)\n\n                                                }\n                                                }\n                                                custom\n                                            >\n                                                <option>{i18n.t('choose-driver')}</option>\n\n                                                {this.state.providers.map((driver, index) => (\n                                                    <option\n                                                        className=\" badge badge-info\"\n                                                        key={driver.id}\n                                                        value={driver.id}\n                                                    >\n                                                        {driver.username}\n                                                    </option>\n                                                ))}\n                                            </FormControl>\n                                        </InputGroup>\n                                        </Col> \n                                        <Col md={12} xl={2}> \n                                        <InputGroup className=\"mb-3\">\n                                                    <FormControl\n                                                        as=\"select\"\n                                                        id=\"type_envoi\"\n                                                        custom\n                                                        onChange={(e) => {\n                                                            this.setState({ typemanifest:e.target.value });\n                                                            this.getlistpickups(this.state.chauffeur,e.target.value,)\n                                                        }\n                                                        }\n                                                        onBlur={(e) =>this.setState({typemanifest:e.target.value})}\n                                                        value={this.state.typemanifest}\n                                                    >\n                                                        <option key={2}>{i18n.t('all')}</option>\n\n                                                        {[ { statepay: i18n.t('status-in-deposit'), valuep: 0 },{ statepay: i18n.t('status-engoing'), valuep: 1 }].map((type_envoi, index) => (\n                                                            <option key={type_envoi.valuep} value={type_envoi.valuep}>\n                                                                {type_envoi.statepay}\n                                                            </option>\n                                                        ))}\n                                                    </FormControl>\n                                                </InputGroup> </Col>\n                                        </Row>\n\n                                    </div>\n                                    <CardContent className=\"p-0\">\n                                        {/* <p>Liste colis pour Pickup</p> */}\n                                        <div className=\"table-responsive\">\n                                            <table className=\"table  table-hover text-nowrap mb-0\">\n                                                <thead className=\"table thead-light mb-0\">\n                                                    <tr>\n                                                        <th className=\"text-center\">{i18n.t('transfert-number')}</th>\n                                                        <th className=\"text-center\">{i18n.t('to-agency')}</th>\n                                                        <th className=\"text-center\">{i18n.t('client-name')}</th>\n                                                        <th className=\"text-center\">{i18n.t('address')}</th>\n                                                        <th className=\"text-center\"></th>\n                                                    </tr>\n                                                </thead>\n                                                <tbody>\n                                                    {this.state.pendingPackages.map((pickup, index) => (\n                                                        <tr key={index} >\n                                                             <td className=\"text-center\">\n                                                                <div className=\"h-auto \">\n                                                                    {pickup.code}\n                                                                    <span >\n\n                                                                    </span>\n                                                                </div>\n                                                            </td>\n                                                            <td className=\"text-center\">\n                                                                <div className=\"h-auto \">\n                                                                    {pickup.to_agence.name}\n                                                                </div>\n                                                            </td>\n                                                            <td className=\"text-center\">\n                                                                <div className=\"h-auto \">\n                                                                    {pickup.colis.name_complete} : {pickup.colis.phone_number}\n                                                                    <span >\n\n                                                                    </span>\n                                                                </div>\n                                                            </td>\n                                                            <td className=\"text-center\">\n                                                                <div className=\"h-auto \">\n                                                                    {pickup.colis.gouvernorat} :{\" \"}\n                                                                    {pickup.colis.city} {pickup.colis.address}\n                                                                </div>\n                                                            </td>\n\n                                                          \n\n                                                            {/*     <td>\n                                                                <InputGroup className=\"mb-3\">\n                                                                    <FormControl\n                                                                        as=\"select\"\n                                                                        id=\"{this.state.driver}\"\n                                                                        onChange={(value) =>\n                                                                            this.savedriver(\n                                                                                value.target.value,\n                                                                                pickup.colis.id\n                                                                            )\n                                                                        }\n                                                                        custom\n                                                                    >\n                                                                        <option>Sélectionner un chauffeur</option>\n\n                                                                        {this.state.drivers.map((driver, index) => (\n                                                                            <option\n                                                                                className=\" badge badge-info\"\n                                                                                key={driver.id}\n                                                                                value={driver.id}\n                                                                            >\n                                                                                {driver.username}\n                                                                            </option>\n                                                                        ))}\n                                                                    </FormControl>\n                                                                </InputGroup>\n                                                            </td> */}\n                                                            <td>\n\n                                                                {/* <TemplatePrint Template={pickup} > </TemplatePrint> */}\n                                                            </td>\n                                                            <td>\n\n                                                            </td>\n                                                            <td className=\"text-center\">\n                                                                <Box>\n                                                                    <IconButton color=\"primary\" size=\"small\">\n                                                                        {/* <FontAwesomeIcon icon={['fas', 'ellipsis-h']} /> */}\n                                                                    </IconButton>\n                                                                </Box>\n                                                            </td>\n                                                        </tr>\n                                                    ))}\n                                                </tbody>\n                                            </table>\n                                        </div>\n                                    </CardContent>\n                                </Card>\n                            </Tab>\n                        </Tabs>\n                    </Col>\n                </Row>\n            </Aux>\n        );\n    }\n}\n\nexport default ListManifesteConsole;\n","import avatar from '../../assets/logo.jpeg';\nimport tudex from '../../assets/tudex.png'\nimport twins from '../../assets/twins.jpg'\n\n\n// export default {\n\n//     images:avatar,\n//     matricule:\"1691531ZAM000\",\n//     addresse1:\"Addresse :4 boulevard de la qualité de la \",\n//     addresse2:\"El andalous Ariana \"\n// };\n\n// export default {\n\n//     images:tudex,\n//     matricule:\"1683020/H\",\n//     addresse1:\"Mahdia\",\n//     addresse2:\"\"\n// };\nexport default {\n\n    images:avatar,\n    matricule:\"MF\",\n    addresse1:\"\",\n    addresse2:\"iteslab Tunis\"\n};","/*\n* FileSaver.js\n* A saveAs() FileSaver implementation.\n*\n* By Eli Grey, http://eligrey.com\n*\n* License : https://github.com/eligrey/FileSaver.js/blob/master/LICENSE.md (MIT)\n* source  : http://purl.eligrey.com/github/FileSaver.js\n*/\n\n// The one and only way of getting global scope in all environments\n// https://stackoverflow.com/q/3277182/1008999\nvar _global = typeof window === 'object' && window.window === window\n  ? window : typeof self === 'object' && self.self === self\n  ? self : typeof global === 'object' && global.global === global\n  ? global\n  : this\n\nfunction bom (blob, opts) {\n  if (typeof opts === 'undefined') opts = { autoBom: false }\n  else if (typeof opts !== 'object') {\n    console.warn('Deprecated: Expected third argument to be a object')\n    opts = { autoBom: !opts }\n  }\n\n  // prepend BOM for UTF-8 XML and text/* types (including HTML)\n  // note: your browser will automatically convert UTF-16 U+FEFF to EF BB BF\n  if (opts.autoBom && /^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(blob.type)) {\n    return new Blob([String.fromCharCode(0xFEFF), blob], { type: blob.type })\n  }\n  return blob\n}\n\nfunction download (url, name, opts) {\n  var xhr = new XMLHttpRequest()\n  xhr.open('GET', url)\n  xhr.responseType = 'blob'\n  xhr.onload = function () {\n    saveAs(xhr.response, name, opts)\n  }\n  xhr.onerror = function () {\n    console.error('could not download file')\n  }\n  xhr.send()\n}\n\nfunction corsEnabled (url) {\n  var xhr = new XMLHttpRequest()\n  // use sync to avoid popup blocker\n  xhr.open('HEAD', url, false)\n  try {\n    xhr.send()\n  } catch (e) {}\n  return xhr.status >= 200 && xhr.status <= 299\n}\n\n// `a.click()` doesn't work for all browsers (#465)\nfunction click (node) {\n  try {\n    node.dispatchEvent(new MouseEvent('click'))\n  } catch (e) {\n    var evt = document.createEvent('MouseEvents')\n    evt.initMouseEvent('click', true, true, window, 0, 0, 0, 80,\n                          20, false, false, false, false, 0, null)\n    node.dispatchEvent(evt)\n  }\n}\n\n// Detect WebView inside a native macOS app by ruling out all browsers\n// We just need to check for 'Safari' because all other browsers (besides Firefox) include that too\n// https://www.whatismybrowser.com/guides/the-latest-user-agent/macos\nvar isMacOSWebView = _global.navigator && /Macintosh/.test(navigator.userAgent) && /AppleWebKit/.test(navigator.userAgent) && !/Safari/.test(navigator.userAgent)\n\nvar saveAs = _global.saveAs || (\n  // probably in some web worker\n  (typeof window !== 'object' || window !== _global)\n    ? function saveAs () { /* noop */ }\n\n  // Use download attribute first if possible (#193 Lumia mobile) unless this is a macOS WebView\n  : ('download' in HTMLAnchorElement.prototype && !isMacOSWebView)\n  ? function saveAs (blob, name, opts) {\n    var URL = _global.URL || _global.webkitURL\n    var a = document.createElement('a')\n    name = name || blob.name || 'download'\n\n    a.download = name\n    a.rel = 'noopener' // tabnabbing\n\n    // TODO: detect chrome extensions & packaged apps\n    // a.target = '_blank'\n\n    if (typeof blob === 'string') {\n      // Support regular links\n      a.href = blob\n      if (a.origin !== location.origin) {\n        corsEnabled(a.href)\n          ? download(blob, name, opts)\n          : click(a, a.target = '_blank')\n      } else {\n        click(a)\n      }\n    } else {\n      // Support blobs\n      a.href = URL.createObjectURL(blob)\n      setTimeout(function () { URL.revokeObjectURL(a.href) }, 4E4) // 40s\n      setTimeout(function () { click(a) }, 0)\n    }\n  }\n\n  // Use msSaveOrOpenBlob as a second approach\n  : 'msSaveOrOpenBlob' in navigator\n  ? function saveAs (blob, name, opts) {\n    name = name || blob.name || 'download'\n\n    if (typeof blob === 'string') {\n      if (corsEnabled(blob)) {\n        download(blob, name, opts)\n      } else {\n        var a = document.createElement('a')\n        a.href = blob\n        a.target = '_blank'\n        setTimeout(function () { click(a) })\n      }\n    } else {\n      navigator.msSaveOrOpenBlob(bom(blob, opts), name)\n    }\n  }\n\n  // Fallback to using FileReader and a popup\n  : function saveAs (blob, name, opts, popup) {\n    // Open a popup immediately do go around popup blocker\n    // Mostly only available on user interaction and the fileReader is async so...\n    popup = popup || open('', '_blank')\n    if (popup) {\n      popup.document.title =\n      popup.document.body.innerText = 'downloading...'\n    }\n\n    if (typeof blob === 'string') return download(blob, name, opts)\n\n    var force = blob.type === 'application/octet-stream'\n    var isSafari = /constructor/i.test(_global.HTMLElement) || _global.safari\n    var isChromeIOS = /CriOS\\/[\\d]+/.test(navigator.userAgent)\n\n    if ((isChromeIOS || (force && isSafari) || isMacOSWebView) && typeof FileReader !== 'undefined') {\n      // Safari doesn't allow downloading of blob URLs\n      var reader = new FileReader()\n      reader.onloadend = function () {\n        var url = reader.result\n        url = isChromeIOS ? url : url.replace(/^data:[^;]*;/, 'data:attachment/file;')\n        if (popup) popup.location.href = url\n        else location = url\n        popup = null // reverse-tabnabbing #460\n      }\n      reader.readAsDataURL(blob)\n    } else {\n      var URL = _global.URL || _global.webkitURL\n      var url = URL.createObjectURL(blob)\n      if (popup) popup.location = url\n      else location.href = url\n      popup = null // reverse-tabnabbing #460\n      setTimeout(function () { URL.revokeObjectURL(url) }, 4E4) // 40s\n    }\n  }\n)\n\n_global.saveAs = saveAs.saveAs = saveAs\n\nif (typeof module !== 'undefined') {\n  module.exports = saveAs;\n}\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"title\", \"children\", \"bsPrefix\", \"rootCloseEvent\", \"variant\", \"size\", \"menuAlign\", \"menuRole\", \"renderMenuOnMount\", \"disabled\", \"href\", \"id\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Dropdown from './Dropdown';\nimport DropdownToggle from './DropdownToggle';\nimport DropdownMenu, { alignPropType } from './DropdownMenu';\nvar propTypes = {\n  /**\n   * An html id attribute for the Toggle button, necessary for assistive technologies, such as screen readers.\n   * @type {string|number}\n   * @required\n   */\n  id: PropTypes.any,\n\n  /** An `href` passed to the Toggle component */\n  href: PropTypes.string,\n\n  /** An `onClick` handler passed to the Toggle component */\n  onClick: PropTypes.func,\n\n  /** The content of the non-toggle Button.  */\n  title: PropTypes.node.isRequired,\n\n  /** Disables both Buttons  */\n  disabled: PropTypes.bool,\n\n  /**\n   * Aligns the dropdown menu responsively.\n   *\n   * _see [DropdownMenu](#dropdown-menu-props) for more details_\n   *\n   * @type {\"left\"|\"right\"|{ sm: \"left\"|\"right\" }|{ md: \"left\"|\"right\" }|{ lg: \"left\"|\"right\" }|{ xl: \"left\"|\"right\"} }\n   */\n  menuAlign: alignPropType,\n\n  /** An ARIA accessible role applied to the Menu component. When set to 'menu', The dropdown */\n  menuRole: PropTypes.string,\n\n  /** Whether to render the dropdown menu in the DOM before the first time it is shown */\n  renderMenuOnMount: PropTypes.bool,\n\n  /**\n   *  Which event when fired outside the component will cause it to be closed.\n   *\n   * _see [DropdownMenu](#dropdown-menu-props) for more details_\n   */\n  rootCloseEvent: PropTypes.string,\n\n  /** @ignore */\n  bsPrefix: PropTypes.string,\n\n  /** @ignore */\n  variant: PropTypes.string,\n\n  /** @ignore */\n  size: PropTypes.string\n};\n/**\n * A convenience component for simple or general use dropdowns. Renders a `Button` toggle and all `children`\n * are passed directly to the default `Dropdown.Menu`. This component accepts all of\n * [`Dropdown`'s props](#dropdown-props).\n *\n * _All unknown props are passed through to the `Dropdown` component._ Only\n * the Button `variant`, `size` and `bsPrefix` props are passed to the toggle,\n * along with menu-related props are passed to the `Dropdown.Menu`\n */\n\nvar DropdownButton = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var title = _ref.title,\n      children = _ref.children,\n      bsPrefix = _ref.bsPrefix,\n      rootCloseEvent = _ref.rootCloseEvent,\n      variant = _ref.variant,\n      size = _ref.size,\n      menuAlign = _ref.menuAlign,\n      menuRole = _ref.menuRole,\n      renderMenuOnMount = _ref.renderMenuOnMount,\n      disabled = _ref.disabled,\n      href = _ref.href,\n      id = _ref.id,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(Dropdown, _extends({\n    ref: ref\n  }, props), /*#__PURE__*/React.createElement(DropdownToggle, {\n    id: id,\n    href: href,\n    size: size,\n    variant: variant,\n    disabled: disabled,\n    childBsPrefix: bsPrefix\n  }, title), /*#__PURE__*/React.createElement(DropdownMenu, {\n    align: menuAlign,\n    role: menuRole,\n    renderOnMount: renderMenuOnMount,\n    rootCloseEvent: rootCloseEvent\n  }, children));\n});\nDropdownButton.displayName = 'DropdownButton';\nDropdownButton.propTypes = propTypes;\nexport default DropdownButton;"],"names":["name","label","onChange","onBlur","value","type","isInvalid","errors","touched","htmlFor","className","id","placeholder","i18n","getConfig","classes","extra","Tooltip","title","Array","isArray","map","e","placement","urlbackend","require","Yup","shape","email","required","phone_number","matches","city","min","max","description","code","props","useState","show","setShow","zone","agences","setagences","handleClose","newLivreur","setnewLivreur","useEffect","config","headers","localStorage","getItem","axios","then","response","console","log","data","catch","Button","variant","style","onClick","Modal","onHide","closeButton","Row","Col","md","InputGroup","FormControl","as","custom","target","agence","index","username","Listcolis","colis","alert","changestate","ListManifesteConsole","exportPDF","list","listdownload","index_colis","provider","name_complete","gouvernorat","address","price","payment_mode","type_envoi","to_agence","wb","Sheets","XLSX","SheetNames","excelBuffer","bookType","Blob","FileSaver","doc","jsPDF","setFontSize","driverfirstname","state","driveriformationanifeste","firstname","driverlastname","lastname","driverphone_number","content","startY","head","body","elt","image","Image","src","addImage","text","rect","setFont","undefined","moment","format","length","autoTable","save","pendingPackages","ongoingPackages","enlevePackages","drivers","driver","idprovider","providers","getdrivers","getproviders","setState","error","table","this","filter","getpendingPackages","iddriver","componentDidMount","valeur","Tabs","defaultActiveKey","Tab","eventKey","Card","DropdownButton","onSelect","Dropdown","Box","IconButton","size","color","xl","getlistpickups","typemanifest","chauffeur","statepay","valuep","CardContent","pickup","React","images","avatar","matricule","addresse1","addresse2","b","a","autoBom","warn","test","c","d","XMLHttpRequest","open","responseType","onload","g","onerror","send","status","dispatchEvent","MouseEvent","document","createEvent","initMouseEvent","window","f","self","global","navigator","userAgent","saveAs","HTMLAnchorElement","prototype","h","i","URL","webkitURL","j","createElement","download","rel","href","origin","location","createObjectURL","setTimeout","revokeObjectURL","msSaveOrOpenBlob","innerText","HTMLElement","safari","FileReader","k","onloadend","result","replace","readAsDataURL","l","m","module","exports","_excluded","propTypes","PropTypes","disabled","menuAlign","alignPropType","menuRole","renderMenuOnMount","rootCloseEvent","bsPrefix","_ref","ref","children","_objectWithoutPropertiesLoose","_extends","DropdownToggle","childBsPrefix","DropdownMenu","align","role","renderOnMount","displayName"],"sourceRoot":""}