{"version":3,"file":"static/js/6857.6579e4e2.chunk.js","mappings":"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","sources":["Routes/Statitic/Statistic.driver/Choose.driver.js","Routes/Statitic/Statistic.driver/Statistic.driver.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n\n//import { PageTitle } from '../../layout-components';\n// import { IconButton, Box, Card, CardContent } from \"@material-ui/core\";\n// import { InputGroup, FormControl, Button } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport { Row, Col, Tabs, Tab, Form } from \"react-bootstrap\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\n// import filterFactory from \"react-bootstrap-table2-filter\";\n// import { CSVLink } from \"react-csv\";\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\n//import { GetStatisticsDetails } from './services/index';\nimport ToolkitProvider from 'react-bootstrap-table2-toolkit';\n//import TemplatePrint from '../../Template/TemplatePrint'\n//import Aux from \"../../../hoc/_Aux\";\n/* import MessageModal from \"./../../../Components/Alert/Alert\"; */\nvar urlbackend = require(\"../../../env/env\")();\n\nfunction Choosedriver(props) {\n\n\n    const [selectedDriver, setSelectedDriver] = useState(\"Choose Driver\")\n    const [getAnomalyByDriverList, setAnomalyByDriverList] = useState([])\n    const [totalAnomaly, setTotalAnomaly] = useState(0)\n    const [getAnomalyDomianteByDriver, setAnomalyDomianteByDriver] = useState(\"\")\n    const [totalAnomalyDominate, setTotalAnomalyDominate] = useState(0)\n    const [getDeliveryByDriverList, setDeliveryByDriverListt] = useState([])\n    const [totalDelivery, setTotalDelivery] = useState(0)\n    const [getEnlevementByDriverList, setEnlevementByDriverList] = useState([])\n    const [totalEnlevement, setTotalEnlevement] = useState(0)\n    const [getTransfertByDrivert, setTransfertByDriver] = useState([])\n    const [totalAnomalyConsole, setTotalAnomalyConsole] = useState(0)\n    const [startDate, setStartDate] = useState(\"\")\n    const [endDate, setEndDate] = useState(\"\")\n\n    const [drivers, setdrivers] = useState([])\n\n    const changeDriver = (event) => {\n        setSelectedDriver(event.target.value)\n        console.log(selectedDriver);\n\n    }\n\n    const changeEndDate = (event) => {\n        setEndDate(event.target.value)\n        console.log(endDate);\n\n    }\n    const changeStartDate = (event) => {\n        setStartDate(event.target.value)\n        console.log(startDate);\n\n    }\n\n\n\n    const getdatabyriver = async () => {\n\n        alert(selectedDriver)\n        alert(endDate)\n        alert(startDate)\n        axios.get(urlbackend + \"/statistics/driver/delivery?id=\"+selectedDriver+\"&startDate=\"+startDate+\"&endDate=\"+endDate).then((response) => {\n            setDeliveryByDriverListt(response.data.data)\n            setTotalDelivery(response.data.total_delivery)\n        }).catch((e)=>{\n            console.log(e)\n        })\n        console.log(\"/statistics/driver/enlevement?id=\"+selectedDriver+\"&startDate=\"+startDate+\"&endDate=\"+endDate)\n        axios.get(urlbackend + \"/statistics/driver/enlevement?id=\"+selectedDriver+\"&startDate=\"+startDate+\"&endDate=\"+endDate).then((response) => {\n            setEnlevementByDriverList(response.data.data)\n          //  setTotalEnlevement(response.data.total_enlevement)\n            console.log(response.data)\n        }).catch((e)=>{\n            console.log(e)\n        })\n\n        axios.get(urlbackend + \"/statistic/anomaly/driver?id=\"+selectedDriver+\"&startDate=\"+startDate+\"&endDate=\"+endDate).then((response) => {\n            setAnomalyByDriverList(response.data.data)\n          //  setTotalEnlevement(response.data.total_enlevement)\n            console.log(response.data)\n        }).catch((e)=>{\n            console.log(e)\n        })\n        axios.get(urlbackend + \"/statistic/driver/anomaly/dominate?id=\"+selectedDriver+\"&startDate=\"+startDate+\"&endDate=\"+endDate).then((response) => {\n            setAnomalyDomianteByDriver(response.data.dominateAnomaly)\n          //  setTotalEnlevement(response.data.total_enlevement)\n            console.log(\"dominateAnomaly\", response.data)\n        }).catch((e)=>{\n            console.log(e)\n        })\n\n        \n        \n        // let list = [];\n\n        // if (list) {\n        //     //setAnomalyByDriverList(list.data)\n        //     list.data.forEach((item, i) => item.id = i + 1);\n        //     setAnomalyByDriverList(list.data)\n        //     setTotalAnomaly(list.total_anomaly)\n        //     //alert(JSON.stringify(getAnomalyByDriverList))\n        //     /* setAnomalyByDriverList(getAnomalyByDriverList) */\n        //     console.log(\"list\", getAnomalyByDriverList)\n        // }\n\n\n\n        // let list1 = [];\n        // //alert(JSON.stringify(list1))\n        // if (list1) {\n        //     setAnomalyDomianteByDriver(list1.dominateAnomaly || \"\")\n\n        //     setTotalAnomalyDominate(list1.totalAnomaly || 0)\n        //     //alert(JSON.stringify(getAnomalyByDriverList))\n        //     //console.log(\"dominateAnomaly\",list1.dominateAnomaly)\n        //     //console.log(\"totalAnomaly\",list1.totalAnomaly)\n        // }\n\n\n        // let list2 = [];\n\n        // if (list2) {\n        //     list2.data.forEach((item, i) => item.id = i + 1)\n        //     setDeliveryByDriverListt(list2.data)\n\n        //     setTotalDelivery(list2.total_delivery)\n        //     //alert(JSON.stringify(getAnomalyByDriverList))\n        //     //console.log(\"listDriver\",list2.data)\n        // }\n\n        // let list3 = [];\n\n        // if (list3) {\n        //     list3.data.forEach((item, i) => item.id = i + 1)\n        //     setEnlevementByDriverList(list3.data)\n        //     setTotalEnlevement(list3.total_enlevement)\n        //     //alert(JSON.stringify(getAnomalyByDriverList))\n        //     //console.log(\"listEnlevement\",list3.data)\n        // }\n\n        // let list4 = [];\n\n        // if (list4) {\n        //     list4.data.forEach((item, i) => item.id = i + 1)\n        //     setTransfertByDriver(list4.data)\n        //     setTotalAnomalyConsole(list4.total_anomaly)\n        //     //alert(JSON.stringify(getAnomalyByDriverList))\n        //     //console.log(\"listDriver\",list4)\n        //     //console.log(\"listDriver1\",list4.total_anomaly)\n\n        // }\n        // props.getData(totalAnomaly, totalDelivery, totalEnlevement, totalAnomalyConsole)\n        // /*  if (list4) {\n        //      setTransfertByDriver(list4.data)\n        //      setTotalAnomalyConsole(list4.total_anomaly)\n        //      //alert(JSON.stringify(getAnomalyByDriverList))\n        //      console.log(\"listDriver\",list4)\n        //      console.log(\"listDriver1\",list4.total_anomaly)\n        //      props.getData(totalAnomaly,totalDelivery,totalEnlevement,totalAnomalyConsole)\n        //  } */\n\n\n    }\n\n\n\n    useEffect(() => {\n        // props.getData(totalAnomaly, totalDelivery, totalEnlevement, totalAnomalyConsole)\n    }, [totalAnomaly, totalDelivery, totalEnlevement, totalAnomalyConsole]);\n\n\n\n\n\n\n\n\n\n    const getdata = async () => {\n\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                'Access-Control-Allow-Headers': 'Authorization',\n                \"x-access-token\": localStorage.getItem('token'),\n                'Authorization': 'Bearer ' + localStorage.getItem('token'),\n            },\n        };\n\n        var getdrivers = await axios.get(urlbackend + \"/driver\", config);\n        setdrivers(getdrivers.data.data)\n\n    }\n    useEffect(() => {\n        getdata()\n        //GetAnomalyByDriverList()\n    }, [])\n\n    const columns3 = [\n        {\n            sort: true,\n            dataField: 'colis.colis.index_colis',\n            text: 'ID',\n        },\n        {\n            sort: true,\n            dataField: 'colis',\n            text: 'Client Name',\n            formatter: (cell, row) => {\n                return `${row.colis.name_complete}`;\n            }\n        },\n        {\n            sort: true,\n            dataField: \"colis\",\n            text: \"Client Phone Number\",\n\n            style: { textAlign: \"center\" },\n\n\n            formatter: (cell, row) => {\n                return `${row.colis.phone_number}`;\n            }\n\n        }, {\n            sort: true,\n            dataField: \"colis\",\n            text: \"Client Address\",\n\n            style: { textAlign: \"center\" },\n\n\n            formatter: (cell, row) => {\n                return `${row.colis.address}`;\n            }\n        }, {\n            sort: true,\n            dataField: 'anomaly',\n            text: 'Anomaly Message',\n            formatter: (cell, row) => {\n                return `${row.anomaly.message}`;\n            }\n        }\n    ];\n\n\n    const columns4 = [\n        {\n            sort: true,\n            dataField: 'colis.colis.index_colis',\n            text: 'ID',\n            /* formatter: priceFormatter */\n        }, {\n            sort: true,\n            dataField: 'colis',\n            text: 'Client Name',\n            formatter: (cell, row) => {\n                return `${row.colis.name_complete}`;\n            }\n        },\n        {\n            sort: true,\n            dataField: \"colis\",\n            text: \"Client Phone Number\",\n\n            style: { textAlign: \"center\" },\n\n\n            formatter: (cell, row) => {\n                return `${row.colis.phone_number}`;\n            }\n            // formatter: this.linkFollow,\n\n        }, {\n            sort: true,\n            dataField: \"colis\",\n            text: \"Client Address\",\n\n            style: { textAlign: \"center\" },\n\n\n            formatter: (cell, row) => {\n                return `${row.colis.address}`;\n            }\n        }, {\n            sort: true,\n            dataField: 'code',\n            text: 'Code',\n            /* style: { textAlign: \"center\" }, */\n            /*  formatter: (cell, row) => {\n                 return  `${row.anomaly.message}`;\n             } */\n        }\n    ];\n\n\n    const columns5 = [\n        {\n            sort: true,\n            dataField: 'colis.index_colis',\n            text: 'ID',\n            /* formatter: priceFormatter */\n        }, {\n            sort: true,\n            dataField: 'colis',\n            text: 'Client Name',\n            formatter: (cell, row) => {\n                return `${row.colis.name_complete}`;\n            }\n        },\n        {\n            sort: true,\n            dataField: \"colis\",\n            text: \"Client Phone Number\",\n\n            style: { textAlign: \"center\" },\n\n\n            formatter: (cell, row) => {\n                return `${row.colis.phone_number}`;\n            }\n            // formatter: this.linkFollow,\n\n        }, {\n            sort: true,\n            dataField: \"colis\",\n            text: \"Client Address\",\n\n            style: { textAlign: \"center\" },\n\n\n            formatter: (cell, row) => {\n                return `${row.colis.address}`;\n            }\n        }, {\n            sort: true,\n            dataField: 'code',\n            text: 'Code',\n            /* style: { textAlign: \"center\" }, */\n            /*  formatter: (cell, row) => {\n                 return  `${row.anomaly.message}`;\n             } */\n        }\n    ];\n\n\n    const columns6 = [\n        {\n            sort: true,\n            dataField: 'colis.colis.index_colis',\n            text: 'ID',\n            /* formatter: priceFormatter */\n        }, {\n            sort: true,\n            dataField: 'colis',\n            text: 'Client Name',\n            formatter: (cell, row) => {\n                return `${row.colis.name_complete}`;\n            }\n        },\n        {\n            sort: true,\n            dataField: \"colis\",\n            text: \"Client Phone Number\",\n\n            style: { textAlign: \"center\" },\n\n\n            formatter: (cell, row) => {\n                return `${row.colis.phone_number}`;\n            }\n            // formatter: this.linkFollow,\n\n        }, {\n            sort: true,\n            dataField: \"colis\",\n            text: \"Client Address\",\n\n            style: { textAlign: \"center\" },\n\n\n            formatter: (cell, row) => {\n                return `${row.colis.address}`;\n            }\n        }, {\n            sort: true,\n            dataField: 'code',\n            text: 'Code',\n            /* style: { textAlign: \"center\" }, */\n            /*  formatter: (cell, row) => {\n                 return  `${row.anomaly.message}`;\n             } */\n        }\n    ];\n\n\n    const MyExportCSV = (props) => {\n        const handleClick = () => {\n            props.onExport();\n        };\n        return (\n            <div>\n                {/* <label style={{ fontSize: '20px',marginBottom: \"15px\", color: \"#000000\" }}> Total Anomaly :</label>  <text style={{fontSize: '20px',color: \"red\"}}>{totalAnomaly}</text> */}\n                <button className=\"btn btn-primary float-left\" onClick={handleClick}>Export to CSV</button>\n\n            </div>\n        );\n    };\n\n    return (\n        //<Aux>\n\n        <Row>\n            <Col sm={12}>\n                {/* {JSON.stringify(getAnomalyByDriverList)} */}\n                <Row>\n\n                    <Col sm={6}>\n                        <label style={{ marginBottom: \"15px\", color: \"#000000\" }}> From :</label>\n                        <Form.Group controlId=\"duedate\">\n                            <Form.Control type=\"date\" name=\"duedate\" placeholder=\"Due date\" value={startDate}\n                                onChange={(e) => changeStartDate(e)} />\n                        </Form.Group>\n                    </Col>\n                    <Col sm={6}>\n                        <label style={{ marginBottom: \"15px\", color: \"#000000\" }}> to :</label>\n                        <Form.Group controlId=\"duedate\">\n                            <Form.Control type=\"date\" name=\"duedate\" placeholder=\"Due date\" value={endDate}\n                                onChange={(e) => changeEndDate(e)} />\n                        </Form.Group>\n                    </Col>\n                    <Col sm={4}>\n\n                    </Col>\n                    <Col sm={12}>\n\n                        <select\n                            className=\"browser-default\"\n                            style={{\n                                marginRight: \"10px\",\n                                marginLeft: \"5px\",\n                                width: \"90%\", height: \"40px\"\n                            }}\n                            placeholder=\"Driver\"\n                            value={selectedDriver}\n                            onChange={(e) => changeDriver(e)}\n                        >\n                            <option >choisir  Livreur</option>\n                            {drivers.map((e, key) => {\n                                return <option key={key} value={e.id} >{e.username}</option>;\n                            })}\n                        </select>\n                    </Col>\n                    <button class=\"btn-pill btn btn-primary\" style={{\n                        height: \"40px\"\n                    }} onClick={() => getdatabyriver()}  >\n                        Searchcc\n                    </button>\n                </Row>\n            </Col>\n\n            <Col sm={12}>\n                <Tabs defaultActiveKey=\"contact\" style={{ marginTop: \"20px\" }}>\n\n                    <Tab eventKey=\"contact\" title=\"Delivery list\">\n                        <ToolkitProvider\n\n                            variant=\"primary\"\n                            keyField=\"id\"\n                            data={getDeliveryByDriverList}\n                            columns={columns4}\n                            exportCSV\n                        >\n                            {\n                                props => (\n                                    <div>\n                                        <MyExportCSV {...props.csvProps} />\n                                        <BootstrapTable\n                                            {...props.baseProps} striped\n                                            bordered\n                                            hover\n                                            bootstrap4={true} headerClasses=\"table thead-light mb-0\" pagination={paginationFactory({\n                                                sizePerPage: 5,\n                                                sizePerPageList: [5, 10, 15, 20, 25],\n                                            })} />\n\n                                        {/*  <label style={{ fontSize: '20px',marginBottom: \"15px\", color: \"#000000\" }}> Total Anomaly :</label>  <text style={{fontSize: '20px',color: \"red\"}}>{totalAnomaly}</text> */}\n\n                                    </div>\n                                )\n                            }\n                        </ToolkitProvider>\n\n\n\n\n                        <label style={{ fontSize: '20px', marginBottom: \"15px\", color: \"#000000\" }}> Total Delivery :</label>  <text style={{ fontSize: '20px', color: \"red\" }}>{totalDelivery}</text>\n\n                    </Tab>\n\n                    <Tab eventKey=\"contact1\" title=\"Enlevement list\">\n                        <ToolkitProvider\n\n                            variant=\"primary\"\n                            keyField=\"id\"\n                            data={getEnlevementByDriverList}\n                            columns={columns5}\n                            exportCSV\n                        >\n                            {\n                                props => (\n                                    <div>\n                                        <MyExportCSV {...props.csvProps} />\n                                        <BootstrapTable\n                                            {...props.baseProps} striped\n                                            bordered\n                                            hover\n                                            bootstrap4={true} headerClasses=\"table thead-light mb-0\" pagination={paginationFactory({\n                                                sizePerPage: 5,\n                                                sizePerPageList: [5, 10, 15, 20, 25],\n                                            })} />\n\n                                        {/*  <label style={{ fontSize: '20px',marginBottom: \"15px\", color: \"#000000\" }}> Total Anomaly :</label>  <text style={{fontSize: '20px',color: \"red\"}}>{totalAnomaly}</text> */}\n\n                                    </div>\n                                )\n                            }\n                        </ToolkitProvider>\n\n\n\n\n                        <label style={{ fontSize: '20px', marginBottom: \"15px\", color: \"#000000\" }}> Total Enlevement :</label>  <text style={{ fontSize: '20px', color: \"red\" }}>{totalEnlevement}</text>\n\n                    </Tab>\n                    <Tab eventKey=\"home\" title=\"Anomaly List\">\n\n\n\n                        <ToolkitProvider\n\n                            variant=\"primary\"\n                            keyField=\"id\"\n                            data={getAnomalyByDriverList}\n                            columns={columns3}\n                            exportCSV\n                        >\n                            {\n                                props => (\n                                    <div>\n                                        <MyExportCSV {...props.csvProps} />\n                                        <BootstrapTable\n                                            {...props.baseProps} striped\n                                            bordered\n                                            hover\n                                            bootstrap4={true} headerClasses=\"table thead-light mb-0\" pagination={paginationFactory({\n                                                sizePerPage: 5,\n                                                sizePerPageList: [5, 10, 15, 20, 25],\n                                            })} />\n\n                                        {/*  <label style={{ fontSize: '20px',marginBottom: \"15px\", color: \"#000000\" }}> Total Anomaly :</label>  <text style={{fontSize: '20px',color: \"red\"}}>{totalAnomaly}</text> */}\n\n                                    </div>\n                                )\n                            }\n                        </ToolkitProvider>\n\n\n\n\n                        <label style={{ fontSize: '20px', marginBottom: \"15px\", color: \"#000000\" }}> Total Anomaly :</label>  <text style={{ fontSize: '20px', color: \"red\" }}>{getAnomalyByDriverList.length}</text>\n\n\n\n                    </Tab>\n                    <Tab eventKey=\"profile\" title=\"Anomaly Dominate \">\n\n                        <div style={{ textAlign: \"center\" }}>\n                            <label style={{ fontSize: '20px', marginBottom: \"15px\", color: \"#000000\" }}> Anomaly Dominate :</label>  <text style={{ fontSize: '20px', color: \"red\" }}>\"{getAnomalyDomianteByDriver}\"</text>\n                            <br></br>\n\n                            <label style={{ fontSize: '20px', marginBottom: \"15px\", color: \"#000000\" }}> Total Anomaly Dominate:</label>  <text style={{ fontSize: '20px', color: \"red\" }}>{totalAnomalyDominate}</text>\n                        </div>\n\n                    </Tab>\n                   \n                    <Tab eventKey=\"contact2\" title=\"Transfert list\">\n                        <ToolkitProvider\n\n                            variant=\"primary\"\n                            keyField=\"id\"\n                            data={getTransfertByDrivert}\n                            columns={columns6}\n                            exportCSV\n                        >\n                            {\n                                props => (\n                                    <div>\n                                        <MyExportCSV {...props.csvProps} />\n                                        <BootstrapTable\n                                            {...props.baseProps} striped\n                                            bordered\n                                            hover\n                                            bootstrap4={true} headerClasses=\"table thead-light mb-0\" pagination={paginationFactory({\n                                                sizePerPage: 5,\n                                                sizePerPageList: [5, 10, 15, 20, 25],\n                                            })} />\n\n                                        {/*  <label style={{ fontSize: '20px',marginBottom: \"15px\", color: \"#000000\" }}> Total Anomaly :</label>  <text style={{fontSize: '20px',color: \"red\"}}>{totalAnomaly}</text> */}\n\n                                    </div>\n                                )\n                            }\n                        </ToolkitProvider>\n\n\n\n\n                        <label style={{ fontSize: '20px', marginBottom: \"15px\", color: \"#000000\" }}> Total Transfert :</label>  <text style={{ fontSize: '20px', color: \"red\" }}>{totalAnomalyConsole}</text>\n\n                    </Tab>\n                </Tabs>\n\n            </Col >\n        </Row >\n        // </Aux>\n    );\n\n}\n\nexport default Choosedriver;\n\n","import React from 'react';\nimport { Row, Col, Card } from 'react-bootstrap';\n\nimport Aux from \"../../../hoc/_Aux\";\nimport Choosedriver from './Choose.driver'\n/*  import LineChart from \"./LineChart\"; */\n// import BarDiscreteChart from \"./BarDiscreteChart\";\n// import BarDiscreteChartLivraison from \"./BarDiscreteChartLivraison\";\n// import BarDiscreteChartZone from \"./BarDiscreteChartZone\";\n// /* import MultiBarChart from \"./MultiBarChart\"; */\n// import PieBasicChart from \"./PieBasicChart\";\n// /* import PieDonutChart from \"./PieDonutChart\"; */\n// import ListPickupAdmin from \"./ListPickupAdmin\";\n/* import DriverStat from \"./DriverStat\";\nimport { GetStatisticsDetails } from '../../services'; */\n\n\nclass Statistic_driver extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            getList: [], selectedProduct: '', isloaded: false, limit: 20,\n            offset: 0,\n            perPage: 30,\n            orgtableData: [],\n            currentPage: 0,\n            totalAnomaly: 0,\n            totalDelivery: 0,\n            totalEnlevement: 0,\n            totalAnomalyConsole: 0\n        }\n    }\n\n    async componentDidMount() {\n        //this.GetAnomalyByDriverList();\n    }\n\n\n    getData = (totalAnomaly, totalDelivery, totalEnlevement, totalAnomalyConsole) => {\n\n        this.setState({ totalAnomaly: totalAnomaly, totalDelivery: totalDelivery, totalEnlevement: totalEnlevement, totalAnomalyConsole: totalAnomalyConsole }\n            , () => { console.log('data2', this.state.totalAnomaly, this.state.totalDelivery, this.state.totalEnlevement, this.state.totalAnomalyConsole) })\n    }\n\n    render() {\n        return (\n            <Aux>\n                <Row>\n                    <Col sm={12}>\n                        <Card>\n                            {/*  <Card.Header>\n                                <Card.Title as=\"h5\">Line Chart2</Card.Title>\n                            </Card.Header>\n                            <Card.Body>\n                                <LineChart/>\n                            </Card.Body> */}\n\n\n                            <Card.Header>\n                                <Card.Title as=\"h5\">Driver </Card.Title>\n                            </Card.Header>\n                            <Card.Body className=\"text-center\">\n                                {/* <DriverStat/> */}\n                                <Choosedriver getData={this.getData} />\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                    {/*      <Col md={4}>\n                        <Card>\n                            <Card.Header>\n                                <Card.Title as=\"h5\">Driver Statistics</Card.Title>\n                            </Card.Header>\n                            <Card.Body className=\"text-center\">\n                                <PieBasicChart  totalAnomalyPie={this.state.totalAnomaly}\n                                totalDeliveryPie={this.state.totalDelivery}\n                                totalEnlevementPie={this.state.totalEnlevement}\n                                totalAnomalyConsolPie={this.state.totalAnomalyConsole}/>\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                     <Col md={8}>\n                     <Card>\n                            <Card.Header>\n                                <Card.Title as=\"h5\">Top Five Providers</Card.Title>\n                            </Card.Header>\n                            <Card.Body>\n                                <BarDiscreteChartLivraison/>\n                            </Card.Body>\n                        </Card>\n                    </Col> */}\n                    {/*             <Col md={12}>\n\n                        <Card>\n                            <Card.Header>\n                                <Card.Title as=\"h5\">Top Ten Drivers</Card.Title>\n                            </Card.Header>\n                            <Card.Body>\n                               <BarDiscreteChart/> \n                            </Card.Body>\n                        </Card>\n                    </Col>\n                    <Col md={12}>\n                        <Card>\n                            <Card.Header>\n                                <Card.Title as=\"h5\">Top Five Zones</Card.Title>\n                            </Card.Header>\n                            <Card.Body>\n                                 <BarDiscreteChartZone/> \n                            </Card.Body>\n                        </Card>\n                    </Col>\n */}\n                    {/*  <Col md={6}>\n                        <Card>\n                            <Card.Header>\n                                <Card.Title as=\"h5\">Donut Chart</Card.Title>\n                            </Card.Header>\n                            <Card.Body className=\"text-center\">\n                                <PieDonutChart/>\n                            </Card.Body>\n                        </Card>\n                    </Col> */}\n                    {/* <Col md={12}>\n                        <Card>\n                            <Card.Header>\n                                <Card.Title as=\"h5\">Driver </Card.Title>\n                            </Card.Header>\n                            <Card.Body className=\"text-center\">\n\n                                <ListPickupAdmin getData={this.getData}/>\n                            </Card.Body>\n                        </Card>\n                    </Col> */}\n                    {/* <Col md={12}>\n                        <Card>\n                            <Card.Header>\n                                <Card.Title as=\"h5\">Line Chart Logistics</Card.Title>\n                            </Card.Header>\n                            <Card.Body className=\"text-center\">\n                                <LineChartLogistics/>\n                            </Card.Body>\n                        </Card>\n                    </Col> */}\n\n\n                </Row>\n            </Aux>\n        );\n    }\n}\n\nexport default Statistic_driver;"],"names":["urlbackend","require","props","useState","selectedDriver","setSelectedDriver","getAnomalyByDriverList","setAnomalyByDriverList","totalAnomaly","getAnomalyDomianteByDriver","setAnomalyDomianteByDriver","totalAnomalyDominate","getDeliveryByDriverList","setDeliveryByDriverListt","totalDelivery","setTotalDelivery","getEnlevementByDriverList","setEnlevementByDriverList","totalEnlevement","getTransfertByDrivert","totalAnomalyConsole","startDate","setStartDate","endDate","setEndDate","drivers","setdrivers","getdatabyriver","alert","axios","then","response","data","total_delivery","catch","e","console","log","dominateAnomaly","useEffect","getdata","config","headers","localStorage","getItem","getdrivers","MyExportCSV","className","onClick","onExport","Row","Col","sm","style","marginBottom","color","Form","controlId","type","name","placeholder","value","onChange","target","marginRight","marginLeft","width","height","map","key","id","username","class","Tabs","defaultActiveKey","marginTop","Tab","eventKey","title","variant","keyField","columns","sort","dataField","text","formatter","cell","row","colis","name_complete","textAlign","phone_number","address","exportCSV","csvProps","baseProps","striped","bordered","hover","bootstrap4","headerClasses","pagination","paginationFactory","sizePerPage","sizePerPageList","fontSize","anomaly","message","length","Statistic_driver","getData","setState","state","getList","selectedProduct","isloaded","limit","offset","perPage","orgtableData","currentPage","Card","as","this","React"],"sourceRoot":""}