{"version":3,"file":"static/js/4531.9cc73e49.chunk.js","mappings":"6GAqPA,IA1He,CACX,CACI,WAAa,CAAE,YAAY,iBAAc,aAAa,eAAe,WAAW,wBAAqB,aAAa,cAAc,sBAAmB,UAAU,eAAY,cAAc,cAAc,eAAe,YAAY,YAAY,qBAAkB,kBAAkB,gBAAgB,YAAY,aAC5S,KAAQ,KACR,YAAe,SAEnB,CACI,WAAa,CAAE,gBAAgB,WAAW,eAAY,uBAAoB,gBAAgB,uBAAoB,iBAC9G,KAAQ,IACR,YAAe,UAEnB,CACI,WAAa,CAAE,WAAW,eAAe,YAAY,WAAW,YAAY,cAAc,cAAc,iBACxG,KAAQ,IACR,YAAe,WAEnB,CACI,WAAa,CAAE,aAAa,uBAAoB,YAAY,eAAe,iBAAiB,sBAAsB,YAAY,aAAU,YAAY,kBAAa,aAAa,WAC9K,KAAQ,KACR,YAAe,aAEnB,CACI,WAAa,CAAE,UAAU,4BAAyB,kBAAe,UAAU,kBAAkB,SAAS,YAAY,kBAAkB,aAAa,YAAY,YAAY,oBAAoB,oBAAiB,cAAc,iBAAc,aAC1O,KAAQ,KACR,YAAe,UAEnB,CACI,WAAa,CAAE,gBAAgB,aAAa,gBAAgB,YAAY,YAAY,WAAW,YAAY,qBAAqB,UAAU,WAAW,iBAAiB,iBAAiB,YAAY,cACnM,KAAQ,KACR,YAAe,WAEnB,CACI,WAAa,CAAE,YAAY,cAAW,iBAAiB,SAAS,YAAY,WAC5E,KAAQ,IACR,YAAe,YAEnB,CACI,WAAa,CAAE,gBAAgB,yBAAyB,iBAAiB,mBAAmB,2BAA2B,kBAAkB,WAAW,yBAAmB,gBAAgB,WAAW,YAAY,aAAa,YAAY,gBAAgB,WAAW,0BAClQ,KAAQ,KACR,YAAe,UAEnB,CACI,WAAa,CAAE,YAAY,eAAe,YAAY,iBAAc,mBAAgB,WAAW,WAAW,YAAY,YAAY,aAAa,eAAe,oBAAoB,yBAClL,KAAQ,KACR,YAAe,YAEnB,CACI,WAAa,CAAE,UAAU,cAAc,kBAAkB,aAAa,UAAU,YAAY,UAAU,WAAW,eAAe,iBAAiB,gBACjJ,KAAQ,KACR,YAAe,UAEnB,CACI,WAAa,CAAE,cAAc,eAAe,iBAAiB,mBAAmB,aAAa,SAAS,WAAW,cAAc,WAAW,cAAc,iBAAiB,YAAY,wBAAwB,YAAY,cAAW,cACpO,KAAQ,KACR,YAAe,QAEnB,CACI,WAAa,CAAE,gBAAa,gBAAa,WAAW,UAAU,eAAe,UAAU,YAAY,cAAc,iBACjH,KAAQ,IACR,YAAe,WAEnB,CACI,WAAa,CAAE,YAAY,kBAAkB,cAAc,YAAY,eAAe,YAAY,eAAe,cAAc,oBAC/H,KAAQ,IACR,YAAe,YAEnB,CACI,WAAa,CAAE,aAAa,YAAY,WAAW,wBAAwB,eAAe,qBAAkB,uBAAoB,YAAY,UAAU,YAAY,YAClK,KAAQ,KACR,YAAe,OAEnB,CACI,WAAa,CAAE,gBAAgB,gBAAgB,aAAa,cAAW,eAAe,YAAY,aAAa,YAAY,WAAW,UAAU,WAChJ,KAAQ,KACR,YAAe,WAEnB,CACI,WAAa,CAAE,iBAAiB,gBAAgB,YAAY,YAAY,cAAc,YAAY,WAAW,mBAAmB,cAAc,aAAa,aAC3J,KAAQ,KACR,YAAe,YAEnB,CACI,WAAa,CAAE,qBAAqB,oBAAoB,UAAU,yBAAyB,aAAa,0CAAuC,aAAa,eAAe,YAAY,WAAW,kBAClM,KAAQ,KACR,YAAe,eAEnB,CACI,WAAa,CAAE,kBAAkB,kBAAkB,cAAc,gBAAgB,WAAW,UAAU,aAAa,aAAa,SAAS,UAAU,aAAa,YAAY,oBAC5K,KAAQ,KACR,YAAe,aAEnB,CACI,WAAa,CAAE,kBAAe,mBAAgB,iBAAc,cAAc,YAAY,iBAAiB,UAAU,YAAY,qBAAqB,WAClJ,KAAQ,KACR,YAAe,YAEnB,CACI,WAAa,CAAE,gBAAgB,gBAAgB,oBAAiB,iBAAiB,UAAU,sBAAsB,iBAAiB,eAAe,kBACjJ,KAAQ,IACR,YAAe,YAEnB,CACI,WAAa,CAAE,cAAc,cAAc,YAAY,cAAc,aAAa,WAAW,gBAAa,eAAe,eAAe,YAAY,SACpJ,KAAQ,KACR,YAAe,SAEnB,CACI,WAAa,CAAE,UAAU,aAAa,aAAa,UAAU,WAC7D,KAAQ,IACR,YAAe,UAEnB,CACI,WAAa,CAAE,kBAAkB,kBAAkB,SAAS,eAAe,eAAe,YAAY,WACtG,KAAQ,IACR,YAAe,aAEnB,CACI,WAAa,CAAE,iBAAc,mBAAgB,iBAAiB,cAAc,aAAa,cACzF,KAAQ,IACR,YAAe,e,iHC/OP,SAASA,EAAwBC,GAC7C,OAAwBC,EAAAA,EAAAA,UAASD,EAAME,QAAvC,eAAOC,EAAP,KAAaC,EAAb,KAiBA,OAfAC,EAAAA,EAAAA,YAAW,WACTC,QAAQC,IAAI,4BAA4BJ,KACzC,CAACA,KAcA,SAAC,IAAD,CAAOK,MAAOR,EAAMS,OAAQC,OAAQP,EAAMQ,OAjB1B,kBAAMP,GAAQ,IAiB9B,UACE,uBACIJ,EAAMY,c,0QCHdC,EAAaC,EAAQ,MAARA,GA2ajB,EAxasB,SAACd,GACnB,OAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAcc,GAAd,WACA,GAAwBd,EAAAA,EAAAA,UAAS,IAAjC,eAAOe,EAAP,KACA,GADA,MACsCf,EAAAA,EAAAA,UAAS,KAA/C,eAAOgB,EAAP,KAAoBC,EAApB,MAMAb,EAAAA,EAAAA,YAAU,eASV,IAAMc,EAAoB,SAACC,GACvBF,EAAeE,GACf,IAAMC,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChB,+BAAgC,iBAChC,iBAAkBC,aAAaC,QAAQ,SACvC,cAAiB,UAAYD,aAAaC,QAAQ,WAI1DC,IAAAA,IACSZ,EAAa,QAASQ,GAC1BK,MAAK,SAACC,GACHrB,QAAQC,IAAI,mBAAoBoB,EAASC,MACzCb,EAASY,EAASC,KAAKA,KAAKC,QAAO,SAAAC,GAAC,OAAIA,EAAEb,cAAgBG,SAE7DW,OAAM,SAACD,GACJxB,QAAQC,IAAIuB,OAOxB,OAGI,SAAC,IAAD,WACI,SAACE,EAAA,EAAD,WAGI,SAACC,EAAA,EAAD,WACI,UAACC,EAAA,EAAD,YACI,SAACA,EAAA,SAAD,WACI,UAACA,EAAA,QAAD,CAAYC,GAAG,KAAf,2BAAmCnC,EAAMoC,cAAcC,YAAvD,WAEJ,SAACH,EAAA,OAAD,WAEI,SAAC,KAAD,CACII,cAAe,CACXC,cAAevC,EAAMoC,cAAcG,cACnCC,aAAcxC,EAAMoC,cAAcI,aAClCC,YAAa,GACbC,MAAO,GACPC,QAAQ3C,EAAMoC,cAAcO,QAC5BC,MAAO5C,EAAMoC,cAAcQ,MAC3BC,WAAY7C,EAAMoC,cAAcS,WAChCC,YAAY9C,EAAMoC,cAAcU,YAChCC,IAAI/C,EAAMoC,cAAcW,IACxB9B,YAAajB,EAAMoC,cAAcnB,YACjC+B,eAAgBhD,EAAMoC,cAAcY,eACpCC,aAAejD,EAAMoC,cAAca,aACnCjC,KAAMhB,EAAMoC,cAAcpB,MAG9BkC,iBACIC,EAAAA,KAAaC,MAAM,CACfb,cAAeY,EAAAA,KAAaE,IAAI,KAAKC,SAAS,mBAC9Cd,aAAcW,EAAAA,KAAaE,IAAI,GAAGE,IAAI,GAAGD,SAAS,mBAClDrC,YAAakC,EAAAA,KAAaE,IAAI,KAAKC,SAAS,mBAE5CX,QAASQ,EAAAA,KAAaE,IAAI,KAAKC,SAAS,mBACxCV,MAAOO,EAAAA,KAAaE,IAAI,KAAKC,SAAS,mBACtCR,YAAaK,EAAAA,KAAaE,IAAI,KAAKC,SAAS,qBAKpDE,SAAU,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UAEjBpD,QAAQC,IAAIkD,GACZnD,QAAQC,IAAIS,GACZV,QAAQC,IAAIU,GAEZ,IAAMI,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChB,+BAAgC,gBAChC,iBAAkBC,aAAaC,QAAQ,SACvC,cAAiB,UAAYD,aAAaC,QAAQ,WAG1DC,IAAAA,IAAUZ,EAAa,iBAAiBb,EAAMoC,cAAcuB,GAAIF,EAAQpC,GACnEK,MAAK,SAAAC,GACFrB,QAAQC,IAAIoB,EAASC,MACrBgC,MAAM,oBAENF,IACA1D,EAAM6D,gBAGT9B,OAAM,SAAAD,GACHxB,QAAQC,IAAIuB,OAtD5B,SA0FK,gBACGgC,EADH,EACGA,OACAC,EAFH,EAEGA,WACAC,EAHH,EAGGA,aACAC,EAJH,EAIGA,aAEAC,GANH,EAKGC,aALH,EAMGD,SACAT,EAPH,EAOGA,OAPH,OASG,iBAAMD,SAAUS,EAAhB,UAEI,SAAC/B,EAAA,EAAD,WAEI,SAAC,IAAD,WAEI,UAACF,EAAA,EAAD,YACI,UAACC,EAAA,EAAD,CAAKmC,GAAI,EAAT,WACI,SAACC,EAAA,EAAD,CACIC,KAAK,gBACLC,SAAUP,EACVQ,OAAQT,EACR3C,MAAOqC,EAAOlB,cACduB,OAAQA,EAAOvB,cACf2B,QAASA,EAAQ3B,cACjBkC,MAAM,sBAIV,SAACJ,EAAA,EAAD,CACIC,KAAK,eACLG,MAAM,UACNC,KAAK,SACLH,SAAUP,EACVQ,OAAQT,EACR3C,MAAOqC,EAAOjB,aACdsB,OAAQA,EAAOtB,aACf0B,QAASA,EAAQ1B,gBAerB,mBAAOmC,QAAQ,YAAf,0BAAuC,SAACC,EAAA,EAAD,CAAad,OAAQA,EAAO7C,YAAaiD,QAASA,EAAQjD,cAAjG,QAEA,SAAC4D,EAAA,EAAD,CAAYC,UAAU,OAAtB,UACI,UAACC,EAAA,EAAD,CACI5C,GAAG,SACHwB,GAAG,cACHqB,QAAM,EACNT,SAAU,SAACzC,GACPkC,EAAalC,GACbX,EAAkBW,EAAEmD,OAAO7D,QAI/BoD,OAAQT,EACR3C,MAAOqC,EAAOxC,YACd6C,OAAQA,EAAO7C,YAZnB,WAcI,4CAECiE,EAAAA,EAAAA,KAAY,SAACC,EAAMC,GAAP,OACT,mBAAQC,QAAS,SAACvD,GAAD,OAAOX,EAAkBW,EAAEmD,OAAO7D,QAA+BA,MAAO+D,EAAKG,YAA9F,SACKH,EAAKG,aADsDH,EAAKG,sBA0CjF,SAACjB,EAAA,EAAD,CACIC,KAAK,UACLG,MAAM,WACNF,SAAUP,EACVQ,OAAQT,EACR3C,MAAOqC,EAAOd,QACdmB,OAAQA,EAAOnB,QACfuB,QAASA,EAAQvB,cAKzB,UAACV,EAAA,EAAD,CAAKmC,GAAI,EAAT,UAuC8B,MAAzBX,EAAOT,iBAAyB,SAACqB,EAAA,EAAD,CAC7BC,KAAK,QACLG,MAAM,OACNC,KAAK,SACLH,SAAUP,EACVQ,OAAQT,EACR3C,MAAOqC,EAAOb,MACdsB,QAASA,EAAQtB,MACjBkB,OAAQA,EAAOlB,MACf2C,UAAQ,KAIZ,kBAAOZ,QAAQ,YAAf,+BAEA,SAACE,EAAA,EAAD,CAAYC,UAAU,OAAtB,UACI,UAACC,EAAA,EAAD,CACI5C,GAAG,SACHwB,GAAG,eACHqB,QAAM,EACNT,SAAUP,EACVQ,OAAQT,EACR3C,MAAOqC,EAAOR,aANlB,WAQI,4DAEC,CAAC,aAAW,YAAU,2BAAqBuC,KAAI,SAACL,EAAMC,GAAP,OAC5C,mBAAmBhE,MAAO+D,EAA1B,SACKA,GADQA,YAMzB,mBAAOR,QAAQ,YAAf,yBAAsC,SAACC,EAAA,EAAD,CAAad,OAAQA,EAAOjB,WAAYqB,QAASA,EAAQrB,iBAE/F,SAACgC,EAAA,EAAD,CAAYC,UAAU,OAAtB,UACI,UAACC,EAAA,EAAD,CACI5C,GAAG,SACHwB,GAAG,aACHqB,QAAM,EACNT,SAAUP,EACVQ,OAAQT,EACR3C,MAAOqC,EAAOgC,UANlB,WAQI,2CAEC,CAAC,uBAAwB,UAAW,gBAAgBD,KAAI,SAAC3C,EAAYuC,GAAb,OACrD,mBAAyBhE,MAAOyB,EAAhC,SACKA,GADQA,YAMzB,SAACwB,EAAA,EAAD,CACIC,KAAK,cACLG,MAAM,cACNF,SAAUP,EACVQ,OAAQT,EACR3C,MAAOqC,EAAOX,YACdoB,QAASA,EAAQpB,YACjBgB,OAAQA,EAAOhB,eAInB,SAACuB,EAAA,EAAD,CACIC,KAAK,MACLG,MAAM,MACNC,KAAK,SACLH,SAAUP,EACVQ,OAAQT,EACR3C,MAAOqC,EAAOV,IACdmB,QAASA,EAAQnB,IACjBe,OAAQA,EAAOf,UASvB,SAACd,EAAA,EAAD,WACI,SAACyD,EAAA,EAAD,CAEIhB,KAAK,SACLlE,MAAM,OACNmF,QAAQ,OAJZ,iDClXxD,MApCA,SAA4B3F,GACxB,OAAwBC,EAAAA,EAAAA,WAAS,GAAjC,eAAOE,EAAP,KAAaC,EAAb,KAEMwF,EAAc,kBAAMxF,GAAQ,IAKlC,OAHAC,EAAAA,EAAAA,YAAU,cACP,KAGC,iCACI,UAACqF,EAAA,EAAD,CAAQG,MAAO,CAACC,WAAW,WACvBT,QAPO,kBAAMjF,GAAQ,IAMzB,eAC0B,iBAAM0E,UAAU,qBAG1C,UAACiB,EAAA,EAAD,CAAOC,gBAAgB,WAAW7F,KAAMA,EAAM8F,OAAQL,EAAtD,WACI,SAACG,EAAA,SAAD,CAAcG,aAAW,EAAzB,UACI,SAACH,EAAA,QAAD,mBAEJ,SAACA,EAAA,OAAD,WAEF,SAAC,EAAD,CAAgB3D,cAAiBpC,EAAMoC,cAAeyB,WAAY,WAAK7D,EAAM6D,aAAa+B,UAGxF,SAACG,EAAA,SAAD,WACI,SAACL,EAAA,EAAD,CAAQC,QAAQ,YAAYN,QAASO,EAArC,6B,+JC7BdO,EAAerF,EAAQ,OACvBsF,EAAe,CACnBC,MAAO,EACPC,eAAgB,EAChBC,gBAAiB,SAoEnB,IAvDe,SAACvG,GACd,IACEwG,EAEExG,EAFFwG,YACA1B,EACE9E,EADF8E,UAIF,GAA0B7E,EAAAA,EAAAA,WAAS,GAAnC,eAAOwG,EAAP,KAAcC,EAAd,KACA,GAAyBzG,EAAAA,EAAAA,WAAS,GAA3B0G,GAAP,eAEMhG,EAAS,kBAAM+F,GAAUD,IAK/B,OACE,4BACE,SAAC,IAAD,CAAMG,QAAM,EAACpD,SAAU,SAAC1B,GAAD,OAAOA,EAAE+E,kBAAhC,UAGE,UAAC,IAAD,CAAQrG,MAAM,OAAO6E,QAAS1E,EAA9B,UAAuC6F,GAAY,iBAAM1B,UAAU,uBAErE,UAAC,IAAD,CAAO,kBAAgB,gCACrBgC,UAAQ,EAACpG,OAAQ+F,EAAO9F,OAAQA,EAAQmE,UAAWA,EAAW6B,eAAgBA,EADhF,WAEE,UAAC,IAAD,CAAahG,OAAQA,EAArB,iBAAgC,iBAAKkF,MAAO,CAAErF,MAAO,QAASuG,WAAY,OAAQC,UAAW,UAA7D,gBAA2E,6CAA3E,OAAhC,QACA,UAAC,IAAD,CAAWC,KAAK,KAAhB,WACE,0BAAK,eAAGpB,MAAO,CAAErF,MAAO,QAASuG,WAAY,OAAQC,UAAW,UAA3D,eAA0EhH,EAAMkH,UACrF,cAAGrB,MAAO,CAAErF,MAAO,QAASuG,WAAY,OAAQC,UAAW,UAA3D,UACE,SAAC,EAAAG,OAAD,CACExD,GAAI,YACJyD,QAAQ,UACRC,QAAQ,UACRC,MAAM,IACNzB,MAAO,CAAE0B,MAAO,KAChBnG,MAAOpB,EAAMkH,YAOnB,UAAC,IAAD,YAEE,UAAC,IAAD,CAAQ7B,QAhCI,WAClBc,EAAaA,aAAaqB,SAASC,eAAe,aAAc,aAAcrB,IA+BxE,6BAA6C,SAAC,MAAD,QAE7C,UAAC,IAAD,CAAQf,QAAS,kBAAMqC,OAAOC,SAA9B,oBAA6C,SAAC,MAAD,IAA7C,kB,mHC+EV,IAjIA,SAAuB3H,GACrB,OAAwBC,EAAAA,EAAAA,WAAS,GAAjC,eAAOE,EAAP,KAAaC,EAAb,KACA,GAAgCH,EAAAA,EAAAA,UAAS,IAAzC,eAAO2H,EAAP,KAAiBC,EAAjB,MAEAxH,EAAAA,EAAAA,YAAU,WAURC,QAAQC,KAAIuH,EAAAA,EAAAA,GAAUvG,aAAaC,QAAQ,WAE3CqG,EAAY7H,EAAM+H,iBAGlB,IAEF,IAAMnC,EAAc,kBAAMxF,GAAQ,IAgBlC,OACE,iCACE,UAAC,IAAD,CAAQuF,QAAQ,UACdN,QAlBa,kBAAMjF,GAAQ,IAiB7B,eACwB,iBAAM0E,UAAU,oBAGxC,UAAC,IAAD,CAAOmC,KAAK,KAAK9G,KAAMA,EAAM8F,OAAQL,EAArC,WACE,SAAC,WAAD,CAAcM,aAAW,EAAzB,UACE,SAAC,UAAD,2BAEF,SAAC,SAAD,WACA,gBAAKpB,UAAU,SAAf,UACE,SAAC,IAAD,CAAWkD,SAAUhI,EAAMgI,SAAUC,aAAcL,SAkErD,SAAC,WAAD,WAEE,SAAC,IAAD,CAAQjC,QAAQ,YAAYN,QAASO,EAArC,8B","sources":["Address/Gouvernerat.js","Components/Alert/Alert.js","Routes/ModificationColis/Modification.colis.js","Routes/ModificationColis/Modal.modification.colis.js","Routes/QRcode/QRcode.js","Routes/Template/TemplatePrintAdmin.js"],"sourcesContent":["// const Address =[\n//     {    \n//         \"lang\": \"36.86250\",\n//         \"lat\": \"10.19556\",\n//         \"GOUV\": \"Ariana\"\n//     },\n//     {\n//         \"lang\": \"36.73333\",\n//         \"lat\": \"9.18333\",\n//         \"GOUV\": \"Béja\"\n//     },\n//     {\n//         \"lang\": \"36.75333\",\n//         \"lat\": \"10.2222\",\n//         \"GOUV\": \"Ben Arous\"\n//     },\n//     {\n//         \"lang\": \"37.29\",\n//         \"lat\": \"9.87\",\n//         \"GOUV\": \"Bizerte\"\n//     },\n//     {\n//         \"lang\": \"33.88333\",\n//         \"lat\": \"10.11667\",\n//         \"GOUV\": \"Gabès\"\n//     },\n//     {\n//         \"lang\": \"34.42500\",\n//         \"lat\": \"8.78417\",\n//         \"GOUV\": \"Gafsa\"\n//     },\n//     {\n//         \"lang\": \"36.50111\",\n//         \"lat\": \"8.77944\",\n//         \"GOUV\": \"Jendouba\"\n//     },\n//     {\n//         \"lang\": \"35.68\",\n//         \"lat\": \"10.10\",\n//         \"GOUV\": \"kairouan\"\n//     },\n//     {\n//         \"lang\": \"35.18\",\n//         \"lat\": \"8.83\",\n//         \"GOUV\": \"Kasserine\"\n//     },\n//     {\n//         \"lang\": \"33.70194\",\n//         \"lat\": \"8.97361\",\n//         \"GOUV\": \"Kebili\"\n//     },\n//     {\n//         \"lang\": \"36.19\",\n//         \"lat\": \"8.71\",\n//         \"GOUV\": \"El Kef\"\n//     },\n//     {\n//         \"lang\": \"35.52\",\n//         \"lat\": \"11.07\",\n//         \"GOUV\": \"Mahdia\"\n//     },\n//     {\n//         \"lang\": \"36.80778\",\n//         \"lat\": \"10.10111\",\n//         \"GOUV\": \"Manouba\"\n//     },\n//     {\n//         \"lang\": \"33.35\",\n//         \"lat\": \"10.49\",\n//         \"GOUV\": \"Medenine\"\n//     },\n//     {\n//         \"lang\": \"35.79\",\n//         \"lat\": \"10.82\",\n//         \"GOUV\": \"Monastir\"\n//     },\n//     {\n//         \"lang\": \"36.45000\",\n//         \"lat\": \"10.73333\",\n//         \"GOUV\": \"Nabeul\"\n//     },\n//     {\n//         \"lang\": \"34.74056\",\n//         \"lat\": \"10.76028\",\n//         \"GOUV\": \"Sfax\"\n//     },\n//     {\n//         \"lang\": \"35.04028\",\n//         \"lat\": \"9.49361\",\n//         \"GOUV\": \"Sidi Bouzid\"\n//     },\n//     {\n//         \"lang\": \"36.08333\",\n//         \"lat\": \"9.36667\",\n//         \"GOUV\": \"Siliana\"\n//     },\n//     {\n//         \"lang\": \"35.82556\",\n//         \"lat\": \"10.64111\",\n//         \"GOUV\": \"Sousse\"\n//     },\n//     {\n//         \"lang\": \"32.93333\",\n//         \"lat\": \"10.45000\",\n//         \"GOUV\": \"Tataouine\",\n        \n//     },\n//     {\n//         \"lang\": \"33.93\",\n//         \"lat\": \"8.13\",\n//         \"GOUV\": \"Tozeur\"\n//     },\n//     {\n//         \"lang\": \"36.80278\",\n//         \"lat\": \"10.17972\",\n//         \"GOUV\": \"Tunis\",\n//     },\n//     {\n//         \"lang\": \"36.40\",\n//         \"lat\": \"10.14\",\n//         \"GOUV\": \"zaghouan\"\n//     }\n// ]\nconst Address =[\n    {\n        \"delegation\":[ \"Carthage \",\" La Médina \",\" Bab Bhar \",\" Bab Souika \",\" Omrane \",\" Omrane Supérieur \",\" Attahrir \",\" El Menzah \",\" Cité Alkhadhra \",\" Bardo \",\" Séjoumi \",\" Azzouhour \",\" Alhrairia \",\" Sidi Hsine \",\" Ouardia \",\" Kabaria \",\" Sidi Elbéchir \",\" Jebel Jelloud \",\" La Goulette \",\" Le Kram \",\" La Marsa\"],\n        \"Nbre\": \"21\",\n        \"Gouvernorat\": \"TUNIS\"\n    },\n    {\n        \"delegation\":[ \"Ariana Ville \",\" Soukra \",\" Raouède \",\" Kalâat Andalous \",\" Sidi Thabet \",\" Cité Attadhamon \",\" M’nihla\"],\n        \"Nbre\": \"7\",\n        \"Gouvernorat\": \"ARIANA\"\n    },\n    {\n        \"delegation\":[ \"Manouba \",\" Oued Ellil \",\"Tebourba \",\" Battan \",\" Jedaida \",\" Mornaguia \",\" Borj Amri \",\" Douar Hicher\"],\n        \"Nbre\": \"8\",\n        \"Gouvernorat\": \"MANOUBA\"\n    },\n    {\n        \"delegation\":[ \"Ben Arous \",\" Nouvelle Médina \",\" Mourouj \",\" Hammam Lif \",\" Hammam Chatt \",\" Boumhel Bassatine \",\" Ezzahra \",\" Radès \",\" Megrine \",\" M’hamdia \",\" Fouchana \",\" Mornag\"],\n        \"Nbre\": \"12\",\n        \"Gouvernorat\": \"BEN AROUS\"\n    },\n    {\n        \"delegation\":[ \"Nabeul \",\" Dar Chaâbane Elfehri \",\" Béni Khiar \",\" Korba \",\" Menzel Temime \",\" Mida \",\" Kelibia \",\" Hammam Ghezaz \",\" Haouaria \",\" Takelsa \",\" Slimane \",\" Menzel Bouzelfa \",\" Béni Khalled \",\" Grombalia \",\" Bouârgoub \",\" Hammamet\"],\n        \"Nbre\": \"16\",\n        \"Gouvernorat\": \"NABEUL\"\n    },\n    {\n        \"delegation\":[ \"Bizerte Nord \",\" Jarzouna \",\" Bizerte Sud \",\" Sejnane \",\" Joumine \",\" Mateur \",\" Ghezala \",\" Menzel Bourguiba \",\" Tinja \",\" Utique \",\" Ghar El Melh \",\" Menzel Jemil \",\" El Alia \",\" Ras Jebel\"],\n        \"Nbre\": \"14\",\n        \"Gouvernorat\": \"BIZERTE\"\n    },\n    {\n        \"delegation\":[ \"Zaghouan \",\" Zériba \",\" Bir Mecharga \",\" Fahs \",\" Nadhour \",\" Saouaf\"],\n        \"Nbre\": \"6\",\n        \"Gouvernorat\": \"ZAGHOUAN\"\n    },\n    {\n        \"delegation\":[ \"Sousse Ville \",\" Zaouia Ksiba Thrayat \",\" Sousse Ryadh \",\" Sousse Jawhara \",\" Sousse Sidi Abdelhamid \",\" Hammam sousse \",\" Akouda \",\" Kalâa Elkébira \",\" Sidi Bouali \",\" Hergla \",\" Enfidha \",\" Bouficha \",\" Koundar \",\" Sidi Elheni \",\" Msaken \",\" Kalâa Ességhira\"],\n        \"Nbre\": \"16\",\n        \"Gouvernorat\": \"SOUSSE\"\n    },\n    {\n        \"delegation\":[ \"Monastir \",\" Ouerdanine \",\" Sahline \",\" Zéramdine \",\" Béni Hassan \",\" Jammel \",\" Benbla \",\" Moknine \",\" Bekalta \",\" Teboulba \",\" Ksar Helal \",\" Ksibet Medyouni \",\" Sayada Lamta Bouhjar\"],\n        \"Nbre\": \"13\",\n        \"Gouvernorat\": \"MONASTIR\"\n    },\n    {\n        \"delegation\":[ \"Mahdia \",\" Boumerdes \",\" Ouled Chamekh \",\" Chorbane \",\" Hbira \",\" Souassi \",\" Eljem \",\" Chebba \",\" Malloulech \",\" Sidi Alouane \",\" Ksour Essef\"],\n        \"Nbre\": \"11\",\n        \"Gouvernorat\": \"MAHDIA\"\n    },\n    {\n        \"delegation\":[ \"Sfax Ville \",\" Sfax Ouest \",\" Sakiet Ezzit \",\" Sakiet Eddaier \",\" Sfax sud \",\" Tina \",\" Agareb \",\" Jebeniana \",\"El Amra \",\" El Hencha \",\"Menzel chaker \",\" Ghraiba \",\" Bir Ali Ben Khelifa \",\" Sekhira \",\" Mahrès \",\" Kerkennah\"],\n        \"Nbre\": \"16\",\n        \"Gouvernorat\": \"SFAX\"\n    },\n    {\n        \"delegation\":[ \"Béja nord \",\" Béja sud \",\" Amdoun \",\" Nefza \",\" Teboursouk \",\" Tibar \",\" Testour \",\" Goubellat \",\" Mejez El Bab\"],\n        \"Nbre\": \"9\",\n        \"Gouvernorat\": \"BÉJA\"\n    },\n    {\n        \"delegation\":[ \"Jendouba \",\" Jendouba Nord \",\" Boussalem \",\" Tabarka \",\" Ain Drahem \",\" Fernana \",\" Ghardimaou \",\" Oued Mliz \",\" Balta Bouaouene\"],\n        \"Nbre\": \"9\",\n        \"Gouvernorat\": \"JENDOUBA\"\n    },\n    {\n        \"delegation\":[ \"Kef Ouest \",\" Kef Est \",\" Nebeur \",\" Sakiet Sidi Youssef \",\" Tejerouine \",\" Kalâat sinane \",\" Kalâa El khasba \",\" Jerissa \",\" Gsour \",\" Dahmani \",\" Le Sers\"],\n        \"Nbre\": \"11\",\n        \"Gouvernorat\": \"KEF\"\n    },\n    {\n        \"delegation\":[ \"Siliana nord \",\" Siliana sud \",\" Bouarada \",\"Gâafour \",\" El Aroussa \",\" Le Krib \",\" Bourouis \",\" Makther \",\" Rouhia \",\" Kesra \",\" Bargou\"],\n        \"Nbre\": \"11\",\n        \"Gouvernorat\": \"SILIANA\"\n    },\n    {\n        \"delegation\":[ \"Kairouan Nord \",\"Kairouan Sud \",\" Chebika \",\" Sebikha \",\" Oueslatia \",\" Haffouz \",\" El Ala \",\" Hajeb El Ayoun \",\" Nasrallah \",\" Cherarda \",\" Bouhajla\"],\n        \"Nbre\": \"11\",\n        \"Gouvernorat\": \"KAIROUAN\"\n    },\n    {\n        \"delegation\":[ \"Sidi Bouzid Ouest \",\" Sidi Bouzid Est \",\" Jelma \",\" Sabbalet Ouled Askar \",\" Bir Hfay \",\" Sidi Ali Benôun - Menzel Bouzayane \",\" Meknassi \",\" Souk Jedid \",\" Mezouna \",\" Regueb \",\" Ouled Haffouz\"],\n        \"Nbre\": \"12\",\n        \"Gouvernorat\": \"SIDI BOUZID\"\n    },\n    {\n        \"delegation\":[ \"Kasserine Nord \",\" Kasserine Sud \",\" Azzouhour \",\" Hassi ferid \",\" Sbitla \",\" Sbiba \",\" Jedliane \",\" El Ayoun \",\" Tela \",\" Hidra \",\" Foussana \",\" Feriana \",\" Mejel Bel Abbes\"],\n        \"Nbre\": \"13\",\n        \"Gouvernorat\": \"KASSERINE\"\n    },\n    {\n        \"delegation\":[ \"Gabès ville \",\" Gabès ouest \",\" Gabès sud \",\" Ghannouch \",\" Metouia \",\" Menzel habib \",\" Hamma \",\" Matmata \",\" Matmata nouvelle \",\" Mareth\"],\n        \"Nbre\": \"10\",\n        \"Gouvernorat\": \"GABÈS\"\n    },\n    {\n        \"delegation\":[ \"Mednine Nord \",\" Mednine Sud \",\" Béni khedach \",\" Ben Guerdene \",\" Zazis \",\" Jerba Houmet Souk \",\" Jerba Midoun \",\" Jerba Ajim \",\" Sidi Makhlouf\"],\n        \"Nbre\": \"9\",\n        \"Gouvernorat\": \"MEDENINE\"\n    },\n    {\n        \"delegation\":[ \"Gafsa Nord \",\" Sidi Aich \",\" El Ksar \",\" Gafsa Sud \",\" Moulares \",\" Redyef \",\" Métlaoui \",\" El Mdhilla \",\" El Guettar \",\" Belkhir \",\" Sned\"],\n        \"Nbre\": \"11\",\n        \"Gouvernorat\": \"GAFSA\"\n    },\n    {\n        \"delegation\":[ \"Tozeur \",\" Degueche \",\" Tameghza \",\" Nefta \",\" Hezoua\"],\n        \"Nbre\": \"5\",\n        \"Gouvernorat\": \"TOUZER\"\n    },\n    {\n        \"delegation\":[ \"Tataouine Nord \",\" Tataouine Sud \",\" Smar \",\" Bir Lahmer \",\" Ghomrassen \",\" Dhehiba \",\" Remada\"],\n        \"Nbre\": \"7\",\n        \"Gouvernorat\": \"TATAOUINE\"\n    },\n    {\n        \"delegation\":[ \"Kébili Sud \",\" Kébili Nord \",\" Souk El Ahad \",\" Douz nord \",\" Douz sud \",\" El Faouar\"],\n        \"Nbre\": \"6\",\n        \"Gouvernorat\": \"KÉBILI\"\n    }\n]\nexport default Address;","\nimport React,{ useState,useEffect } from 'react';\nimport {Alert } from 'reactstrap'\nexport default  function AlertDismissibleExample(props) {\n    const [show, setShow] = useState(props.showit);\n    const onDismiss = () => setShow(false);\n    useEffect( () => {\n      console.log(\"show message Modal value:\",show);\n  }, [show]);  \n    // if (show) {\n    //   return (\n    //     <Alert variant=\"danger\" onClose={() => setShow(false)} dismissible>\n    //       {/* <Alert.Heading>Oh snap! You got an error!</Alert.Heading> */}\n    //       {/* <Alert.Heading>{props.message}</Alert.Heading> */}\n    //       <p>\n    //        {props.message}\n    //       </p>\n    //     </Alert>\n    //   );\n    // }\n    // return <Button onClick={() => setShow(true)}>Show Alert</Button>;\n    return (\n      <Alert color={props.design} isOpen={show} toggle={onDismiss}>\n        <p>\n           {props.message}\n        </p>\n      </Alert>\n    );\n  }","import React, { useEffect, useState } from \"react\";\nimport {\n    Row,\n    Col,\n    Card,\n    Button,\n    InputGroup,\n    FormControl,\n} from \"react-bootstrap\";\n\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport axios from \"axios\";\n\nimport Aux from \"../../hoc/_Aux\";\nimport CustomInput from \"../../Components/CustomInput\";\n\nimport InputStatus from \"../../Components/InputStatus\"\nimport Address from \"../../Address/Gouvernerat\"\n//import MessageModal from \"../../Components/Alert/Alert\";\n\nvar urlbackend = require(\"../../env/env\")();\n\n\nconst Modifiercolis = (props) => {\n    const [Zones, setZones] = useState([])\n    const [city, setcity] = useState([])\n    const [gouvernorat, setgouvernorat] = useState('')\n    // const [showMessageParams, setShowMessageParams] = useState({\n    //     display: false,\n    //     type: \"success\",\n    //     message: null\n    // })\n    useEffect(() => {\n\n\n\n    })\n\n\n\n\n    const choosedelegeation = (value) => {\n        setgouvernorat(value)\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Access-Control-Allow-Headers\": \"x-access-token\",\n                \"x-access-token\": localStorage.getItem('token'),\n                'Authorization': 'Bearer ' + localStorage.getItem('token'),\n            },\n        };\n\n        axios\n            .get(urlbackend + \"/zone\", config)\n            .then((response) => {\n                console.log(\"this respon list\", response.data);\n                setZones(response.data.data.filter(e => e.gouvernorat === value))\n            })\n            .catch((e) => {\n                console.log(e);\n            });\n    }\n\n\n\n\n    return (\n\n\n        <Aux>\n            <Row>\n                {/*             {showMessageParams.display && <MessageModal message={showMessageParams.message} design={showMessageParams.type} showit={showMessageParams.display} />}\n */}\n                <Col>\n                    <Card>\n                        <Card.Header>\n                            <Card.Title as=\"h5\">ModifierColis {props.colisModifier.index_colis}  </Card.Title>\n                        </Card.Header>\n                        <Card.Body>\n\n                            <Formik\n                                initialValues={{\n                                    name_complete: props.colisModifier.name_complete,\n                                    phone_number: props.colisModifier.phone_number,\n                                    code_postal: \"\",\n                                    email: \"\",\n                                    address:props.colisModifier.address ,\n                                    price: props.colisModifier.price,\n                                    type_envoi: props.colisModifier.type_envoi,\n                                    designation:props.colisModifier.designation,\n                                    lot:props.colisModifier.lot ,\n                                    gouvernorat: props.colisModifier.gouvernorat,\n                                    payment_status: props.colisModifier.payment_status,\n                                    payment_mode:  props.colisModifier.payment_mode,\n                                    city: props.colisModifier.city,\n\n                                }}\n                                validationSchema={\n                                    Yup.object().shape({\n                                        name_complete: Yup.string().max(255).required('Nom is required'),\n                                        phone_number: Yup.string().max(8).min(8).required('Nom is required'),\n                                        gouvernorat: Yup.string().max(255).required('Nom is required'),\n                                        //  email: Yup.string().max(255).required('Nom is required'),\n                                        address: Yup.string().max(255).required('Nom is required'),\n                                        price: Yup.string().max(255).required('Nom is required'),\n                                        designation: Yup.string().max(255).required('Nom is required'),\n\n\n                                    })\n                                }\n                                onSubmit={(values, { resetForm }) => {\n\n                                    console.log(values)\n                                    console.log(city)\n                                    console.log(gouvernorat)\n\n                                    const config = {\n                                        headers: {\n                                            'Content-Type': 'application/json',\n                                            'Access-Control-Allow-Headers': 'Authorization',\n                                            \"x-access-token\": localStorage.getItem('token'),\n                                            'Authorization': 'Bearer ' + localStorage.getItem('token'),\n                                        },\n                                    };\n                                    axios.put(urlbackend + \"/colis/update/\"+props.colisModifier.id, values, config)\n                                        .then(response => {\n                                            console.log(response.data)\n                                            alert(\"Modifier success\")\n                                            //  window.location.href = \"/datta-able/react/default/v3/Modifiercolis\"\n                                            resetForm()\n                                            props.reloaddata()\n\n                                        })\n                                        .catch(e => {\n                                            console.log(e)\n                                        })\n\n                                    // axios.post(urlpostuser + '/gestionnaire/add', {\n                                    //   lastname: values.lastName,\n                                    //   firstname: values.firstName,\n                                    //   addresse: values.addresse,\n                                    //   Phone: values.Phone,\n                                    //   email: values.email,\n                                    //   password: values.password,\n                                    //   typeroles:exercicest\n\n                                    // }).then((response) => {\n\n                                    //  if(response.data.code ===\"success\"){\n                                    //   alert(\"gestionnaire enrigstré\");\n                                    //   reloadthi()\n                                    //   handleClose()\n\n                                    //  }else {\n                                    //    alert(\"Adresse mail existe déjà\")\n                                    //  }\n\n\n\n                                    // }).catch(()=>{\n                                    //   alert(\"Adresse mail existe déjà\")\n\n                                    // })\n\n\n\n\n\n                                }}\n                            >\n                                {({\n                                    errors,\n                                    handleBlur,\n                                    handleChange,\n                                    handleSubmit,\n                                    isSubmitting,\n                                    touched,\n                                    values\n                                }) => (\n                                    <form onSubmit={handleSubmit}>\n\n                                        <Card>\n\n                                            <Aux>\n\n                                                <Row>\n                                                    <Col md={6}>\n                                                        <CustomInput\n                                                            name=\"name_complete\"\n                                                            onChange={handleChange}\n                                                            onBlur={handleBlur}\n                                                            value={values.name_complete}\n                                                            errors={errors.name_complete}\n                                                            touched={touched.name_complete}\n                                                            label=\"Nom et prénom\"\n                                                        />\n\n\n                                                        <CustomInput\n                                                            name=\"phone_number\"\n                                                            label=\"Tél.\"\n                                                            type=\"number\"\n                                                            onChange={handleChange}\n                                                            onBlur={handleBlur}\n                                                            value={values.phone_number}\n                                                            errors={errors.phone_number}\n                                                            touched={touched.phone_number}\n                                                        />\n\n                                                        {/*      <CustomInput\n                                                            name=\"code_postal\"\n                                                            label=\"Code postal\"\n                                                            onChange={handleChange}\n                                                            onBlur={handleBlur}\n                                                            value={values.code_postal}\n                                                            errors={errors.code_postal}\n                                                            touched={touched.code_postal}\n                                                            type=\"code_postal\"\n                                                        /> */}\n\n\n                                                        <label htmlFor=\"basic-url\">GOUVERNORAT <InputStatus errors={errors.gouvernorat} touched={touched.gouvernorat} /> </label>\n\n                                                        <InputGroup className=\"mb-3\">\n                                                            <FormControl\n                                                                as=\"select\"\n                                                                id=\"gouvernorat\"\n                                                                custom\n                                                                onChange={(e) => {\n                                                                    handleChange(e);\n                                                                    choosedelegeation(e.target.value);\n\n                                                                }\n                                                                }\n                                                                onBlur={handleBlur}\n                                                                value={values.gouvernorat}\n                                                                errors={errors.gouvernorat}\n                                                            >\n                                                                <option>GOUVERNORAT</option>\n\n                                                                {Address.map((zone, index) => (\n                                                                    <option onClick={(e) => choosedelegeation(e.target.value)} key={zone.Gouvernorat} value={zone.Gouvernorat}>\n                                                                        {zone.Gouvernorat}\n                                                                    </option>\n                                                                ))}\n                                                            </FormControl>\n                                                        </InputGroup>\n                                                        {/* <label htmlFor=\"basic-url\">Zone (Ville) <InputStatus errors={errors.zone} touched={touched.zone} /> </label>\n\n                                                        <InputGroup className=\"mb-3\">\n                                                            <FormControl\n                                                                as=\"select\"\n                                                                id=\"zone\"\n                                                                custom\n                                                                onChange={(e) => {\n                                                                    handleChange(e);\n                                                                    setcity(e.target.value);\n\n                                                                }\n                                                                }\n                                                                onBlur={handleBlur}\n                                                                value={values.zone}\n                                                                errors={errors.zone}\n                                                            >\n                                                                <option>zone</option>\n\n                                                                {Zones.map((zone, index) => (\n                                                                    <option onClick={(e) => setcity(Zones[index].city)} key={zone.city} value={Zones[index].city}>\n                                                                        {zone.city}\n                                                                    </option>\n                                                                ))}\n                                                            </FormControl>\n                                                        </InputGroup> */}\n                                                        {/* <CustomInput\n                                                            name=\"ville address\"\n                                                            label=\"Délegation ou ville\"\n                                                            onChange={handleChange}\n                                                            onBlur={handleBlur}\n                                                            value={values.city}\n                                                            errors={errors.city}\n                                                            touched={touched.city}\n                                                        /> */}\n\n                                                        <CustomInput\n                                                            name=\"address\"\n                                                            label=\"Addresse\"\n                                                            onChange={handleChange}\n                                                            onBlur={handleBlur}\n                                                            value={values.address}\n                                                            errors={errors.address}\n                                                            touched={touched.address}\n                                                        />\n\n\n                                                    </Col>\n                                                    <Col md={6}>\n                                                        {/*     <CustomInput\n                                                            name=\"email\"\n                                                            label=\"E-mail\"\n                                                            onChange={handleChange}\n                                                            onBlur={handleBlur}\n                                                            value={values.email}\n                                                            errors={errors.email}\n                                                            touched={touched.email}\n                                                        /> */}\n                                                        {/*   <CustomInput\n                                            name=\"payement\"\n                                            label=\"payement\"\n                                            onChange={handleChange}\n                                            onBlur={handleBlur}\n                                            value={values.payement}\n                                            touched={touched.payement}\n                                        />  */}\n                                                        {/* <label htmlFor=\"basic-url\">Paiement</label>\n\n                                                        <InputGroup className=\"mb-3\">\n                                                            <FormControl\n                                                                as=\"select\"\n                                                                id=\"payment_status\"\n                                                                custom\n\n                                                                onChange={handleChange}\n                                                                onBlur={handleBlur}\n                                                                value={values.payment_status}\n                                                            >\n                                                                <option>choisir le statut de paiement</option>\n\n                                                                {[{ statepay: \"colis Payé\", valuep: \"0\" }, { statepay: \"non Payé\", valuep: \"1\" }].map((zone, index) => (\n                                                                    <option key={zone.statepay} value={zone.valuep}>\n                                                                        {zone.statepay}\n                                                                    </option>\n                                                                ))}\n                                                            </FormControl>\n                                                        </InputGroup> */}\n                                                        {values.payment_status ===\"1\" && <CustomInput\n                                                            name=\"price\"\n                                                            label=\"Prix\"\n                                                            type=\"number\"\n                                                            onChange={handleChange}\n                                                            onBlur={handleBlur}\n                                                            value={values.price}\n                                                            touched={touched.price}\n                                                            errors={errors.price}\n                                                            readOnly\n                                                        />\n                                                        }\n\n                                                        <label htmlFor=\"basic-url\">Mode de paiement</label>\n\n                                                        <InputGroup className=\"mb-3\">\n                                                            <FormControl\n                                                                as=\"select\"\n                                                                id=\"payment_mode\"\n                                                                custom\n                                                                onChange={handleChange}\n                                                                onBlur={handleBlur}\n                                                                value={values.payment_mode}\n                                                            >\n                                                                <option>choisir le mode de paiement</option>\n\n                                                                {[\"espèces\", \"chèque\", \"espèces ou chèque\"].map((zone, index) => (\n                                                                    <option key={zone} value={zone}>\n                                                                        {zone}\n                                                                    </option>\n                                                                ))}\n                                                            </FormControl>\n                                                        </InputGroup>\n                                                        <label htmlFor=\"basic-url\">type_envoi <InputStatus errors={errors.type_envoi} touched={touched.type_envoi} /></label>\n\n                                                        <InputGroup className=\"mb-3\">\n                                                            <FormControl\n                                                                as=\"select\"\n                                                                id=\"type_envoi\"\n                                                                custom\n                                                                onChange={handleChange}\n                                                                onBlur={handleBlur}\n                                                                value={values.Formateur}\n                                                            >\n                                                                <option>type envoi</option>\n\n                                                                {[\"LIVRAISON A DOMICILE\", \"ECHANGE\", \"RECUPERATION\"].map((type_envoi, index) => (\n                                                                    <option key={type_envoi} value={type_envoi}>\n                                                                        {type_envoi}\n                                                                    </option>\n                                                                ))}\n                                                            </FormControl>\n                                                        </InputGroup>\n                                                        <CustomInput\n                                                            name=\"designation\"\n                                                            label=\"designation\"\n                                                            onChange={handleChange}\n                                                            onBlur={handleBlur}\n                                                            value={values.designation}\n                                                            touched={touched.designation}\n                                                            errors={errors.designation}\n\n                                                        />\n\n                                                        <CustomInput\n                                                            name=\"lot\"\n                                                            label=\"lot\"\n                                                            type=\"number\"\n                                                            onChange={handleChange}\n                                                            onBlur={handleBlur}\n                                                            value={values.lot}\n                                                            touched={touched.lot}\n                                                            errors={errors.lot}\n\n                                                        />\n\n\n\n\n\n                                                    </Col>\n                                                    <Col>\n                                                        <Button\n\n                                                            type=\"submit\"\n                                                            color=\"info\"\n                                                            variant=\"info\"\n                                                        >\n                                                            Confirmer\n                                                        </Button>\n                                                    </Col>\n\n                                                </Row>\n                                            </Aux>\n\n                                        </Card>\n\n                                    </form>\n\n                                )}\n\n                            </Formik>\n                        </Card.Body>\n                    </Card>\n                </Col>\n\n            </Row>\n        </Aux>\n\n    );\n};\n\n\nexport default Modifiercolis;\n\n","\nimport React, { useEffect, useState } from 'react';\nimport {\n\n    Button,\n    Modal,\n\n} from \"react-bootstrap\";\nimport \"./style.css\";\nimport Modifiercolis from './Modification.colis'\n\nfunction ModalModifierColis(props) {\n    const [show, setShow] = useState(false);\n    //const [pickupsUpdate] = useState(props.pickup)\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n    useEffect(() => {\n    }, [])\n\n    return (\n        <>\n            <Button style={{background:\"#a958f4\"}}\n                onClick={handleShow}> <span className=\"fa fa-pencil\"></span></Button>\n\n\n            <Modal dialogClassName=\"my-modal\" show={show} onHide={handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title> </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    \n              <Modifiercolis  colisModifier ={ props.colisModifier} reloaddata={()=>{props.reloaddata();handleClose()}} /> \n         \n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        Close\n                    </Button>\n                    {/* <Button variant=\"primary\" onClick={handleClose}>\n            Save Changes\n            </Button> */}\n                </Modal.Footer>\n            </Modal>\n        </>\n    );\n}\n\nexport default ModalModifierColis","import React, { useState } from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, Form } from 'reactstrap';\n\nimport { QRCode } from \"react-qr-svg\";\nimport { ModalFooter } from 'react-bootstrap';\nimport { FaCloudDownloadAlt, FaPrint } from 'react-icons/fa';\nconst saveSvgAsPng = require('save-svg-as-png')\nconst imageOptions = {\n  scale: 5,\n  encoderOptions: 1,\n  backgroundColor: 'white',\n}\n\n/**\n * Class Create Qr code\n * @param imageOptions {Object} props of QR code background scale ....can be modified with custmer needs\n * @param props {ReactHooks} props of class\n * @param  FaPrint {package} print QR code\n * @param  FaCloudDownloadAlt {package} download image QR code\n \n */\n\n\nconst QRcode = (props) => {\n  const {\n    buttonLabel,\n    className\n  } = props;\n\n\n  const [modal, setModal] = useState(false);\n  const [unmountOnClose] = useState(true);\n\n  const toggle = () => setModal(!modal);\n  const handleClick = () => {\n    saveSvgAsPng.saveSvgAsPng(document.getElementById('svg-chart'), 'shapes.png', imageOptions);\n  };\n\n  return (\n    <div>\n      <Form inline onSubmit={(e) => e.preventDefault()}>\n\n\n        <Button color=\"info\" onClick={toggle}>{buttonLabel}<span className=\"fa fa-qrcode\"></span></Button>\n      </Form>\n      <Modal aria-labelledby=\"contained-modal-title-vcenter\"\n        centered isOpen={modal} toggle={toggle} className={className} unmountOnClose={unmountOnClose} >\n        <ModalHeader toggle={toggle}>   <div style={{ color: \"black\", fontWeight: 'bold', textAlign: \"center\" }}>  <span >  show qrcode </span> </div> </ModalHeader>\n        <ModalBody size=\"lg\">\n          <div><p style={{ color: \"black\", fontWeight: 'bold', textAlign: \"center\" }}>  {props.url}</p></div>\n          <p style={{ color: \"black\", fontWeight: 'bold', textAlign: \"center\" }}>\n            <QRCode\n              id={\"svg-chart\"}\n              bgColor=\"#FFFFFF\"\n              fgColor=\"#000000\"\n              level=\"Q\"\n              style={{ width: 256 }}\n              value={props.url}\n            /></p>\n\n\n\n\n        </ModalBody>\n        <ModalFooter>\n\n          <Button onClick={handleClick}>Download Image <FaCloudDownloadAlt /></Button>\n\n          <Button onClick={() => window.print()}>PRINT <FaPrint /> </Button>\n\n\n        </ModalFooter>\n      </Modal>\n    </div>\n  );\n}\n\n\nexport default QRcode;","\n\nimport React, { useEffect, useState } from 'react';\nimport { Modal, Button } from 'react-bootstrap';\n//import { FaCloudDownloadAlt } from 'react-icons/fa';\n//import { jsPDF } from \"jspdf\";\nimport jwtDecode from \"jwt-decode\";\n//import axios from \"axios\"\n//import html2canvas from 'html2canvas';\nimport PrintPage from './T'\n// const saveSvgAsPng = require('save-svg-as-png')\n// const imageOptions = {\n//   scale: 5,\n//   encoderOptions: 1,\n//   backgroundColor: 'white',\n// }\n//var urlbackend = require(\"../../env/env\")();\n\nfunction TemplatePrint(props) {\n  const [show, setShow] = useState(false);\n  const [provider, setprovider] = useState({});\n\n  useEffect(()=>{\n\n    // const config = {\n    //   headers: {\n    //     'Content-Type': 'application/json',\n    //     'Access-Control-Allow-Headers': 'Authorization',\n    //     \"x-access-token\": localStorage.getItem('token'),\n    //     'Authorization': 'Bearer ' + localStorage.getItem('token'),\n    //   },\n    // };\n    console.log(jwtDecode(localStorage.getItem('token')))\n\n    setprovider(props.providerindex)\n    \n \n  },[])\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n  // const printemplate = () => {\n  //   //  saveSvgAsPng.saveSvgAsPng(document.getElementById('svg-chart'), 'shapes.png', imageOptions);\n  //   const input = document.getElementById('svg-chart');\n  //   html2canvas(input)\n  //     .then((canvas) => {\n  //       const imgData = canvas.toDataURL('image/png');\n  //       const pdf = new jsPDF();\n  //       pdf.addImage(imgData, 'JPEG', 0, 0);\n  //       // pdf.output('dataurlnewwindow');\n  //       pdf.save(\"download.pdf\");\n  //     })\n  //     ;\n  // };\n\n  return (\n    <>\n      <Button variant=\"success\"\n        onClick={handleShow}> <span className=\"fa fa-print\"></span></Button>\n\n\n      <Modal size=\"xl\" show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title> Faster  </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n        <div className=\"center\">\n          <PrintPage Template={props.Template} providerinfo={provider}></PrintPage>\n          </div>\n        {/*   <div id={\"svg-chart\"}  class=\"center\" style={{\n             textAlign: \"center\", backgroundColor: '#FFFFFF',\n            width: '210mm',\n            marginLeft: 'auto',\n            marginRight: 'auto'\n          }}>\n           \n            <h3> Fournisseur</h3>\n            <table className=\"table  table-hover text-nowrap mb-0\">\n              <thead className=\"table thead-light mb-0\">\n                <tr>\n                  <th className=\"text-center\">Fournisseur</th>\n                  <th className=\"text-center\">nom Fournisseur</th>\n                  <th className=\"text-center\">Fournisseur (Tél.)</th>\n                  <th className=\"text-center\">Fournisseur (addresse.)</th>\n                  <th className=\"text-center\"></th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr>\n                  <th className=\"text-center\"><h4>{props.Template.colis.username}</h4></th>\n                  <th className=\"text-center\"><h4>{props.Template.colis.firstname} : {props.Template.colis.lastname}</h4></th>\n                  <th className=\"text-center\"><h4>{props.Template.colis.phone_number}</h4></th>\n                  <th className=\"text-center\"><h4>{props.Template.colis.codePostal}:{props.Template.colis.address}</h4></th>\n                </tr>\n              </tbody>\n\n            </table>\n            <p>\n            <QRCode\n              bgColor=\"#FFFFFF\"\n              fgColor=\"#000000\"\n              level=\"H\"\n              style={{ width: 700, height:350 }}\n              value={props.Template.colis.id}\n            />\n            </p>\n            <h3> Client</h3>\n            <table className=\"table  table-hover text-nowrap mb-0\">\n              <thead className=\"table thead-light mb-0\">\n                <tr>\n                  <th className=\"text-center\">name</th>\n\n                  <th className=\"text-center\">Fournisseur (Tél.)</th>\n                  <th className=\"text-center\">Fournisseur (addresse.)</th>\n                  <th className=\"text-center\">prix</th>\n                  <th className=\"text-center\"></th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr>\n                  <th className=\"text-center\"><h4>{props.Template.colis.name_complete}</h4></th>\n                  <th className=\"text-center\"><h4>{props.Template.colis.phone_number}</h4></th>\n                  <th className=\"text-center\"><h4>{props.Template.colis.codePostal}:{props.Template.colis.address}</h4></th>\n                  <th className=\"text-center\"><h4>{props.Template.colis.price} (TND)</h4></th>\n\n\n                </tr>\n              </tbody>\n\n            </table>\n          </div>\n */}\n        </Modal.Body>\n        <Modal.Footer>\n         {/*  <Button onClick={printemplate}>Télécharger <FaCloudDownloadAlt /></Button>  */}\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Fermer\n            </Button>\n          {/* <Button variant=\"primary\" onClick={handleClose}>\n            Save Changes\n            </Button> */}\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n}\n\nexport default TemplatePrint"],"names":["AlertDismissibleExample","props","useState","showit","show","setShow","useEffect","console","log","color","design","isOpen","toggle","message","urlbackend","require","setZones","city","gouvernorat","setgouvernorat","choosedelegeation","value","config","headers","localStorage","getItem","axios","then","response","data","filter","e","catch","Row","Col","Card","as","colisModifier","index_colis","initialValues","name_complete","phone_number","code_postal","email","address","price","type_envoi","designation","lot","payment_status","payment_mode","validationSchema","Yup","shape","max","required","min","onSubmit","values","resetForm","id","alert","reloaddata","errors","handleBlur","handleChange","handleSubmit","touched","isSubmitting","md","CustomInput","name","onChange","onBlur","label","type","htmlFor","InputStatus","InputGroup","className","FormControl","custom","target","Address","zone","index","onClick","Gouvernorat","readOnly","map","Formateur","Button","variant","handleClose","style","background","Modal","dialogClassName","onHide","closeButton","saveSvgAsPng","imageOptions","scale","encoderOptions","backgroundColor","buttonLabel","modal","setModal","unmountOnClose","inline","preventDefault","centered","fontWeight","textAlign","size","url","QRCode","bgColor","fgColor","level","width","document","getElementById","window","print","provider","setprovider","jwtDecode","providerindex","Template","providerinfo"],"sourceRoot":""}