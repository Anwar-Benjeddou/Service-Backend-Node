{"version":3,"file":"static/js/9989.10d76384.chunk.js","mappings":"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","sources":["Routes/Admin/RetourManegmentDetail/RetourToProvider.js","../node_modules/react-bootstrap/esm/DropdownButton.js"],"sourcesContent":["// import React from \"react\";\n\n// //import { PageTitle } from '../../layout-components';\n// import { IconButton, Box, Card, CardContent } from \"@material-ui/core\";\n// import { InputGroup, FormControl } from \"react-bootstrap\";\n// import axios from \"axios\";\n// import { Row, Col, Tabs, Tab } from \"react-bootstrap\";\n// import QRcode from '../../QRcode/QRcode'\n\n// import Aux from \"../../../hoc/_Aux\";\n// var urlbackend = require(\"../../../env/env\")();\n\n// class RetourToProvider extends React.Component {\n//     constructor(props) {\n//         super(props);\n\n//         this.state = {\n//             pendingPackages: [],\n//             ongoingPackages: [],\n//             enlevePackages: [],\n\n//             drivers: [],\n//             driver: \"\",\n//         };\n//     }\n//     componentDidMount() {\n//         const config = {\n//             headers: {\n//                 'Content-Type': 'application/json',\n//                 'Access-Control-Allow-Headers': 'Authorization',\n//                 \"x-access-token\": localStorage.getItem('token'),\n//                 'Authorization': 'Bearer ' + localStorage.getItem('token'),\n//             },\n//         };\n\n//         /*    axios.get(\n//               urlbackend + \"/package/pending?current_page=1&per_page=500\",\n//               config\n//           ).then((response)=>{\n//               this.setState({ pendingPackages: response.data.data.data });\n//               console.log(response.data)\n//           })\n//           axios.get(urlbackend + \"/driver\", config).then((response)=>{\n//               this.setState({ drivers: response.data.data });\n\n//           }) */\n//         var getpendingPackages = axios.get(\n//             urlbackend + \"/delivery/retour/list?current_page=1&per_page=500\",\n//             config\n//         )\n\n//         var getdrivers = axios.get(urlbackend + \"/driver\", config);\n\n//         axios\n//             .all([getpendingPackages, getdrivers])\n//             .then(\n//                 axios.spread((...response) => {\n//                     this.setState({ pendingPackages: response[0].data.data.data });\n//                     this.setState({ drivers: response[1].data.data });\n//                     console.log(response[0].data.data.data)\n//                     /*     this.setState({ pendingPackages: response[0].data.data.data });\n//                         this.setState({ ongoingPackages: response[1].data.content });\n//                         this.setState({ enlevePackages: response[2].data.content });\n\n//                         this.setState({ drivers: response[3].data.content }); */\n//                 })\n//             )\n//             .catch((errors) => {\n//                 // react on errors.\n//                 console.error(errors);\n//             });\n\n//     }\n//     savedriver(iddriver, idpacket) {\n//         //\n\n//         const config = {\n//             headers: {\n//                 'Content-Type': 'application/json',\n//                 'Access-Control-Allow-Headers': 'Authorization',\n//                 \"x-access-token\": localStorage.getItem('token'),\n//                 'Authorization': 'Bearer ' + localStorage.getItem('token'),\n//             },\n//         };\n//         axios.put(\n//             urlbackend + \"/colis/to_retour\",\n//             { driver: iddriver, colis: [idpacket] },\n//             config\n//         )\n//             .then((response) => {\n//                 alert(\"add Succefull\");\n//                 console.log(\"response.data\", response.data);\n//                 this.componentDidMount();\n//                 //this.reloaddata()\n//                 this.setState({ drivers: [] });\n//             })\n//             .catch((e) => {\n//                 console.log(e);\n//             });\n//     }\n//     reloaddata() {\n//         this.componentDidMount()\n//     }\n\n//     changecolor(valeur) {\n//         switch (valeur) {\n//             case 0:\n//                 return \"#eeeeca\"\n//             case 1:\n//                 return \"#7ce37f\"\n//             case 2:\n//                 return \"#7ce37f\"\n//             case 3:\n//                 return \"#dcadb1\"\n//             default:\n//                 break;\n//         }\n\n//     }\n//     render() {\n//         return (\n//             <Aux>\n\n//                 <Row>\n//                     <Col>\n//                         <button className=\"btn btn-info\" onClick={() => this.reloaddata()} >   Actualiser</button>\n\n\n//                         <hr />\n//                         <Tabs defaultActiveKey=\"home\">\n//                             <Tab eventKey=\"home\" title=\"\">\n//                                 <Card className=\"card-box mb-4\">\n//                                     <div className=\"card-header\">\n//                                         <div className=\"card-header--title\">\n//                                             {/* <b>This table card has custom content</b> */}\n//                                         </div>\n//                                         <Box className=\"card-header--actions\">\n//                                             <IconButton\n//                                                 size=\"small\"\n//                                                 color=\"primary\"\n//                                                 className=\"text-primary\"\n//                                                 title=\"View details\"\n//                                             ></IconButton>\n//                                         </Box>\n//                                     </div>\n//                                     <CardContent className=\"p-0\">\n//                                         <div className=\"table-responsive\">\n//                                             <table className=\"table  table-hover text-nowrap mb-0\">\n//                                                 <thead className=\"table thead-light mb-0\">\n//                                                     <tr>\n//                                                     <th>Numéro colis</th>\n//                                                         <th>Fournisseur</th>\n//                                                         <th className=\"text-center\">Client</th>\n//                                                         <th className=\"text-center\">addresse de client</th>\n//                                                         <th className=\"text-center\">Chauffeur</th>\n//                                                         <th className=\"text-center\">Date Retour</th>\n//                                                         <th className=\"text-center\">Actions</th>\n//                                                         <th className=\"text-center\"></th>\n//                                                     </tr>\n//                                                 </thead>\n//                                                 <tbody>\n//                                                     {this.state.pendingPackages.map((pickup, index) => (\n//                                                         <tr key={index}>\n//                                                                <td>\n//                                                                 <div className=\"d-flex align-items-center\">\n//                                                                     <a\n//                                                                         href=\"#/\"\n//                                                                         onClick={(e) => e.preventDefault()}\n//                                                                         className=\"font-weight-bold text-black\"\n//                                                                         title=\"...\"\n//                                                                     >\n\n\n//                                                                         {pickup.check_replanification === 1 ? <i className=\"fa fa-circle text-c-red f-10 m-r-15\" /> : <i className=\"fa fa-circle text-c-green f-10 m-r-15\" />}\n//                                                                         {pickup.colis.index_colis}\n//                                                                     </a>\n\n//                                                                 </div>\n//                                                             </td>\n//                                                             <td>\n//                                                                 <div className=\"d-flex align-items-center\">\n//                                                                     <a\n//                                                                         href=\"#/\"\n//                                                                         onClick={(e) => e.preventDefault()}\n//                                                                         className=\"font-weight-bold text-black\"\n//                                                                         title=\"...\"\n//                                                                     >\n\n\n//                                                                         {pickup.colis.provider.username} :{\" \"}\n//                                                                         {pickup.colis.provider.phone_number}\n//                                                                     </a>\n\n//                                                                 </div>\n//                                                             </td>\n//                                                             <td className=\"text-center\">\n//                                                                 <div className=\"h-auto \">\n//                                                                     {pickup.colis.name_complete} : {pickup.colis.phone_number}\n//                                                                     <span >\n\n//                                                                     </span>\n//                                                                 </div>\n//                                                             </td>\n//                                                             <td className=\"text-center\">\n//                                                                 <div className=\"h-auto \">\n//                                                                     {pickup.colis.code_postal} :{\" \"}\n//                                                                     {pickup.colis.address}\n//                                                                 </div>\n//                                                             </td>\n//                                                             <td className=\"text-center\">\n\n//                                                                 {pickup.driver\n//                                                                     ? pickup.driver.username\n//                                                                     : <div style={{ background: \"#e863da\" }}> \"not approved\" </div>}\n\n//                                                             </td>\n//                                                             <td className=\"text-center\">\n//                                                                 <div className=\"h-auto \">\n//                                                                     {pickup.colis.created_at}\n//                                                                 </div>\n//                                                             </td>\n\n//                                                             <td>\n//                                                                 <InputGroup className=\"mb-3\">\n//                                                                     <FormControl\n//                                                                         as=\"select\"\n//                                                                         id=\"{this.state.driver}\"\n//                                                                         onChange={(value) =>\n//                                                                             this.savedriver(\n//                                                                                 value.target.value,\n//                                                                                 pickup.colis.id\n//                                                                             )\n//                                                                         }\n//                                                                         custom\n//                                                                     >\n//                                                                         <option>Sélectionner un chauffeur</option>\n\n//                                                                         {this.state.drivers.map((driver, index) => (\n//                                                                             <option\n//                                                                                 className=\" badge badge-info\"\n//                                                                                 key={driver.id}\n//                                                                                 value={driver.id}\n//                                                                             >\n//                                                                                 {driver.username}\n//                                                                             </option>\n//                                                                         ))}\n//                                                                     </FormControl>\n//                                                                 </InputGroup>\n//                                                             </td>\n//                                                             <td>\n\n//                                                             <QRcode url={pickup.colis.id} > </QRcode> \n//                                                             </td>\n//                                                             <td>\n//                                                                 {/* <div className=\"h-auto  badge badge-danger\"> \n//                           <button className=\"badge-info\" onClick={()=>this.savedriver()}>savedriver</button>\n\n//                     </div> \n//                         <div className=\" badge badge-danger\">\n//                           delete\n\n//                    </div> */}\n//                                                             </td>\n//                                                             <td className=\"text-center\">\n//                                                                 <Box>\n//                                                                     <IconButton color=\"primary\" size=\"small\">\n//                                                                         {/* <FontAwesomeIcon icon={['fas', 'ellipsis-h']} /> */}\n//                                                                     </IconButton>\n//                                                                 </Box>\n//                                                             </td>\n//                                                         </tr>\n//                                                     ))}\n//                                                 </tbody>\n//                                             </table>\n//                                         </div>\n//                                     </CardContent>\n//                                 </Card>\n//                             </Tab>\n//                         </Tabs>\n//                     </Col>\n//                 </Row>\n//             </Aux>\n//         );\n//     }\n// }\n\n// export default RetourToProvider;\nimport React, { useEffect, useState } from \"react\";\n\n//import { PageTitle } from '../../layout-components';\nimport { IconButton, Box, Card, CardContent } from \"@material-ui/core\";\nimport { InputGroup, FormControl, Button, DropdownButton, Dropdown } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport { Row, Col, Tabs, Tab } from \"react-bootstrap\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport { CSVLink } from \"react-csv\";\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\nimport filterFactory, { textFilter } from 'react-bootstrap-table2-filter';\nimport TemplatePrintAdmin from '../../Template/TemplatePrintAdmin'\nimport QRcode from '../../QRcode/QRcode'\nimport * as FileSaver from 'file-saver';\nimport * as XLSX from 'xlsx';\nimport Aux from \"../../../hoc/_Aux\";\nimport MessageModal from \"./../../../Components/Alert/Alert\";\nimport ModalModifierColis from '../../ModificationColis/Modal.modification.colis'\nimport moment from \"moment\"\nvar urlbackend = require(\"../../../env/env\")();\nconst fileType = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\nconst fileExtension = '.xlsx';\nfunction RetourToProvider() {\n\n\n    const [pendingPackages, setpendingPackages] = useState([])\n    const [showMessageParams, setShowMessageParams] = useState({\n        display: false,\n        type: \"success\",\n        message: null\n    })\n    const [drivers, setdrivers] = useState([])\n    //  const [driver, setdriver] = useState([])\n    //     };\n    // }\n    function priceFormatter(column, colIndex, { sortElement, filterElement }) {\n        return (\n            <div style={{ display: 'flex', flexDirection: 'column' }}>\n                {filterElement}\n                {column.text}\n                {sortElement}<span className=\"fa fa-filter\"></span>\n            </div>\n        );\n    }\n \n    const Impression = (cell, row, rowIndex, formatExtraData) => {\n        return (\n            <div>\n\n                <TemplatePrintAdmin Template={row} providerindex={row.colis}  > </TemplatePrintAdmin>\n\n\n            </div>\n        );\n    };\n    const getdata = () => {\n\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                'Access-Control-Allow-Headers': 'Authorization',\n                \"x-access-token\": localStorage.getItem('token'),\n                'Authorization': 'Bearer ' + localStorage.getItem('token'),\n            },\n        };\n\n        /*    axios.get(\n              urlbackend + \"/package/pending?current_page=1&per_page=500\",\n              config\n          ).then((response)=>{\n              this.setState({ pendingPackages: response.data.data.data });\n              console.log(response.data)\n          })\n          axios.get(urlbackend + \"/driver\", config).then((response)=>{\n              this.setState({ drivers: response.data.data });\n\n          }) */\n        var getpendingPackages = axios.get(\n            urlbackend + \"/delivery/retour/list?current_page=1&per_page=500\",\n            config\n        )\n\n\n        var getdrivers = axios.get(urlbackend + \"/driver\", config);\n        // setpendingPackages([]);\n        // setongoingPackages([]);\n        // setenlevePackages([]);\n        axios\n            .all([getpendingPackages, getdrivers])\n            .then(\n                axios.spread((...response) => {\n\n                    setpendingPackages(response[0].data.data.data);\n\n                    setdrivers(response[1].data.data);\n\n                    /*     this.setState({ pendingPackages: response[0].data.data.data });\n                        this.setState({ ongoingPackages: response[1].data.content });\n                        this.setState({ enlevePackages: response[2].data.content });\n\n                        this.setState({ drivers: response[3].data.content }); */\n                })\n            )\n            .catch((errors) => {\n                // react on errors.\n                console.error(errors);\n            });\n    }\n    useEffect(() => {\n        getdata()\n    }, [])\n    const nextstep = (id) => {\n        setShowMessageParams({\n            display: false,\n            type: \"success\",\n            message: null\n        });\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                'Access-Control-Allow-Headers': 'Authorization',\n                \"x-access-token\": localStorage.getItem('token'),\n                'Authorization': 'Bearer ' + localStorage.getItem('token'),\n            },\n        };\n        axios.put(urlbackend + \"/forcing/pickup/to_done\", { \"colis\": id }, config).then((response) => {\n            setShowMessageParams({\n                display: true,\n                type: \"success\",\n                message: \"Forçage effectué avec succès !\"\n            });\n            getdata()\n\n\n        }).catch(() => {\n            setShowMessageParams({\n                display: true,\n                type: \"danger\",\n                message: \"Une erreur s'est produite lors du forçage !\"\n            });\n            console.log(\"no\")\n        })\n\n    }\n    const nextstepongoing = (id) => {\n        setShowMessageParams({\n            display: false,\n            type: \"success\",\n            message: null\n        });\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                'Access-Control-Allow-Headers': 'Authorization',\n                \"x-access-token\": localStorage.getItem('token'),\n                'Authorization': 'Bearer ' + localStorage.getItem('token'),\n            },\n        };\n        axios.put(urlbackend + \"/forcing/pickup/to_ongoing\", { \"colis\": id }, config).then((response) => {\n            setShowMessageParams({\n                display: true,\n                type: \"success\",\n                message: \"Forçage effectué avec succès !\"\n            });\n            getdata()\n\n\n        }).catch(() => {\n            setShowMessageParams({\n                display: true,\n                type: \"danger\",\n                message: \"Une erreur s'est produite lors du forçage !\"\n            });\n            console.log(\"no\")\n        })\n\n    }\n    const forcageongoing = (cell, row, rowIndex, formatExtraData) => {\n\n\n        return (\n            <Button\n                variant=\"warning\"\n                onClick={() => nextstepongoing(row.colis?.id)}\n            >\n                {\" \"}\n                <span className=\"fa fa-forward\"></span>\n            </Button>\n        );\n    }\n    const forcagedone = (cell, row, rowIndex, formatExtraData) => {\n\n\n        return (\n            <Button\n                variant=\"warning\"\n                onClick={() => nextstep(row.colis?.id)}\n            >\n                {\" \"}\n                <span className=\"fa fa-forward\"></span>\n            </Button>\n        );\n    }\n\n\n\n\n    const flowlink = (cell, row, rowIndex, formatExtraData) => {\n        //var k = drivers\n        return (\n            <InputGroup >\n                <FormControl\n                    as=\"select\"\n                    id=\"{driver}\"\n                    onChange={(value) =>\n                        savedriver(\n                            value.target.value,\n                            row.colis?.id\n                        )\n                    }\n                    custom\n                >\n                    <option>Sélectionner un chauffeur</option>\n\n                    {drivers.map((driver, index) => (\n                        <option\n                            className=\" badge badge-info\"\n                            key={driver.id}\n                            value={driver.id}\n                        >\n                            {driver.username}\n                        </option>\n                    ))}\n                </FormControl>\n            </InputGroup>\n        );\n    }\n    const flowlinkdipsatch = (cell, row, rowIndex, formatExtraData) => {\n        //var k = drivers\n        return (\n            <InputGroup >\n                <FormControl\n                    as=\"select\"\n                    id=\"{driver}\"\n                    onChange={(value) =>\n                        savedrivertocolis(\n                            value.target.value,\n                            row.colis?.id\n                        )\n                    }\n                    custom\n                >\n                    <option>Sélectionner un chauffeur</option>\n\n                    {drivers.map((driver, index) => (\n                        <option\n                            className=\" badge badge-info\"\n                            key={driver.id}\n                            value={driver.id}\n                        >\n                            {driver.username}\n                        </option>\n                    ))}\n                </FormControl>\n            </InputGroup>\n        );\n    }\n\n    const columns = [\n        {\n            dataField: \"id\",\n            text: \"Numéro colis\",\n            headerFormatter: priceFormatter,\n            filter: textFilter(),\n            sort: true\n\n        },\n\n        {\n            dataField: \"colis.provider.username\",\n            text: \"Expiditeur\",\n            formatter: (cell, row) => {\n                return (\n                    <div className=\"d-flex align-items-center\">\n                        <a\n                            href=\"#/\"\n                            onClick={(e) => e.preventDefault()}\n                            className=\"font-weight-bold text-black\"\n                            title=\"...\"\n                        >\n\n\n                            {row.colis?.provider.username} :{\" \"}\n                            {row.colis?.provider.phone_number}\n                        </a>\n\n                    </div>);\n            },\n            headerFormatter: priceFormatter,\n\n            filter: textFilter(),\n\n\n\n        },\n        {\n            dataField: \"colis.name_complete\",\n            text: \"Client\",\n            headerFormatter: priceFormatter,\n            filter: textFilter(),\n\n\n        },\n        {\n            dataField: \"colis.address\",\n            text: \"addresse de client\",\n            headerFormatter: priceFormatter,\n            filter: textFilter(),\n\n            style: { textAlign: \"center\" },\n\n\n            formatter: (cell, row) => {\n                return (<div>{`${row.colis?.gouvernorat} `} <br></br> {`${row.colis?.address}`}</div>);\n            }\n            // formatter: this.linkFollow,\n\n        },\n        {\n            dataField: \"colis.phone_number\",\n            text: \"N. de téléphone\",\n            headerFormatter: priceFormatter,\n            filter: textFilter(),\n\n        },\n\n\n\n\n        {\n            dataField: \"colis.phone_number\",\n\n            text: \"action\",\n            style: { textAlign: \"center\" },\n            formatter: flowlink,\n            attrs: function callback(cell, row, rowIndex, colIndex) {\n                console.log(\"hello\")\n            }\n        },\n\n        {\n            dataField: \"colis.phone_number\",\n\n            text: \"Dipstch colis livraison\",\n            style: { textAlign: \"center\" },\n            formatter: flowlinkdipsatch,\n            attrs: function callback(cell, row, rowIndex, colIndex) {\n                console.log(\"hello\")\n            }\n        },\n       \n\n        \n\n        {\n            dataField: \"colis.name_complete\",\n            text: \"qrcode\",\n            formatter: (cell, row) => {\n                return (<QRcode url={row.colis?.id} />);\n            }\n\n\n        },\n    ];\n\nconst savedrivertocolis = (iddriver, idpacket) => {\n    const config = {\n        headers: {\n            'Content-Type': 'application/json',\n            'Access-Control-Allow-Headers': 'Authorization',\n            \"x-access-token\": localStorage.getItem('token'),\n            'Authorization': 'Bearer ' + localStorage.getItem('token'),\n        },\n    };\n    axios.put(\n        urlbackend + \"/colis/from_retour_final/to_retour_provisoire/\"+idpacket,\n        { driver: iddriver,  },\n        config\n    )\n        .then((response) => {\n            alert(\"add Succefull\");\n            console.log(\"response.data\", response.data);\n            getdata()\n        })\n        .catch((e) => {\n            console.log(e);\n        });\n}\n\n    const savedriver = (iddriver, idpacket) => {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                'Access-Control-Allow-Headers': 'Authorization',\n                \"x-access-token\": localStorage.getItem('token'),\n                'Authorization': 'Bearer ' + localStorage.getItem('token'),\n            },\n        };\n        axios.put(\n            urlbackend + \"/colis/to_retour/to_provider_direct\",\n            { driver: iddriver, colis: [idpacket] },\n            config\n        )\n            .then((response) => {\n                alert(\"add Succefull\");\n                console.log(\"response.data\", response.data);\n                getdata()\n            })\n            .catch((e) => {\n                console.log(e);\n            });\n    }\n    useEffect(() => {\n        // console.log(\"show message value:\",showMessage);\n    }, [showMessageParams]);\n    const downloadfile = (type, list) => {\n        if (type === \"csv\") {\n            var listdownload = list.map((e) => ({\n                \"Numéro colis\": e.colis.index_colis, \"Expéditeur\": e.colis.provider.username, \"N. de téléphone Expéditeur\": e.colis.provider.phone_number,\n\n                \"client \": e.colis.name_complete, \"N. de téléphone\": e.colis.phone_number, \"gouvernorat\": e.colis.gouvernorat, \"addresse\": e.colis.city + \":\" + e.colis.address, \"prix\": e.colis.price, \"type paiment\": e.colis.payment_mode, \"type d'envoi\": e.colis.type_envoi,\n                \"date created\": moment(e.colis.created_at).format(\"DD/MM/YYYY, HH:mm\")\n\n            }))\n            const ws = XLSX.utils.json_to_sheet(listdownload);\n            const wb = { Sheets: { 'data': ws }, SheetNames: ['data'] };\n            const excelBuffer = XLSX.write(wb, { bookType: 'xlsx', type: 'array' });\n            const data = new Blob([excelBuffer], { type: fileType });\n            FileSaver.saveAs(data, \"fileName\" + fileExtension);\n        } else {\n\n            alert(\"save pdf\")\n        }\n    }\n    // render() {\n    return (\n        <Aux>\n\n            <Row>\n                <Col>\n                    <button className=\"btn btn-info\" onClick={() => getdata()} > <span className=\"fa fa-refresh\"></span>  Actualiser</button>\n\n\n                    <hr />\n                    <Tabs defaultActiveKey=\"home\">\n                        <Tab eventKey=\"home\" title=\"En attente\">\n                            {/* <div>value:{showMessage.toString()}</div> */}\n                            {showMessageParams.display && <MessageModal message={showMessageParams.message} design={showMessageParams.type} showit={showMessageParams.display} />}\n                            <Card className=\"card-box mb-4\">\n                                <div className=\"card-header\">\n                                    {/*   <Button\n                                        variant=\"success\"\n                                        onClick={() => nextstep(\"ee\")}\n                                    >\n                                        {\" \"}\n                                        <span className=\"fa fa-download\"></span>\n                                    </Button> */}\n                                    <DropdownButton\n                                        title={<span className=\"fa fa-download\"></span>}\n                                        variant=\"success\"\n                                        id={`dropdown-variants-success`}\n                                        key=\"success\"\n                                        onSelect={(e) => downloadfile(e, pendingPackages)}\n                                    >\n                                        <Dropdown.Item eventKey=\"pdf\">pdf</Dropdown.Item>\n                                        <Dropdown.Item eventKey=\"csv\">excel </Dropdown.Item>\n\n                                    </DropdownButton>\n                                    <div className=\"card-header--title\">\n                                        {/* <b>This table card has custom content</b> */}\n                                    </div>\n                                    <Box className=\"card-header--actions\">\n                                        <IconButton\n                                            size=\"small\"\n                                            color=\"primary\"\n                                            className=\"text-primary\"\n                                            title=\"View details\"\n                                        ></IconButton>\n                                    </Box>\n                                </div>\n                                <CardContent className=\"p-0\">\n                                    <div className=\"table-responsive\">\n                                        <div className=\"table-responsive\" style={{ height: \"2000px\" }}>\n                                            <div className=\"app-row\">\n                                                <div className=\"app-col-xs-12 app-col-md-12\">\n                                                    <BootstrapTable\n                                                        striped\n                                                        bordered\n                                                        hover\n                                                        variant=\"dark\"\n                                                        //   expandRow={expandRow}\n                                                        bootstrap4={true}\n                                                        keyField=\"id\"\n                                                        data={pendingPackages}\n                                                        columns={columns}\n                                                        pagination={paginationFactory({\n                                                            sizePerPage: 15,\n                                                            sizePerPageList: [5, 10, 15, 20, 25],\n                                                        })}\n                                                        filter={filterFactory()}\n                                                        headerClasses=\"table thead-light mb-0\"\n                                                    ></BootstrapTable>\n\n\n\n\n                                                </div>\n                                            </div>\n                                        </div>\n\n                                    </div>\n                                </CardContent>\n                            </Card>\n                        </Tab>\n\n                    </Tabs>\n                </Col>\n            </Row>\n        </Aux>\n    );\n\n}\n\nexport default RetourToProvider;\n\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"title\", \"children\", \"bsPrefix\", \"rootCloseEvent\", \"variant\", \"size\", \"menuAlign\", \"menuRole\", \"renderMenuOnMount\", \"disabled\", \"href\", \"id\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Dropdown from './Dropdown';\nimport DropdownToggle from './DropdownToggle';\nimport DropdownMenu, { alignPropType } from './DropdownMenu';\nvar propTypes = {\n  /**\n   * An html id attribute for the Toggle button, necessary for assistive technologies, such as screen readers.\n   * @type {string|number}\n   * @required\n   */\n  id: PropTypes.any,\n\n  /** An `href` passed to the Toggle component */\n  href: PropTypes.string,\n\n  /** An `onClick` handler passed to the Toggle component */\n  onClick: PropTypes.func,\n\n  /** The content of the non-toggle Button.  */\n  title: PropTypes.node.isRequired,\n\n  /** Disables both Buttons  */\n  disabled: PropTypes.bool,\n\n  /**\n   * Aligns the dropdown menu responsively.\n   *\n   * _see [DropdownMenu](#dropdown-menu-props) for more details_\n   *\n   * @type {\"left\"|\"right\"|{ sm: \"left\"|\"right\" }|{ md: \"left\"|\"right\" }|{ lg: \"left\"|\"right\" }|{ xl: \"left\"|\"right\"} }\n   */\n  menuAlign: alignPropType,\n\n  /** An ARIA accessible role applied to the Menu component. When set to 'menu', The dropdown */\n  menuRole: PropTypes.string,\n\n  /** Whether to render the dropdown menu in the DOM before the first time it is shown */\n  renderMenuOnMount: PropTypes.bool,\n\n  /**\n   *  Which event when fired outside the component will cause it to be closed.\n   *\n   * _see [DropdownMenu](#dropdown-menu-props) for more details_\n   */\n  rootCloseEvent: PropTypes.string,\n\n  /** @ignore */\n  bsPrefix: PropTypes.string,\n\n  /** @ignore */\n  variant: PropTypes.string,\n\n  /** @ignore */\n  size: PropTypes.string\n};\n/**\n * A convenience component for simple or general use dropdowns. Renders a `Button` toggle and all `children`\n * are passed directly to the default `Dropdown.Menu`. This component accepts all of\n * [`Dropdown`'s props](#dropdown-props).\n *\n * _All unknown props are passed through to the `Dropdown` component._ Only\n * the Button `variant`, `size` and `bsPrefix` props are passed to the toggle,\n * along with menu-related props are passed to the `Dropdown.Menu`\n */\n\nvar DropdownButton = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var title = _ref.title,\n      children = _ref.children,\n      bsPrefix = _ref.bsPrefix,\n      rootCloseEvent = _ref.rootCloseEvent,\n      variant = _ref.variant,\n      size = _ref.size,\n      menuAlign = _ref.menuAlign,\n      menuRole = _ref.menuRole,\n      renderMenuOnMount = _ref.renderMenuOnMount,\n      disabled = _ref.disabled,\n      href = _ref.href,\n      id = _ref.id,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(Dropdown, _extends({\n    ref: ref\n  }, props), /*#__PURE__*/React.createElement(DropdownToggle, {\n    id: id,\n    href: href,\n    size: size,\n    variant: variant,\n    disabled: disabled,\n    childBsPrefix: bsPrefix\n  }, title), /*#__PURE__*/React.createElement(DropdownMenu, {\n    align: menuAlign,\n    role: menuRole,\n    renderOnMount: renderMenuOnMount,\n    rootCloseEvent: rootCloseEvent\n  }, children));\n});\nDropdownButton.displayName = 'DropdownButton';\nDropdownButton.propTypes = propTypes;\nexport default DropdownButton;"],"names":["urlbackend","require","useState","pendingPackages","setpendingPackages","display","type","message","showMessageParams","drivers","setdrivers","priceFormatter","column","colIndex","sortElement","filterElement","style","flexDirection","text","className","getdata","config","headers","localStorage","getItem","getpendingPackages","axios","getdrivers","then","response","data","catch","errors","console","error","useEffect","columns","dataField","headerFormatter","filter","textFilter","sort","formatter","cell","row","href","onClick","e","preventDefault","title","colis","provider","username","phone_number","textAlign","gouvernorat","address","rowIndex","formatExtraData","as","id","onChange","value","savedriver","target","custom","map","driver","index","attrs","log","savedrivertocolis","url","iddriver","idpacket","alert","defaultActiveKey","eventKey","design","showit","variant","onSelect","list","listdownload","index_colis","name_complete","city","price","payment_mode","type_envoi","moment","created_at","format","wb","Sheets","XLSX","SheetNames","excelBuffer","bookType","Blob","FileSaver","downloadfile","size","color","height","striped","bordered","hover","bootstrap4","keyField","pagination","paginationFactory","sizePerPage","sizePerPageList","filterFactory","headerClasses","_excluded","propTypes","PropTypes","disabled","menuAlign","alignPropType","menuRole","renderMenuOnMount","rootCloseEvent","bsPrefix","DropdownButton","React","_ref","ref","children","props","_objectWithoutPropertiesLoose","Dropdown","_extends","DropdownToggle","childBsPrefix","DropdownMenu","align","role","renderOnMount","displayName"],"sourceRoot":""}