{"version":3,"file":"static/js/5892.f7063010.chunk.js","mappings":"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","sources":["Routes/Maps/GoogleMap/index.js"],"sourcesContent":["import React from 'react';\r\nimport {Row, Col, Card, Form, InputGroup, Button} from 'react-bootstrap';\r\nimport {Map, Marker, GoogleApiWrapper, InfoWindow, Polyline, Polygon}  from 'google-maps-react';\r\n\r\nimport Aux from \"../../../hoc/_Aux\";\r\n\r\nconst polygon = [\r\n    { lat: 21.2105052, lng: 72.8653491 },\r\n    { lat: 21.2206445, lng: 72.8704506 },\r\n    { lat: 21.2183091, lng: 72.8631228 }\r\n];\r\n\r\nclass GoogleMap extends React.Component {\r\n\r\n    state = {\r\n        activeMarker: {},\r\n        selectedPlace: {},\r\n        showingInfoWindow: false,\r\n        position: null\r\n    };\r\n\r\n    onMarkerClick = (props, marker) =>\r\n        this.setState({\r\n            activeMarker: marker,\r\n            selectedPlace: props,\r\n            showingInfoWindow: true\r\n        });\r\n\r\n    onInfoWindowClose = () =>\r\n        this.setState({\r\n            activeMarker: null,\r\n            showingInfoWindow: false\r\n        });\r\n\r\n    onMapClicked = () => {\r\n        if (this.state.showingInfoWindow)\r\n            this.setState({\r\n                activeMarker: null,\r\n                showingInfoWindow: false\r\n            });\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.renderAutoComplete();\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props !== prevProps.map) this.renderAutoComplete();\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n    }\r\n\r\n    renderAutoComplete() {\r\n        const { google, map } = this.props;\r\n\r\n        if (!google || !map) return;\r\n\r\n        const autocomplete = new google.maps.places.Autocomplete(this.autocomplete);\r\n        autocomplete.bindTo('bounds', map);\r\n\r\n        autocomplete.addListener('place_changed', () => {\r\n            const place = autocomplete.getPlace();\r\n\r\n            if (!place.geometry) return;\r\n\r\n            if (place.geometry.viewport) map.fitBounds(place.geometry.viewport);\r\n            else {\r\n                map.setCenter(place.geometry.location);\r\n                map.setZoom(17);\r\n            }\r\n\r\n            this.setState({ position: place.geometry.location });\r\n        });\r\n    }\r\n\r\n\r\n    render() {\r\n        const { position } = this.state;\r\n\r\n        return (\r\n            <Aux>\r\n                <Row>\r\n                    <Col xl={6}>\r\n                        <Card>\r\n                            <Card.Header>\r\n                                <Card.Title as=\"h5\">Basic</Card.Title>\r\n                            </Card.Header>\r\n                            <Card.Body>\r\n                                <div style={{height: '300px', width: '100%'}}>\r\n                                    <Map\r\n                                        centerAroundCurrentLocation\r\n                                        className=\"map\"\r\n                                        google={this.props.google}\r\n                                        zoom={14}\r\n                                    />\r\n                                </div>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col xl={6}>\r\n                        <Card>\r\n                            <Card.Header>\r\n                                <Card.Title as=\"h5\">Simple Markers</Card.Title>\r\n                            </Card.Header>\r\n                            <Card.Body>\r\n                                <div style={{height: '300px', width: '100%'}}>\r\n                                    <Map\r\n                                        centerAroundCurrentLocation\r\n                                        google={this.props.google}\r\n                                        className=\"map\"\r\n                                        zoom={13}>\r\n                                        <Marker\r\n                                            name=\"Codedthemes\"\r\n                                            position={{ lat: 21.2335163, lng: 72.8643298 }}\r\n                                        />\r\n\r\n                                        <Marker\r\n                                            name=\"Roman Point\"\r\n                                            position={{ lat: 21.2148165, lng: 72.8627243 }}\r\n                                        />\r\n\r\n                                        <Marker />\r\n                                    </Map>\r\n                                </div>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col xl={6}>\r\n                        <Card>\r\n                            <Card.Header>\r\n                                <Card.Title as=\"h5\">Click-Able Markers</Card.Title>\r\n                            </Card.Header>\r\n                            <Card.Body>\r\n                                <div style={{height: '300px', width: '100%'}}>\r\n                                    <Map\r\n                                        centerAroundCurrentLocation\r\n                                        className=\"map\"\r\n                                        google={this.props.google}\r\n                                        onClick={this.onMapClicked}\r\n                                        zoom={12}>\r\n\r\n                                        <Marker\r\n                                            name=\"Codedthemes\"\r\n                                            position={{ lat: 21.2335163, lng: 72.8643298 }}\r\n                                            onClick={this.onMarkerClick}\r\n                                        />\r\n\r\n                                        <Marker\r\n                                            name=\"Roman Point\"\r\n                                            position={{ lat: 21.2148165, lng: 72.8627243 }}\r\n                                            onClick={this.onMarkerClick}\r\n                                        />\r\n\r\n                                        <Marker name=\"Current Location\" onClick={this.onMarkerClick} />\r\n\r\n                                        <InfoWindow\r\n                                            marker={this.state.activeMarker}\r\n                                            onClose={this.onInfoWindowClose}\r\n                                            visible={this.state.showingInfoWindow}>\r\n                                            <div>\r\n                                                <h3>{this.state.selectedPlace.name}</h3>\r\n                                            </div>\r\n                                        </InfoWindow>\r\n                                    </Map>\r\n                                </div>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col xl={6}>\r\n                        <Card>\r\n                            <Card.Header>\r\n                                <Card.Title as=\"h5\">Geo-Coding</Card.Title>\r\n                            </Card.Header>\r\n                            <Card.Body>\r\n                                <Form onSubmit={this.onSubmit}>\r\n                                    <InputGroup className=\"mb-3\">\r\n                                        <Form.Control ref={ref => (this.autocomplete = ref)} type='text' placeholder='Search your favorite place' />\r\n                                        <InputGroup.Append>\r\n                                            <Button type=\"submit\">Search</Button>\r\n                                        </InputGroup.Append>\r\n                                    </InputGroup>\r\n                                </Form>\r\n                                <div style={{height: '240px', width: '100%'}}>\r\n                                    <Map\r\n                                        className='map'\r\n                                        {...this.props}\r\n                                        center={position}\r\n                                        centerAroundCurrentLocation >\r\n                                        <Marker position={position} />\r\n                                    </Map>\r\n                                </div>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col xl={6}>\r\n                        <Card>\r\n                            <Card.Header>\r\n                                <Card.Title as=\"h5\">Polygon</Card.Title>\r\n                            </Card.Header>\r\n                            <Card.Body>\r\n                                <div style={{height: '300px', width: '100%'}}>\r\n                                    <Map\r\n                                        centerAroundCurrentLocation\r\n                                        google={this.props.google}\r\n                                        className=\"map\"\r\n                                        zoom={14}>\r\n                                        <Polygon\r\n                                            fillColor=\"#dc3545\"\r\n                                            fillOpacity={0.35}\r\n                                            paths={[polygon]}\r\n                                            strokeColor=\"#dc3545\"\r\n                                            strokeOpacity={0.8}\r\n                                            strokeWeight={2}\r\n                                        />\r\n                                    </Map>\r\n                                </div>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col xl={6}>\r\n                        <Card>\r\n                            <Card.Header>\r\n                                <Card.Title as=\"h5\">Polyline</Card.Title>\r\n                            </Card.Header>\r\n                            <Card.Body>\r\n                                <div style={{height: '300px', width: '100%'}}>\r\n                                    <Map\r\n                                        centerAroundCurrentLocation\r\n                                        google={this.props.google}\r\n                                        className=\"map\"\r\n                                        zoom={14}>\r\n                                        <Polyline\r\n                                            fillColor=\"#dc3545\"\r\n                                            fillOpacity={0.35}\r\n                                            path={polygon}\r\n                                            strokeColor=\"#dc3545\"\r\n                                            strokeOpacity={0.8}\r\n                                            strokeWeight={5}\r\n                                        />\r\n                                    </Map>\r\n                                </div>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nexport default GoogleApiWrapper({\r\n    apiKey: 'AIzaSyCE0nvTeHBsiQIrbpMVTe489_O5mwyqofk'\r\n})(GoogleMap);"],"names":["polygon","lat","lng","GoogleMap","state","activeMarker","selectedPlace","showingInfoWindow","position","onMarkerClick","props","marker","setState","onInfoWindowClose","onMapClicked","this","renderAutoComplete","prevProps","map","e","preventDefault","google","autocomplete","maps","places","Autocomplete","bindTo","addListener","place","getPlace","geometry","viewport","fitBounds","setCenter","location","setZoom","xl","as","style","height","width","Map","centerAroundCurrentLocation","className","zoom","Marker","name","onClick","InfoWindow","onClose","visible","onSubmit","ref","type","placeholder","center","Polygon","fillColor","fillOpacity","paths","strokeColor","strokeOpacity","strokeWeight","Polyline","path","React","GoogleApiWrapper","apiKey"],"sourceRoot":""}