{"version":3,"file":"static/js/599.7d0719e9.chunk.js","mappings":"uKAmEA,IA/DoB,SAAC,GAEd,IAFgBA,EAEjB,EAFiBA,KAAKC,EAEtB,EAFsBA,MAAOC,EAE7B,EAF6BA,SAAWC,EAExC,EAFwCA,OAAQC,EAEhD,EAFgDA,MAAMC,EAEtD,EAFsDA,KAAMC,EAE5D,EAF4DA,UAAWC,EAEvE,EAFuEA,OAAOC,EAE9E,EAF8EA,QAKlF,OACC,8BAEc,UAAVP,GACC,iCACA,mBAAOQ,QAAQ,YAAf,UAA4BT,EAA5B,KAAkC,SAAC,IAAD,CAAaO,OAAQA,EAAQC,QAASA,QAEzE,UAAC,IAAD,CAAYE,UAAU,OAAtB,WACA,SAAC,YAAD,WACG,SAAC,SAAD,CAAiBC,GAAG,eAApB,qBAEC,SAAC,IAAD,CACIC,YAAaX,EACb,aAAYD,EACZ,mBAAkBA,EAClBE,SAAUA,EACVC,OAAQA,EACRC,MAAOA,EACPE,UAAWA,EACXL,MAAOA,EACPD,KAAMA,EACNK,KAAMA,WAMT,iCAEA,mBAAOI,QAAQ,YAAf,UAA4BR,EAA5B,MAAoC,SAAC,IAAD,CAAaM,OAAQA,EAAQC,QAASA,QAE/E,SAAC,IAAD,CAAYE,UAAU,OAAtB,UAEI,SAAC,IAAD,CACIE,YAAaX,EACb,aAAYA,EACZ,mBAAkBA,EAClBC,SAAUA,EACVC,OAAQA,EACRC,MAAOA,EACPE,UAAWA,EACXL,MAAOA,EACPD,KAAMA,EACNK,KAAMA,a,iHCLrB,EA1BoB,SAAC,GAAyB,IAC5C,EAjBgB,SAACE,EAAQC,GACzB,OAAKA,EAMDD,GAAUC,EACL,CAAC,kCAAmCD,IAGxCA,GAAUC,EACN,CAAC,gCAAiCK,EAAAA,EAAAA,EAAO,qBADlD,EATS,GAegBC,CADkB,EAAtBP,OAAsB,EAAdC,SAC7B,eAAOO,EAAP,KAAgBC,EAAhB,KAEA,OACE,SAACC,EAAA,GAAD,CACEC,MACGC,MAAMC,QAAQJ,GAKbA,EAAMK,KAAI,SAAAC,GAAC,OACT,kBAAMZ,UAAU,kBAAhB,UACGY,EADH,KACM,yBANR,kBAAMZ,UAAU,kBAAhB,UACGM,EADH,KACU,qBAUdO,UAAU,QAdZ,UAeE,2BACE,cAAGb,UAAW,MAAQK,U,2UCxB1BS,EAAaC,EAAQ,MAARA,GAEIC,EAAAA,KAAaC,MAAM,CACpCC,MAAOF,EAAAA,KAAaE,MAAM,iBAAiBC,SAAS,qBACpDC,aAAcJ,EAAAA,KACTK,QAJW,0GAIU,6BACrBF,SAAS,qBACdG,KAAMN,EAAAA,KACDO,IAAI,EAAG,sBACPC,IAAI,GAAI,qBACRL,SAAS,oBACdM,YAAaT,EAAAA,KACRO,IAAI,EAAG,6BACPC,IAAI,GAAI,4BACRL,SAAS,2BACd7B,KAAM0B,EAAAA,KACDO,IAAI,EAAG,sBACPC,IAAI,GAAI,qBACRL,SAAS,oBACdO,KAAMV,EAAAA,KACDO,IAAI,EAAG,sBACPC,IAAI,GAAI,qBACRL,SAAS,sBAyHlB,MAvHA,SAAyBQ,GACrB,OAAwBC,EAAAA,EAAAA,WAAS,GAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAAsBF,EAAAA,EAAAA,UAASD,EAAMI,MACrC,IADA,gBAC8BH,EAAAA,EAAAA,UAAS,KAAvC,eACMI,GADN,UACoB,kBAAMF,GAAQ,KAElC,GAAwCF,EAAAA,EAAAA,UAAS,IAAjD,eAAOK,EAAP,KAAqBC,EAArB,KACA,GAA0BN,EAAAA,EAAAA,UAAS,IAAnC,eAAOO,EAAP,KAAcC,EAAd,KAkDA,OAhDAC,EAAAA,EAAAA,YAAU,cAGP,KA8CC,iCACI,UAACC,EAAA,EAAD,CAAQC,QAAQ,OACZC,QAvDO,kBAAMV,GAAQ,IAsDzB,eAC0B,iBAAM9B,UAAU,uBAD1C,QAGA,UAACyC,EAAA,EAAD,CAAOZ,KAAMA,EAAMa,OAAQV,EAA3B,WACI,SAACS,EAAA,SAAD,CAAcE,aAAW,EAAzB,UACI,UAACF,EAAA,QAAD,8CAA8Cd,EAAMiB,UAAU3C,GAA9D,WAEJ,SAACwC,EAAA,OAAD,WAII,UAACI,EAAA,EAAD,iDAAuC,UAACC,EAAA,EAAD,CAAKC,GAAI,GAAT,WAEnC,SAACC,EAAA,EAAD,CAAYhD,UAAU,OAAtB,UACI,UAACiD,EAAA,EAAD,CACIC,GAAG,SACHjD,GAAG,SACHkD,QAAM,EACN3D,SAAU,SAACoB,GAAD,OAAOsB,EAAgBtB,EAAEwC,OAAO1D,QAC1CD,OAAQ,SAACmB,GAAD,OAAOsB,EAAgBtB,EAAEwC,OAAO1D,QACxCA,MAAOuC,EANX,WAQI,iDACA,mBAAuBvC,MAAO,YAA9B,sBAAa,cACb,mBAAkCA,MAAO,oBAAzC,8BAAa,sBACb,mBAAiCA,MAAO,sBAAxC,gCAAa,6BAMrB,SAAC2D,EAAA,EAAD,CACI/D,KAAK,QACLE,SAAU,SAACoB,GAAD,OAAOwB,EAASxB,EAAEwC,OAAO1D,QACnCA,MAAOyC,EACP5C,MAAM,8CASlB,UAACkD,EAAA,SAAD,YACI,SAACH,EAAA,EAAD,CAAQC,QAAQ,OAAOC,QA3FnB,WAChBc,QAAQC,IAAItB,GACZqB,QAAQC,IAAI5B,EAAM6B,WAElB,IAAMC,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChB,+BAAgC,iBAChC,iBAAkBC,aAAaC,QAAQ,SACvC,cAAiB,UAAYD,aAAaC,QAAQ,WAGrD3B,EAID4B,IAAAA,IAAU/C,EAAa,iBAAkB,CAAEgD,QAASnC,EAAMiB,UAAU3C,GAAIgC,aAAcA,EAAcE,MAAOA,GAASsB,GAC/GM,MAAK,SAAAC,GACFV,QAAQC,IAAI,mBAAoBS,EAASC,MACzCC,MAAM,oBACNvC,EAAMwC,aACNnC,OAIHoC,OAAM,SAAAxD,GACH0C,QAAQC,IAAI3C,MAZpBsD,MAAM,sCA6EE,0BAGA,SAAC5B,EAAA,EAAD,CAAQC,QAAQ,YAAYC,QAASR,EAArC,8B,+BCjIhBlB,EAAaC,EAAQ,MAARA,GAiUjB,MA9TA,WACI,SAASsD,EAAeC,EAAQC,EAAhC,GAA2E,IAA/BC,EAA8B,EAA9BA,YAAaC,EAAiB,EAAjBA,cACrD,OACI,iBAAKC,MAAO,CAAEC,QAAS,OAAQC,cAAe,UAA9C,UACKH,EACAH,EAAOO,KACPL,GAAY,iBAAMxE,UAAU,oBAIzC,OAAkC4B,EAAAA,EAAAA,UAAS,IAA3C,eAAOkD,EAAP,KAAkBC,EAAlB,MACA1C,EAAAA,EAAAA,YAAU,WAEN2C,MAED,IAEH,IAAMA,EAAU,WAEZ,IAAMvB,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChB,+BAAgC,gBAChC,iBAAkBC,aAAaC,QAAQ,SACvC,cAAiB,UAAYD,aAAaC,QAAQ,WAG1DC,IAAAA,IAAU/C,EAAa,wBAAyB2C,GAC3CM,MAAK,SAAAC,GACFV,QAAQC,IAAI,mBAAoBS,EAASC,MACzCc,EAAaf,EAASC,KAAKA,KAAKgB,cAGnCb,OAAM,SAAAxD,GACH0C,QAAQC,IAAI3C,OAMlBsE,EAAU,CACZ,CACIC,UAAW,eACXN,KAAM,mBACNO,gBAAiBf,EACjBK,MAAO,CAAEW,UAAW,UACpBC,QAAQC,EAAAA,EAAAA,MACRC,UAAW,SAACC,EAAMC,GAEd,OAA2B,IAAvBA,EAAIC,gBAEI,iCAAO,SAACrD,EAAA,EAAD,CAAqBC,QAAQ,UAA7B,UACX,SAACqD,EAAA,EAAD,CAASf,KAAK,aADUa,EAAIzF,QAMxB,iCAAO,SAACqC,EAAA,EAAD,CAAqBC,QAAQ,UAA7B,UACX,SAACqD,EAAA,EAAD,CAASf,KAAK,iBADUa,EAAIzF,QAQxC4F,MAAM,GAGV,CACIV,UAAW,eACXN,KAAM,eACNO,gBAAiBf,EACjBiB,QAAQC,EAAAA,EAAAA,MACRM,MAAM,GAGV,CACIV,UAAW,oBACXN,KAAM,cACNO,gBAAiBf,EACjBmB,UAAW,SAACC,EAAMC,GACd,OAAQ,qCAASA,EAAII,SAASC,SAAtB,UAAmC,kBAAnC,cAAiDL,EAAII,SAAS1E,kBAE1EkE,QAAQC,EAAAA,EAAAA,MACRM,MAAM,GAMV,CACIhB,KAAM,cACNM,UAAW,mBACXC,gBAAiBf,EACjBiB,QAAQC,EAAAA,EAAAA,MACRM,MAAM,GAOV,CACIhB,KAAM,mBACNM,UAAW,cACXC,gBAAiBf,EACjBiB,QAAQC,EAAAA,EAAAA,MACRM,MAAM,GAIV,CACIhB,KAAM,kBACNM,UAAW,WACXC,gBAAiBf,EACjBiB,QAAQC,EAAAA,EAAAA,MACRM,MAAM,GAGV,CACIhB,KAAM,kBACNM,UAAW,eACXK,UAAW,SAACC,EAAMC,GACd,GAAIA,EAAIzD,aACJ,OAAQ,qCAASyD,EAAIzD,aAAb,UAA8B,kBAA9B,cAA4CyD,EAAIvD,WAIhEiD,gBAAiBf,EACjBiB,QAAQC,EAAAA,EAAAA,MACRM,MAAM,GAGV,CACIhB,KAAM,2BACNM,UAAW,mBACXC,gBAAiBf,EACjBmB,UAAW,SAACC,EAAMC,GACd,OAAQ,qCAASA,EAAIM,iBAAmBN,EAAIO,aAApC,QAEZX,QAAQC,EAAAA,EAAAA,MACRM,MAAM,GAGV,CACIhB,KAAM,OACNM,UAAW,aACXC,gBAAiBf,EACjBmB,UAAW,SAACC,EAAMC,GACd,OAAQ,qCAASQ,GAAAA,CAAOR,EAAIS,YAAYC,OAAO,yBAAvC,aAEZd,QAAQC,EAAAA,EAAAA,MACRM,MAAM,GAKV,CACIhB,KAAM,yBACNM,UAAW,eACXC,gBAAiBf,EACjBK,MAAO,CAAEW,UAAW,UACpBC,QAAQC,EAAAA,EAAAA,MACRC,UAAW,SAACC,EAAMC,GACd,OAAQ,0BACJ,SAACW,EAAA,EAAD,CAAMC,GAAI,wBAA0BZ,EAAIa,aAAxC,UACI,UAACjE,EAAA,EAAD,CACIC,QAAQ,OACRC,QAAS,kBAAMc,QAAQC,IAAI,YAF/B,UAIK,KACD,iBAAMvD,UAAU,yBAQhC6F,MAAM,GAIV,CACIhB,KAAM,iBACNM,UAAW,gBACXC,gBAAiBf,EACjBK,MAAO,CAAEW,UAAW,UACpBC,QAAQC,EAAAA,EAAAA,MACRC,UAAW,SAACC,EAAMC,GACd,OAAQ,4BAAK,SAAC,IAAD,CAAYc,YAAad,IAA9B,SAEZG,MAAM,GAIV,CACIhB,KAAM,kBACNM,UAAW,gBACXC,gBAAiBf,EACjBK,MAAO,CAAEW,UAAW,UAEpBC,QAAQC,EAAAA,EAAAA,MACRC,UAAW,SAACC,EAAMC,GACd,OAAQ,gCAAM,SAAC,EAAD,CAAiB9C,UAAW8C,EAAKvB,WAAY,kBAAMa,OAAzD,WAEZa,MAAM,IA2Cd,OACI,SAAC,IAAD,WACI,SAAChD,EAAA,EAAD,WACI,SAACC,EAAA,EAAD,WACI,UAAC2D,EAAA,EAAD,YACI,SAACA,EAAA,SAAD,WACI,SAACA,EAAA,QAAD,CAAYvD,GAAG,KAAf,kCAEJ,SAACuD,EAAA,OAAD,WAmCI,SAAC,IAAD,CACIC,SAAO,EACPC,UAAQ,EACRC,OAAK,EACLrE,QAAQ,OAERsE,YAAY,EACZC,SAAS,KACT7C,KAAMa,EACNI,QAASA,EACT6B,YAAYC,EAAAA,EAAAA,IAAkB,CAC1BC,YAAa,GACbC,gBAAiB,CAAC,EAAG,GAAI,GAAI,GAAI,MAErC5B,QAAQ6B,EAAAA,EAAAA,MACRC,cAAc","sources":["Components/CustomInput.js","Components/InputStatus.js","Routes/Facture/Payment.Provider/Payment.Provider.js","Routes/Facture/List.Provider.Facture.js"],"sourcesContent":["import React from 'react';\nimport { InputGroup, FormControl} from 'react-bootstrap';\nimport InputStatus from './InputStatus';\n\nconst CustomInput = ({ name,label, onChange , onBlur, value,type, isInvalid, errors,touched\n  \n}) => {\n  \n    \n  return (\n   <>\n   {\n       label === 'Phone' ? (\n        <>   \n        <label htmlFor=\"basic-url\">{name} <InputStatus errors={errors} touched={touched}/></label>\n        \n       <InputGroup className=\"mb-3\">\n       <InputGroup.Prepend>\n          <InputGroup.Text id=\"basic-addon1\">+216</InputGroup.Text>\n        </InputGroup.Prepend>\n           <FormControl\n               placeholder={label}\n               aria-label={name}\n               aria-describedby={name}\n               onChange={onChange}\n               onBlur={onBlur}\n               value={value}\n               isInvalid={isInvalid}\n               label={label}\n               name={name}\n               type={type}\n   \n           />\n       </InputGroup>\n       </>\n        ):(\n            <>\n            \n            <label htmlFor=\"basic-url\">{label}  <InputStatus errors={errors} touched={touched}/></label>\n\n       <InputGroup className=\"mb-3\">\n   \n           <FormControl\n               placeholder={label}\n               aria-label={label}\n               aria-describedby={label}\n               onChange={onChange}\n               onBlur={onBlur}\n               value={value}\n               isInvalid={isInvalid}\n               label={label}\n               name={name}\n               type={type}\n\n               \n   \n           />\n       </InputGroup>\n       </>\n        )\n      \n   }\n    \n    </>  \n   \n  );\n};\nexport default CustomInput;","import React from 'react';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport '../assets/scss/index.scss';\nimport i18n from './../i18n';\n\nconst getConfig = (errors, touched) => {\n  if (!touched) {\n    return [];\n  }\n\n  \n\n  if (errors && touched) {\n    return ['fa-times-circle-o input-invalid', errors];\n  }\n\n  if (!errors && touched) {\n    return ['fa-check-circle-o input-valid', i18n.t('valid-field')];\n  }\n};\n\nconst InputStatus = ({ errors, touched }) => {\n  const [classes, extra] = getConfig(errors, touched);\n  \n  return (\n    <Tooltip\n      title={\n        !Array.isArray(extra) ? (\n          <span className=\"tooltip-message\">\n            {extra} <br />\n          </span>\n        ) : (\n          extra.map(e => (\n            <span className=\"tooltip-message\">\n              {e} <br />\n            </span>\n          ))\n        )\n      }\n      placement=\"right\">\n      <span>\n        <i className={'fa ' + classes} />\n      </span>\n    </Tooltip>\n  );\n};\n\nexport default InputStatus;","\nimport React, { useEffect, useState } from 'react';\nimport {\n    Row,\n    Col,\n    Card,\n    Button,\n    Modal,\n    InputGroup,\n    FormControl,\n} from \"react-bootstrap\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\n\nimport Aux from \"../../../hoc/_Aux\";\nimport CustomInput from \"../../../Components/CustomInput\";\nimport axios from 'axios';\nvar urlbackend = require(\"../../../env/env\")();\nconst phoneRegExp = /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/;\nconst SignupSchema = Yup.object().shape({\n    email: Yup.string().email(\"Invalid Email\").required(\"Email is Required\"),\n    phone_number: Yup.string()\n        .matches(phoneRegExp, \"Phone number is not valid\")\n        .required(\"Phone is Required\"),\n    city: Yup.string()\n        .min(2, \"City is Too Short!\")\n        .max(20, \"City is Too Long!\")\n        .required(\"City is Required\"),\n    description: Yup.string()\n        .min(2, \"description is Too Short!\")\n        .max(20, \"description is Too Long!\")\n        .required(\"description is Required\"),\n    name: Yup.string()\n        .min(2, \"name is Too Short!\")\n        .max(20, \"name is Too Long!\")\n        .required(\"name is Required\"),\n    code: Yup.string()\n        .min(2, \"code is Too Short!\")\n        .max(20, \"code is Too Long!\")\n        .required(\"code is Required\"),\n});\nfunction PaymentProvider(props) {\n    const [show, setShow] = useState(false);\n    const [zonesUpdate] = useState(props.zone)\n    const [agences, setagences] = useState([])\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n    const [mode_payment, setmode_payment] = useState('')\n    const [order, setorder] = useState('')\n\n    useEffect(() => {\n\n\n    }, [])\n    const handlSubmit = () => {\n        console.log(mode_payment);\n        console.log(props.Listcolis);\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Access-Control-Allow-Headers\": \"x-access-token\",\n                \"x-access-token\": localStorage.getItem('token'),\n                'Authorization': 'Bearer ' + localStorage.getItem('token'),\n            },\n        };\n        if (!mode_payment) {\n\n            alert(\"merci de choisir mode de payement\")\n        } else {\n            axios.put(urlbackend + \"/facture/final\", { facture: props.factureid.id, mode_payment: mode_payment, order: order }, config)\n                .then(response => {\n                    console.log(\"this respon list\", response.data)\n                    alert(\"payment effectue\")\n                    props.reloaddata()\n                    handleClose()\n                    //this.componentDidMount()\n\n                })\n                .catch(e => {\n                    console.log(e)\n                })\n        }\n\n    };\n    const facture_payment = (id) => {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                'Access-Control-Allow-Headers': 'Authorization',\n                \"x-access-token\": localStorage.getItem('token'),\n                'Authorization': 'Bearer ' + localStorage.getItem('token'),\n            },\n        };\n\n\n    }\n\n    return (\n        <>\n            <Button variant=\"info\"\n                onClick={handleShow}> <span className=\"fa fa-check-circle\"></span> </Button>\n\n            <Modal show={show} onHide={handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>payment de facture fournisseur  {props.factureid.id}  </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n\n\n\n                    <Row>                                  <Col md={12}>\n\n                        <InputGroup className=\"mb-3\">\n                            <FormControl\n                                as=\"select\"\n                                id=\"agence\"\n                                custom\n                                onChange={(e) => setmode_payment(e.target.value)}\n                                onBlur={(e) => setmode_payment(e.target.value)}\n                                value={mode_payment}\n                            >\n                                <option>Mode de paiment</option>\n                                <option key={'espèce'} value={\"espèce\"}>espèce</option>\n                                <option key={'virement bancaire'} value={\"virement bancaire\"}>virement bancaire</option>\n                                <option key={'chèque de banque'} value={\"chèque de banque\"}>chèque de banque</option>\n\n\n                            </FormControl>\n                        </InputGroup>\n\n                        <CustomInput\n                            name=\"order\"\n                            onChange={(e) => setorder(e.target.value)}\n                            value={order}\n                            label=\"indication / N.virment/ N.cheque\"\n                        />\n\n                    </Col>\n\n                    </Row>\n\n\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"info\" onClick={handlSubmit}>\n                        Enregistrer\n                    </Button>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        fermer\n                    </Button>\n                    {/* <Button variant=\"primary\" onClick={handleClose}>\n            Save Changes\n            </Button> */}\n                </Modal.Footer>\n            </Modal>\n        </>\n    );\n}\n\nexport default PaymentProvider","import React, { useState, useEffect } from 'react';\nimport { Row, Col, Card, Table, Button, Badge } from 'react-bootstrap';\n//import { Link } from \"react-router-dom\"\nimport axios from 'axios'\nimport { confirmAlert } from 'react-confirm-alert';\nimport UcFirst from \"../../App/components/UcFirst\";\n\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import\nimport Aux from \"../../hoc/_Aux\";\nimport Bonpayment from './Bon.Payment/Bon.payment'\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport { CSVLink } from \"react-csv\";\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\nimport filterFactory, { textFilter } from 'react-bootstrap-table2-filter';\nimport PaymentProvider from './Payment.Provider/Payment.Provider'\nimport moment from 'moment';\nimport { Link } from 'react-router-dom';\n//import ViewProvider from './ViewProvider'\n//import UpdateProvider from './Update.Provider'\nvar urlbackend = require('../../env/env')();\n\n\nfunction ListProviderFacture() {\n    function priceFormatter(column, colIndex, { sortElement, filterElement }) {\n        return (\n            <div style={{ display: 'flex', flexDirection: 'column' }}>\n                {filterElement}\n                {column.text}\n                {sortElement}<span className=\"fa fa-filter\"></span>\n            </div>\n        );\n    }\n    const [Providers, setProviders] = useState([]);\n    useEffect(() => {\n\n        getdata()\n\n    }, [])\n\n    const getdata = () => {\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                'Access-Control-Allow-Headers': 'Authorization',\n                \"x-access-token\": localStorage.getItem('token'),\n                'Authorization': 'Bearer ' + localStorage.getItem('token'),\n            },\n        };\n        axios.get(urlbackend + \"/facture/final/status\", config)\n            .then(response => {\n                console.log(\"this respon list\", response.data)\n                setProviders(response.data.data.reverse())\n\n            })\n            .catch(e => {\n                console.log(e)\n            })\n\n    }\n\n\n    const columns = [\n        {\n            dataField: \"code_facture\",\n            text: \"etat de paiement\",\n            headerFormatter: priceFormatter,\n            style: { textAlign: \"center\" },\n            filter: textFilter(),\n            formatter: (cell, row) => {\n\n                if (row.status_facture === 1) {\n\n                    return (<div>  <Button key={row.id} variant='success'>\n                        <UcFirst text='payé' />\n\n                    </Button></div>)\n                } else {\n\n                    return (<div>  <Button key={row.id} variant='warning'>\n                        <UcFirst text='Non payé' />\n\n                    </Button></div>)\n                }\n\n\n            },\n            sort: true\n\n        },\n        {\n            dataField: \"code_facture\",\n            text: \"code_facture\",\n            headerFormatter: priceFormatter,\n            filter: textFilter(),\n            sort: true\n\n        },\n        {\n            dataField: \"provider.username\",\n            text: \"Fournisseur\",\n            headerFormatter: priceFormatter,\n            formatter: (cell, row) => {\n                return (<div>{`${row.provider.username} `} <br></br> {`${row.provider.phone_number}`}</div>);\n            },\n            filter: textFilter(),\n            sort: true\n\n        },\n\n\n\n        {\n            text: \"frais_total\",\n            dataField: \"frais_livraision\",\n            headerFormatter: priceFormatter,\n            filter: textFilter(),\n            sort: true\n\n        },\n\n\n\n\n        {\n            text: \"frais_livraision\",\n            dataField: \"frais_total\",\n            headerFormatter: priceFormatter,\n            filter: textFilter(),\n            sort: true\n\n        },\n\n        {\n            text: \"nombre de colis\",\n            dataField: \"nb_colis\",\n            headerFormatter: priceFormatter,\n            filter: textFilter(),\n            sort: true\n\n        },\n        {\n            text: \"Type de payment\",\n            dataField: \"mode_payment\",\n            formatter: (cell, row) => {\n                if (row.mode_payment) {\n                    return (<div>{`${row.mode_payment} `} <br></br> {`${row.order}`}</div>);\n                }\n\n            },\n            headerFormatter: priceFormatter,\n            filter: textFilter(),\n            sort: true\n\n        },\n        {\n            text: \"Montant pour fournisseur\",\n            dataField: \"frais_livraision\",\n            headerFormatter: priceFormatter,\n            formatter: (cell, row) => {\n                return (<div>{`${row.frais_livraision - row.frais_total}`} </div>);\n            },\n            filter: textFilter(),\n            sort: true\n\n        },\n        {\n            text: \"Date\",\n            dataField: \"updated_at\",\n            headerFormatter: priceFormatter,\n            formatter: (cell, row) => {\n                return (<div>{`${moment(row.updated_at).format(\"DD/MM/YYYY [at] HH:mm\")} `} </div>);\n            },\n            filter: textFilter(),\n            sort: true\n\n        },\n\n\n        {\n            text: \"Modifier colis facture\",\n            dataField: \"code_facture\",\n            headerFormatter: priceFormatter,\n            style: { textAlign: \"center\" },\n            filter: textFilter(),\n            formatter: (cell, row) => {\n                return (<div>\n                    <Link to={\"/facture/gestioncheq/\" + row.code_facture}>\n                        <Button\n                            variant=\"dark\"\n                            onClick={() => console.log(\"not yet\")}\n                        >\n                            {\" \"}\n                            <span className=\"fa fa-pencil\"></span>\n                        </Button>\n\n\n                    </Link>\n\n                </div>);\n            },\n            sort: true\n\n        },\n\n        {\n            text: \"Liste de colis\",\n            dataField: \"mode_payement\",\n            headerFormatter: priceFormatter,\n            style: { textAlign: \"center\" },\n            filter: textFilter(),\n            formatter: (cell, row) => {\n                return (<div><Bonpayment codefacture={row} />  </div>);\n            },\n            sort: true\n\n        },\n\n        {\n            text: \"Valider Payment\",\n            dataField: \"mode_payement\",\n            headerFormatter: priceFormatter,\n            style: { textAlign: \"center\" },\n\n            filter: textFilter(),\n            formatter: (cell, row) => {\n                return (<div> <PaymentProvider factureid={row} reloaddata={() => getdata()} />    </div>);\n            },\n            sort: true\n\n        },\n\n\n\n\n\n\n\n\n\n    ];\n    // Delette(Provider) {\n    //     console.log(\"hellodelet\", Provider.id)\n    //     confirmAlert({\n    //         title: 'Confirm Delete',\n    //         message: 'Are you sure to do Delete?',\n    //         buttons: [\n    //             {\n    //                 label: 'Yes',\n    //                 onClick: () => {\n    //                     axios.delete(\"http://localhost:5000/api/v1/Providers/\" + Provider.id).then(() => {\n\n    //                         var array = [...this.state.Providers];\n    //                         var index = array.indexOf(Provider)\n    //                         if (index !== -1) {\n    //                             array.splice(index, 1);\n    //                             this.setState({ Providers: array });\n    //                         }\n\n\n    //                     })\n    //                 }\n    //             },\n    //             {\n    //                 label: 'No',\n    //                 onClick: null\n    //             }\n    //         ]\n    //     });\n    //     /*  */\n    // }\n    return (\n        <Aux>\n            <Row>\n                <Col>\n                    <Card>\n                        <Card.Header>\n                            <Card.Title as=\"h5\">Liste Facture    </Card.Title>\n                        </Card.Header>\n                        <Card.Body>\n                            {/* <Table striped responsive>\n                                    <thead>\n                                        <tr>\n                                        <th></th>\n                                            <th>Code Facture</th>\n                                            <th>Fournisseur</th>\n                                            <th>N. de téléphone</th>\n                                            <th>nb_colis</th>\n                                            <th>Total</th>\n                                            <th>frais_livraision</th>\n                                            <th>Montant pour fournisseur</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {Providers.map((Provider, index) => (\n\n                                            <tr key={Provider.code_facture}   >\n                                                <td>{Provider.status_facture ? \"Payé\" : 'Non Payé'} </td>\n                                                <td>{Provider.code_facture} </td>\n                                                <td> {Provider.provider.username} </td>\n                                                <td>{Provider.provider.phone_number} </td>\n                                                <td>{Provider.nb_colis} </td>\n                                                <td> {Provider.frais_livraision}   </td>\n                                                <td>{Provider.frais_total} </td>\n                                                <td>{Provider.frais_livraision - Provider.frais_total} </td>\n                                                <td> <Bonpayment codefacture={Provider} />  <Button onClick={()=>facture_payment(Provider.id)} >  <span className=\"fa fa-check-circle\"></span></Button>  </td>\n\n                                                \n                                            </tr>\n\n\n                                        ))}\n                                    </tbody>\n                                </Table> */}\n                            <BootstrapTable\n                                striped\n                                bordered\n                                hover\n                                variant=\"dark\"\n                                //   expandRow={expandRow}\n                                bootstrap4={true}\n                                keyField=\"id\"\n                                data={Providers}\n                                columns={columns}\n                                pagination={paginationFactory({\n                                    sizePerPage: 15,\n                                    sizePerPageList: [5, 10, 15, 20, 25],\n                                })}\n                                filter={filterFactory()}\n                                headerClasses=\"table thead-light mb-0\"\n                            ></BootstrapTable>\n\n                        </Card.Body>\n                    </Card>\n                </Col>\n            </Row>\n        </Aux>\n    );\n}\n\nexport default ListProviderFacture;"],"names":["name","label","onChange","onBlur","value","type","isInvalid","errors","touched","htmlFor","className","id","placeholder","i18n","getConfig","classes","extra","Tooltip","title","Array","isArray","map","e","placement","urlbackend","require","Yup","shape","email","required","phone_number","matches","city","min","max","description","code","props","useState","show","setShow","zone","handleClose","mode_payment","setmode_payment","order","setorder","useEffect","Button","variant","onClick","Modal","onHide","closeButton","factureid","Row","Col","md","InputGroup","FormControl","as","custom","target","CustomInput","console","log","Listcolis","config","headers","localStorage","getItem","axios","facture","then","response","data","alert","reloaddata","catch","priceFormatter","column","colIndex","sortElement","filterElement","style","display","flexDirection","text","Providers","setProviders","getdata","reverse","columns","dataField","headerFormatter","textAlign","filter","textFilter","formatter","cell","row","status_facture","UcFirst","sort","provider","username","frais_livraision","frais_total","moment","updated_at","format","Link","to","code_facture","codefacture","Card","striped","bordered","hover","bootstrap4","keyField","pagination","paginationFactory","sizePerPage","sizePerPageList","filterFactory","headerClasses"],"sourceRoot":""}