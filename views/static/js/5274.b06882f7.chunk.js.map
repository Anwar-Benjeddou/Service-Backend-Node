{"version":3,"file":"static/js/5274.b06882f7.chunk.js","mappings":"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","sources":["Routes/Admin/Barcode.Decision/Valid.pickup.js"],"sourcesContent":["// import React from 'react';\n\n\n// import { colourOptions } from '../data';\n\n// const animatedComponents = makeAnimated();\n\n// export default function AnimatedMulti() {\n//   return (\n\n//   );\n// }\n\n\nimport React, { Component } from \"react\";\nimport MultiSelect from \"@kenshooui/react-multi-select\";\nimport { InputGroup, Button, FormControl, Card } from \"react-bootstrap\";\nimport axios from \"axios\"\nimport Aux from \"../../../hoc/_Aux\";\nimport Select from 'react-select';\nimport makeAnimated from 'react-select/animated';\nimport \"@kenshooui/react-multi-select/dist/style.css\"\nimport { confirmAlert } from \"react-confirm-alert\";\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\nvar urlbackend = require(\"../../../env/env\")();\nconst animatedComponents = makeAnimated();\nclass ValidPickup extends Component {\n    constructor(props) {\n        super(props);\n        this.handleChange = this.handleChange.bind(this);\n        this.state = {\n            items: [],\n            selectedItems: [],\n            drivers: [],\n            iddriver: ''\n        };\n    }\n    componentDidMount() {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                'Access-Control-Allow-Headers': 'Authorization',\n                \"x-access-token\": localStorage.getItem('token'),\n                'Authorization': 'Bearer ' + localStorage.getItem('token'),\n            },\n        };\n        var getPendingPack = axios.get(urlbackend + \"/admin/pickup/done?current_page=1&per_page=500\", config);\n\n\n        var getdrivers = axios.get(urlbackend + \"/driver\", config);\n\n        axios\n            .all([getPendingPack, getdrivers])\n            .then(\n                axios.spread((...response) => {\n                    console.log(\"this respon list0\", response[0].data);\n                    console.log(\"this respon list1\", response[1].data);\n                    this.setState({ selectedItems: [] });\n                    this.setState({ drivers: response[1].data.data });\n                    this.setState({ items: response[0].data.data.data.map(e=>({value: e.id, label: e.colis.index_colis})) });\n\n                })\n            )\n            .catch((errors) => {\n                // react on errors.\n                console.error(errors);\n            });\n    }\n    //affectation des \"driver\" par groupe body : {driver:\"iddriver\" , package:[\"idpackage\", .....]  url \"/v3/package/edit/driver\" methode \"PUT\n    savedriver() {\n        //\n        confirmAlert({\n            title: 'Confirmer dispatch',\n            message: 'confirmer dispatch colis?',\n            buttons: [\n                {\n                    label: 'Yes',\n                    onClick: () => {\n                        console.log({\n                            driver: this.state.iddriver, package: this.state.selectedItems.map((e) => ({\n                                address: e.address,\n                                customer: e.id,\n                                provider: e.provider\n\n                            }))\n                        });\n\n\n\n                        const config = {\n                            headers: {\n                                'Content-Type': 'application/json',\n                                'Access-Control-Allow-Headers': 'Authorization',\n                                \"x-access-token\": localStorage.getItem('token'),\n                                'Authorization': 'Bearer ' + localStorage.getItem('token'),\n                            },\n                        };\n                        axios.post(urlbackend + \"/mobile/delivery/add\", { driver: this.state.iddriver, colis: this.state.selectedItems.map((e) => (e.id)) }, config)\n                            .then(response => {\n                                alert(\"add Succefull\")\n                                console.log(response.data)\n                                this.componentDidMount();\n                            })\n                            .catch(e => {\n                                console.log(e)\n                            })\n                    }\n                },\n                {\n                    label: 'No',\n                    onClick: null\n                }\n            ]\n        });\n\n\n    }\n    handleChange(selectedItems) {\n        this.setState({ selectedItems });\n    }\n    render() {\n        const { items, selectedItems } = this.state;\n        return (\n            <Aux>\n\n                <Button onClick={() => console.log(selectedItems)} > envoyer</Button>\n\n                <Card style={{ height: \"1000px\" }}>\n                    <InputGroup className=\"mb-3\">\n                        <FormControl\n                            as=\"select\"\n                            id=\"{this.state.driver}\"\n                            onChange={(e) =>\n                                this.setState({ iddriver: e.target.value })\n                            }\n                            custom\n                        >\n                            <option>Choisir un Chauffeur</option>\n\n                            {this.state.drivers.map((driver, index) => (\n                                <option\n                                    className=\" badge badge-info\"\n                                    key={driver.id}\n                                    value={driver.id}\n                                >\n                                    {driver.username}\n                                </option>\n                            ))}\n                        </FormControl>\n                    </InputGroup>\n\n                    <Select\n                        closeMenuOnSelect={false}\n                        components={animatedComponents}\n                        options={items}\n                        onChange={e=>console.log(e)}\n                    />\ntest\n                </Card>\n            </Aux>\n        );\n    }\n}\nexport default ValidPickup"],"names":["urlbackend","require","animatedComponents","makeAnimated","ValidPickup","props","handleChange","bind","state","items","selectedItems","drivers","iddriver","config","headers","localStorage","getItem","getPendingPack","axios","getdrivers","then","response","console","log","data","setState","map","e","value","id","label","colis","index_colis","catch","errors","error","confirmAlert","title","message","buttons","onClick","driver","package","address","customer","provider","alert","componentDidMount","this","style","height","className","as","onChange","target","custom","index","username","closeMenuOnSelect","components","options","Component"],"sourceRoot":""}