{"version":3,"file":"static/js/2226.fe87bedc.chunk.js","mappings":"mVAwBIA,EAAaC,EAAQ,MAARA,GACXC,GAAqBC,EAAAA,EAAAA,MACrBC,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GACF,WAAYC,GAAQ,IAAD,yBACf,cAAMA,IACDC,aAAe,EAAKA,aAAaC,MAAlB,WACpB,EAAKC,MAAQ,CACTC,MAAO,GACPC,cAAe,GACfC,QAAS,GACTC,SAAU,IAPC,EAqIlB,OA5HA,yCACD,WAAqB,IAAD,OACVC,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChB,+BAAgC,gBAChC,iBAAkBC,aAAaC,QAAQ,SACvC,cAAiB,UAAYD,aAAaC,QAAQ,WAGtDC,EAAiBC,IAAAA,IAAUlB,EAAa,iDAAkDa,GAI1FM,EAAaD,IAAAA,IAAUlB,EAAa,UAAWa,GAEnDK,IAAAA,IACS,CAACD,EAAgBE,IACrBC,KACGF,IAAAA,QAAa,WAAkB,IAAD,uBAAbG,EAAa,yBAAbA,EAAa,gBAC1BC,QAAQC,IAAI,oBAAqBF,EAAS,GAAGG,MAC7CF,QAAQC,IAAI,oBAAqBF,EAAS,GAAGG,MAC5C,EAAKC,SAAS,CAAEf,cAAc,KAC/B,EAAKe,SAAS,CAAEd,QAASU,EAAS,GAAGG,KAAKA,OAC1C,EAAKC,SAAS,CAAEhB,MAAOiB,OAAOC,OAAON,EAAS,GAAGG,KAAKA,KAAKA,MAAOI,QAAO,SAAAC,GAAC,OAAyB,IAAvBA,EAAEC,oBAAwBC,KAAI,SAAAF,GAAC,MAAG,CAACG,MAAO,WAAYC,MAAO,qBAIhJC,OAAM,SAACC,GAEJb,QAAQc,MAAMD,Q,wBAI1B,WAAc,IAAD,QAETE,EAAAA,EAAAA,IAAa,CACTC,MAAO,qBACPC,QAAS,4BACTC,QAAS,CACL,CACIP,MAAO,MACPQ,QAAS,WACLnB,QAAQC,IAAI,CAAEmB,OAAQ,EAAKlC,MAAMI,SAAU+B,QAAS,EAAKnC,MAAME,cAAcqB,KAAI,SAACF,GAAD,MAAQ,CACrFe,QAASf,EAAEe,QACXC,SAAUhB,EAAEiB,GACZC,SAAUlB,EAAEkB,eAMhB,IAAMlC,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChB,+BAAgC,gBAChC,iBAAkBC,aAAaC,QAAQ,SACvC,cAAiB,UAAYD,aAAaC,QAAQ,WAG1DE,IAAAA,KAAWlB,EAAa,uBAAwB,CAAC0C,OAAO,EAAKlC,MAAMI,SAAUoC,MAAM,EAAKxC,MAAME,cAAcqB,KAAI,SAACF,GAAD,OAAQA,EAAEiB,OAAOjC,GAC5HO,MAAK,SAAAC,GACF4B,MAAM,iBACN3B,QAAQC,IAAIF,EAASG,MACrB,EAAK0B,uBAERhB,OAAM,SAAAL,GACHP,QAAQC,IAAIM,QAI5B,CACII,MAAO,KACPQ,QAAS,WAMxB,0BACD,SAAa/B,GACTyC,KAAK1B,SAAS,CAAEf,cAAAA,MACnB,oBACD,WAAU,IAAD,OACL,EAAiCyC,KAAK3C,MAA9BC,EAAR,EAAQA,MAAR,EAAeC,cACf,OACI,UAAC,IAAD,YAEI,SAAC,IAAD,CAAQ+B,QAAS,kBAAMnB,QAAQC,IAAId,IAAnC,uBAEA,UAAC,IAAD,CAAM2C,MAAO,CAACC,OAAO,UAArB,WACI,SAAC,IAAD,CAAYC,UAAU,OAAtB,UACI,UAAC,IAAD,CACIC,GAAG,SACHT,GAAG,sBACHU,SAAU,SAAC3B,GAAD,OACN,EAAKJ,SAAS,CAAEb,SAAUiB,EAAE4B,OAAOzB,SAEvC0B,QAAM,EANV,WAQI,qDAECP,KAAK3C,MAAMG,QAAQoB,KAAI,SAACW,EAAQiB,GAAT,OACpB,mBACIL,UAAU,oBAEVtB,MAAOU,EAAOI,GAHlB,SAKKJ,EAAOkB,UAHHlB,EAAOI,aAS5B,SAAC,KAAD,CACde,mBAAmB,EACnBC,WAAY5D,EACZ6D,SAAO,EACPC,QAASvD,cAMV,EAtICL,CAA0B6D,EAAAA,WAwIhC","sources":["Routes/Admin/Barcode.Decision/Dispatch.Douchette.js"],"sourcesContent":["// import React from 'react';\n\n\n// import { colourOptions } from '../data';\n\n// const animatedComponents = makeAnimated();\n\n// export default function AnimatedMulti() {\n//   return (\n\n//   );\n// }\n\n\nimport React, { Component } from \"react\";\nimport MultiSelect from \"@kenshooui/react-multi-select\";\nimport { InputGroup, Button, FormControl, Card } from \"react-bootstrap\";\nimport axios from \"axios\"\nimport Aux from \"../../../hoc/_Aux\";\nimport Select from 'react-select';\nimport makeAnimated from 'react-select/animated';\nimport \"@kenshooui/react-multi-select/dist/style.css\"\nimport { confirmAlert } from \"react-confirm-alert\";\nimport \"react-confirm-alert/src/react-confirm-alert.css\"; \nvar urlbackend = require(\"../../../env/env\")();\nconst animatedComponents = makeAnimated();\nclass PackagesDecisions extends Component {\n    constructor(props) {\n        super(props);\n        this.handleChange = this.handleChange.bind(this);\n        this.state = {\n            items: [],\n            selectedItems: [],\n            drivers: [],\n            iddriver: ''\n        };\n    }\n    componentDidMount() {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                'Access-Control-Allow-Headers': 'Authorization',\n                \"x-access-token\": localStorage.getItem('token'),\n                'Authorization': 'Bearer ' + localStorage.getItem('token'),\n            },\n        };\n        var getPendingPack = axios.get(urlbackend + \"/admin/pickup/list?current_page=1&per_page=500\", config);\n\n\n\n        var getdrivers = axios.get(urlbackend + \"/driver\", config);\n\n        axios\n            .all([getPendingPack, getdrivers])\n            .then(\n                axios.spread((...response) => {\n                    console.log(\"this respon list0\", response[0].data);\n                    console.log(\"this respon list1\", response[1].data);\n                     this.setState({ selectedItems:[] });\n                    this.setState({ drivers: response[1].data.data });\n                    this.setState({ items: Object.values(response[0].data.data.data ).filter(e=>e.check_magasinier === 1).map(e=>({value: \"oceadddn\", label: \"Ocedddan\"}))  });\n\n                })\n            )\n            .catch((errors) => {\n                // react on errors.\n                console.error(errors);\n            });\n    }\n    //affectation des \"driver\" par groupe body : {driver:\"iddriver\" , package:[\"idpackage\", .....]  url \"/v3/package/edit/driver\" methode \"PUT\n    savedriver() {\n        //\n        confirmAlert({\n            title: 'Confirmer dispatch',\n            message: 'confirmer dispatch colis?',\n            buttons: [\n                {\n                    label: 'Yes',\n                    onClick: () => {\n                        console.log({ driver: this.state.iddriver, package: this.state.selectedItems.map((e) => ({\n                            address: e.address,\n                            customer: e.id,\n                            provider: e.provider\n                \n                        })) });\n                \n                \n                \n                        const config = {\n                            headers: {\n                                'Content-Type': 'application/json',\n                                'Access-Control-Allow-Headers': 'Authorization',\n                                \"x-access-token\": localStorage.getItem('token'),\n                                'Authorization': 'Bearer ' + localStorage.getItem('token'),\n                            },\n                        };\n                        axios.post(urlbackend + \"/mobile/delivery/add\", {driver:this.state.iddriver, colis:this.state.selectedItems.map((e) => (e.id))}, config)\n                            .then(response => {\n                                alert(\"add Succefull\")\n                                console.log(response.data)\n                                this.componentDidMount();\n                            })\n                            .catch(e => {\n                                console.log(e)\n                            })\n                    }\n                },\n                {\n                    label: 'No',\n                    onClick: null\n                }\n            ]\n        });\n    \n      \n    }\n    handleChange(selectedItems) {\n        this.setState({ selectedItems });\n    }\n    render() {\n        const { items, selectedItems } = this.state;\n        return (\n            <Aux>\n\n                <Button onClick={() => console.log(items)} > envoyer</Button>\n\n                <Card style={{height:\"1000px\"}}>\n                    <InputGroup className=\"mb-3\">\n                        <FormControl\n                            as=\"select\"\n                            id=\"{this.state.driver}\"\n                            onChange={(e) =>\n                                this.setState({ iddriver: e.target.value })\n                            }\n                            custom\n                        >\n                            <option>Choisir un Chauffeur</option>\n\n                            {this.state.drivers.map((driver, index) => (\n                                <option\n                                    className=\" badge badge-info\"\n                                    key={driver.id}\n                                    value={driver.id}\n                                >\n                                    {driver.username}\n                                </option>\n                            ))}\n                        </FormControl>\n                    </InputGroup>\n\n                    <Select\n      closeMenuOnSelect={false}\n      components={animatedComponents}\n      isMulti\n      options={items}\n    />\n                   \n                </Card>\n            </Aux>\n        );\n    }\n}\nexport default PackagesDecisions"],"names":["urlbackend","require","animatedComponents","makeAnimated","PackagesDecisions","props","handleChange","bind","state","items","selectedItems","drivers","iddriver","config","headers","localStorage","getItem","getPendingPack","axios","getdrivers","then","response","console","log","data","setState","Object","values","filter","e","check_magasinier","map","value","label","catch","errors","error","confirmAlert","title","message","buttons","onClick","driver","package","address","customer","id","provider","colis","alert","componentDidMount","this","style","height","className","as","onChange","target","custom","index","username","closeMenuOnSelect","components","isMulti","options","Component"],"sourceRoot":""}