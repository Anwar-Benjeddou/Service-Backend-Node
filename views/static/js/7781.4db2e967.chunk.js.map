{"version":3,"file":"static/js/7781.4db2e967.chunk.js","mappings":"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","sources":["Routes/Admin/Pickups/Pickup.admin.js","../node_modules/react-bootstrap/esm/DropdownButton.js","../node_modules/react-confirm-alert/lib/index.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n\n//import { PageTitle } from '../../layout-components';\nimport { IconButton, Box, Card, CardContent } from \"@material-ui/core\";\nimport { InputGroup, FormControl, Button, DropdownButton, Dropdown } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport { Row, Col, Tabs, Tab } from \"react-bootstrap\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport { CSVLink } from \"react-csv\";\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\nimport filterFactory, { textFilter } from 'react-bootstrap-table2-filter';\nimport TemplatePrintAdmin from '../../Template/TemplatePrintAdmin'\nimport QRcode from '../../QRcode/QRcode'\nimport * as FileSaver from 'file-saver';\nimport * as XLSX from 'xlsx';\nimport Aux from \"../../../hoc/_Aux\";\nimport MessageModal from \"./../../../Components/Alert/Alert\";\nimport ModalModifierColis from '../../ModificationColis/Modal.modification.colis'\nimport moment from \"moment\"\nimport i18n from './../../../i18n';\nimport { confirmAlert } from \"react-confirm-alert\";\n\nvar urlbackend = require(\"../../../env/env\")();\nconst fileType = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\nconst fileExtension = '.xlsx';\nfunction ListPickupAdmin() {\n\n\n    const [pendingPackages, setpendingPackages] = useState([])\n    const [ongoingPackages, setongoingPackages] = useState([])\n    const [enlevePackages, setenlevePackages] = useState([])\n    const [showMessageParams, setShowMessageParams] = useState({\n        display: false,\n        type: \"success\",\n        message: null\n    })\n    const [drivers, setdrivers] = useState([])\n    //  const [driver, setdriver] = useState([])\n    //     };\n    // }\n    function priceFormatter(column, colIndex, { sortElement, filterElement }) {\n        return (\n            <div style={{ display: 'flex', flexDirection: 'column' }}>\n                {filterElement}\n                {sortElement}<span className=\"fa fa-filter\"></span>\n                {column.text}\n              \n            </div>\n        );\n    }\n    const ModifierColis = (cell, row, rowIndex, formatExtraData) => {\n        return (\n            <div>\n\n                <ModalModifierColis colisModifier={row.colis} reloaddata={()=>getdata()}  > </ModalModifierColis>\n\n\n            </div>\n        );\n    };\n    const Impression = (cell, row, rowIndex, formatExtraData) => {\n        return (\n            <div>\n\n                <TemplatePrintAdmin Template={row} providerindex={row.colis.provider}  > </TemplatePrintAdmin>\n\n\n            </div>\n        );\n    };\n    const getdata = () => {\n\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                'Access-Control-Allow-Headers': 'Authorization',\n                \"x-access-token\": localStorage.getItem('token'),\n                'Authorization': 'Bearer ' + localStorage.getItem('token'),\n            },\n        };\n\n        /*    axios.get(\n              urlbackend + \"/package/pending?current_page=1&per_page=500\",\n              config\n          ).then((response)=>{\n              this.setState({ pendingPackages: response.data.data.data });\n              console.log(response.data)\n          })\n          axios.get(urlbackend + \"/driver\", config).then((response)=>{\n              this.setState({ drivers: response.data.data });\n\n          }) */\n        var getpendingPackages = axios.get(\n            urlbackend + \"/admin/pickup/pending?current_page=1&per_page=500\",\n            config\n        )\n        var getongoingpackage = axios.get(\n            urlbackend + \"/admin/pickup/ongoing?current_page=1&per_page=500\",\n            config\n        )\n        var getdonepackage = axios.get(\n            urlbackend + \"/admin/pickup/done?current_page=1&per_page=500\",\n            config\n        )\n\n        var getdrivers = axios.get(urlbackend + \"/driver\", config);\n        // setpendingPackages([]);\n        // setongoingPackages([]);\n        // setenlevePackages([]);\n        axios\n            .all([getpendingPackages, getdrivers, getongoingpackage, getdonepackage])\n            .then(\n                axios.spread((...response) => {\n                    console.log(\"this respon list0\", response[3].data);\n                    console.log(\"this respon list1\", response[1].data);\n                    setpendingPackages(response[0].data.data.data);\n                    setongoingPackages(response[2].data.data.data);\n                    setenlevePackages(response[3].data.data.data);\n                    setdrivers(response[1].data.data);\n\n                    /*     this.setState({ pendingPackages: response[0].data.data.data });\n                        this.setState({ ongoingPackages: response[1].data.content });\n                        this.setState({ enlevePackages: response[2].data.content });\n\n                        this.setState({ drivers: response[3].data.content }); */\n                })\n            )\n            .catch((errors) => {\n                // react on errors.\n                console.error(errors);\n            });\n    }\n    useEffect(() => {\n        getdata()\n    }, [])\n    const nextstep = (id) => {\n        setShowMessageParams({\n            display: false,\n            type: \"success\",\n            message: null\n        });\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                'Access-Control-Allow-Headers': 'Authorization',\n                \"x-access-token\": localStorage.getItem('token'),\n                'Authorization': 'Bearer ' + localStorage.getItem('token'),\n            },\n        };\n        axios.put(urlbackend + \"/forcing/pickup/to_done\", { \"colis\": id }, config).then((response) => {\n            setShowMessageParams({\n                display: true,\n                type: \"success\",\n                message: \"Forçage effectué avec succès !\"\n            });\n            getdata()\n\n\n        }).catch(() => {\n            setShowMessageParams({\n                display: true,\n                type: \"danger\",\n                message: \"Une erreur s'est produite lors du forçage !\"\n            });\n            console.log(\"no\")\n        })\n\n    }\n    const nextstepongoing = (id) => {\n        setShowMessageParams({\n            display: false,\n            type: \"success\",\n            message: null\n        });\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                'Access-Control-Allow-Headers': 'Authorization',\n                \"x-access-token\": localStorage.getItem('token'),\n                'Authorization': 'Bearer ' + localStorage.getItem('token'),\n            },\n        };\n        axios.put(urlbackend + \"/forcing/pickup/to_ongoing\", { \"colis\": id }, config).then((response) => {\n            setShowMessageParams({\n                display: true,\n                type: \"success\",\n                message: \"Forçage effectué avec succès !\"\n            });\n            getdata()\n\n\n        }).catch(() => {\n            setShowMessageParams({\n                display: true,\n                type: \"danger\",\n                message: \"Une erreur s'est produite lors du forçage !\"\n            });\n            console.log(\"no\")\n        })\n\n    }\n    const forcageongoing = (cell, row, rowIndex, formatExtraData) => {\n\n\n        return (\n            <Button\n                variant=\"warning\"\n                onClick={() => nextstepongoing(row.colis.id)}\n            >\n                {\" \"}\n                <span className=\"fa fa-forward\"></span>\n            </Button>\n        );\n    }\n    const forcagedone = (cell, row, rowIndex, formatExtraData) => {\n\n\n        return (\n            <Button\n                variant=\"warning\"\n                onClick={() => nextstep(row.colis.id)}\n            >\n                {\" \"}\n                <span className=\"fa fa-forward\"></span>\n            </Button>\n        );\n    }\n\n    const Annulationcolis = (cell, row, rowIndex, formatExtraData) => {\n        return (\n          <div>\n    \n            <Button\n              variant=\"danger\"\n              onClick={() => Annulercolis(row.id)}\n            >\n              {\" \"}\n              <span className=\"fa fa-trash\"></span>\n            </Button>\n    \n    \n    \n          </div>\n        );\n      };\n    \n  const Annulercolis = (id) => {\n    confirmAlert({\n      title: \"Annuler livraison\",\n      message: \"confirmer la suppression définitive?\",\n      buttons: [\n        {\n          label: \"Oui\",\n          onClick: () => {\n            axios\n              .put(urlbackend + \"/delete/pickup/\" + id)\n              .then((res) => {\n                console.log(res);\n                getdata()\n                //window.location.reload(true);\n              }).catch((e) => {\n                console.log(e)\n              })\n          },\n        },\n        {\n          label: \"Non\",\n          onClick: null,\n        },\n      ],\n    });\n}\n    const flowlink = (cell, row, rowIndex, formatExtraData) => {\n        //var k = drivers\n        return (\n            <InputGroup >\n                <FormControl\n                    as=\"select\"\n                    id=\"{driver}\"\n                    onChange={(value) =>\n                        savedriver(\n                            value.target.value,\n                            row.colis.id\n                        )\n                    }\n                    custom\n                >\n                    <option>Sélect chauffeur</option>\n\n                    {drivers.map((driver, index) => (\n                        <option\n                            className=\" badge badge-info\"\n                            key={driver.id}\n                            value={driver.id}\n                        >\n                            {driver.username}\n                        </option>\n                    ))}\n                </FormControl>\n            </InputGroup>\n        );\n    }\n\n    const columns = [\n        {\n            dataField: \"colis.index_colis\",\n            text: i18n.t('package-number'),\n            headerFormatter: priceFormatter,\n            filter: textFilter({placeholder:i18n.t('search')}),\n            sort:true\n\n        },\n        {\n            dataField: \"colis.provider.username\",\n            text: i18n.t('sender'),\n            formatter: (cell, row) => {\n                return (<div>{`${row.colis.provider?.username} `} <br></br> {`${row.colis.provider?.phone_number}`}</div>);\n            },\n            headerFormatter: priceFormatter,\n            filter: textFilter({placeholder:i18n.t('search')}),\n\n        },\n        {\n            dataField: \"colis.name_complete\",\n            text: i18n.t('client-name'),\n            headerFormatter: priceFormatter,\n            filter: textFilter({placeholder:i18n.t('search')}),\n\n\n        },\n        {\n            dataField: \"colis.address\",\n            text: i18n.t('address'),\n            headerFormatter: priceFormatter,\n            filter: textFilter({placeholder:i18n.t('search')}),\n\n            style: { textAlign: \"center\" },\n\n\n            formatter: (cell, row) => {\n                return (<div>{`${row.colis.gouvernorat} `} <br></br> {`${row.colis.address}`}</div>);\n            }\n            // formatter: this.linkFollow,\n\n        },\n        {\n            dataField: \"colis.phone_number\",\n            text: i18n.t('phone-number'),\n            headerFormatter: priceFormatter,\n            filter: textFilter({placeholder:i18n.t('search')}),\n            sort:true\n\n        },\n\n        {\n            dataField: \"driver.username\",\n            text: i18n.t('driver'),\n            headerFormatter: priceFormatter,\n            filter: textFilter({placeholder:i18n.t('search')}),\n\n        },\n\n\n\n       \n\n        {\n            dataField: \"colis.phone_number\",\n\n            text: i18n.t('action-event'),\n            style: { textAlign: \"center\" },\n            formatter: flowlink,\n            attrs: function callback(cell, row, rowIndex, colIndex) {\n                console.log(\"hello\")\n            },\n            headerStyle: (colum, colIndex) => {\n                return { width: '13%', textAlign: 'center' };\n              }\n        },\n        {\n            dataField: \"driver.username\",\n            text:i18n.t('next-step'),\n            formatter: forcageongoing,\n            style: { textAlign: \"center\" },\n\n        },\n        {\n            dataField: \"colis.name_complete\",\n            text:i18n.t('qr-code'),\n            formatter: (cell, row) => {\n                return (\n                    <div>\n\n                        <QRcode url={row.colis.id} />\n                    </div>\n                );\n            }\n\n\n        },\n        {\n            dataField: \"driver.username\",\n            text: i18n.t('print'),\n            formatter: Impression,\n            style: { textAlign: \"center\" },\n\n        },\n        {\n            dataField: \"colis\",\n            text: i18n.t('update'),\n            formatter: ModifierColis,\n            style: { textAlign: \"center\" },\n\n        },\n {\n      dataField: \"colis.type_envoi\",\n      text: \"Annulation\",\n      style: { textAlign: \"center\" },\n      formatter: Annulationcolis,\n\n    },\n\n        \n\n\n\n    ];\n    const columnsongoing = [\n        {\n            dataField: \"colis.index_colis\",\n            text:i18n.t('package-number'),\n            headerFormatter: priceFormatter,\n            filter: textFilter({placeholder:i18n.t('search')}),\n            sort:true\n\n        },\n        {\n            dataField: \"colis.provider.username\",\n            text: i18n.t('sender'),\n            formatter: (cell, row) => {\n                return (<div>{`${row.colis.provider?.username} `} <br></br> {`${row.colis.provider?.phone_number}`}</div>);\n            },\n            headerFormatter: priceFormatter,\n            filter: textFilter({placeholder:i18n.t('search')}),\n        },\n\n        {\n            dataField: \"colis.name_complete\",\n            text: i18n.t('client-name'),\n            \n            headerFormatter: priceFormatter,\n            filter: textFilter({placeholder:i18n.t('search')}),\n\n        },\n        {\n            dataField: \"colis.address\",\n            text: i18n.t('address'),\n\n            style: { textAlign: \"center\" },\n\n\n            formatter: (cell, row) => {\n                return (<div>{`${row.colis.gouvernorat} `} <br></br> {`${row.colis.city}`}</div>);\n            },\n            headerFormatter: priceFormatter,\n            filter: textFilter({placeholder:i18n.t('search')})\n        },\n        {\n            dataField: \"colis.phone_number\",\n            text: i18n.t('phone-number'),\n            headerFormatter: priceFormatter,\n            filter: textFilter({placeholder:i18n.t('search')})\n        },\n\n        {\n            dataField: \"driver.username\",\n            text: i18n.t('affected-driver'),\n            headerFormatter: priceFormatter,\n            filter: textFilter({placeholder:i18n.t('search')})\n        },\n       \n        {\n            dataField: \"driver.username\",\n            text: i18n.t('next-step'),\n            formatter: forcagedone,\n            style: { textAlign: \"center\" },\n\n        },\n        {\n            dataField: \"colis.name_complete\",\n            text: i18n.t('qr-code'),\n            formatter: (cell, row) => {\n                return (\n                    <div>\n\n                        <QRcode url={row.colis.id} />\n                    </div>\n                );\n            }\n\n\n        },\n        {\n            dataField: \"driver.username\",\n            text: i18n.t('print'),\n            formatter: Impression,\n            style: { textAlign: \"center\" },\n\n        },\n        {\n            dataField: \"colis\",\n            text:i18n.t('update'),\n            formatter: ModifierColis,\n            style: { textAlign: \"center\" },\n\n        },\n\n\n    ];\n    const columnsdone = [\n        {\n            dataField: \"colis.index_colis\",\n            text: i18n.t('package-number'),\n\n            headerFormatter: priceFormatter,\n            filter: textFilter({placeholder:i18n.t('search')})\n        },\n        {\n            dataField: \"colis.provider.username\",\n            text: i18n.t('sender'),\n            formatter: (cell, row) => {\n                return (<div>{`${row.colis.provider?.username} `} <br></br> {`${row.colis.provider?.phone_number}`}</div>);\n            },\n            headerFormatter: priceFormatter,\n            filter: textFilter({placeholder:i18n.t('search')})\n        },\n        {\n            dataField: \"colis.name_complete\",\n            text: i18n.t('client-name'),\n            headerFormatter: priceFormatter,\n            filter: textFilter({placeholder:i18n.t('search')})\n\n        },\n        {\n            dataField: \"colis.address\",\n            text: i18n.t('address'),\n\n            style: { textAlign: \"center\" },\n            headerFormatter: priceFormatter,\n            filter: textFilter({placeholder:i18n.t('search')}),\n\n            formatter: (cell, row) => {\n                return (<div>{`${row.colis.gouvernorat} `} <br></br> {`${row.colis.address}`}</div>);\n            }\n            // formatter: this.linkFollow,\n\n        },\n        {\n            dataField: \"colis.phone_number\",\n            text: i18n.t('phone-number'),\n            headerFormatter: priceFormatter,\n            filter: textFilter({placeholder:i18n.t('search')}),\n\n        },\n\n        {\n            dataField: \"driver.username\",\n            text: i18n.t('affected-driver'),\n            headerFormatter: priceFormatter,\n            filter: textFilter({placeholder:i18n.t('search')}),\n        },\n        {\n            dataField: \"driver.username\",\n            text: i18n.t('affected-driver'),\n            formatter: (cell, row) => {\n                return (<QRcode url={row.colis.id} />);\n            }\n\n        },\n\n        {\n            dataField: \"driver.username\",\n            text: i18n.t('check-stock'),\n            style: { textAlign: \"center\" },\n            formatter: (cell, row) => {\n\n                if (row.check_magasinier === 1) { return <i className=\"fa fa-circle text-c-green f-10 m-r-15\" /> } else {\n                    return <i className=\"fa fa-circle text-c-red f-10 m-r-15\" />\n                }\n            }\n        },\n     \n        {\n            dataField: \"driver.username\",\n            text: i18n.t('print'),\n            formatter: Impression,\n            style: { textAlign: \"center\" },\n\n        },\n        {\n            dataField: \"colis\",\n            text: i18n.t('update'),\n            formatter: ModifierColis,\n            style: { textAlign: \"center\" },\n\n        },\n\n    ];\n\n\n    const savedriver = (iddriver, idpacket) => {\n        setShowMessageParams({\n            display: false,\n            type: \"success\",\n            message: null\n        });\n\n        //\n        console.log({ driver: iddriver, coliss: [idpacket] })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                'Access-Control-Allow-Headers': 'Authorization',\n                \"x-access-token\": localStorage.getItem('token'),\n                'Authorization': 'Bearer ' + localStorage.getItem('token'),\n            },\n        };\n        axios.put(\n            urlbackend + \"/pikup/add/driver\",\n            { driver: iddriver, coliss: [idpacket] },\n            config\n        )\n            .then((response) => {\n                setShowMessageParams({\n                    display: true,\n                    type: \"success\",\n                    message: \"Chauffeur mis à jour avec succès !\"\n                });\n                console.log(\"add Succefull:\", showMessageParams.display);\n                //alert(\"add Succefull\");\n                console.log(\"response.data\", response.data);\n                getdata()\n\n                //this.componentDidMount();\n                //this.reloaddata()\n                //  this.setState({ drivers: [] });\n            })\n            .catch((e) => {\n                console.log(\"error data=>\", e);\n                setShowMessageParams({\n                    display: true,\n                    type: \"danger\",\n                    message: \"Une erreur s'est produite lors de mise à jour du chauffeur !\"\n                });\n            });\n    }\n    useEffect(() => {\n        // console.log(\"show message value:\",showMessage);\n    }, [showMessageParams]);\n    const downloadfile = (type, list) => {\n      if(type === \"csv\"){\n        var listdownload = list.map((e)=>({\"N° colis\": e.colis.index_colis , \"Expéditeur\": e.colis.provider.username ,\"Téléphone Expéditeur\" :e.colis.provider.phone_number ,\n\n    \"client \" : e.colis.name_complete , \"Téléphone\": e.colis.phone_number , \"gouvernorat\": e.colis.gouvernorat ,\"addresse\": e.colis.city+\":\" +e.colis.address ,\"prix\" : e.colis.price , \"type paiment\":e.colis.payment_mode ,\"type d'envoi\": e.colis.type_envoi,\n    \"date created\":moment(e.colis.created_at).format(\"DD/MM/YYYY, HH:mm\")\n    \n    }))\n        const ws = XLSX.utils.json_to_sheet(listdownload);\n        const wb = { Sheets: { 'data': ws }, SheetNames: ['data'] };\n        const excelBuffer = XLSX.write(wb, { bookType: 'xlsx', type: 'array' });\n        const data = new Blob([excelBuffer], {type: fileType});\n        FileSaver.saveAs(data, \"fileName\" + fileExtension);\n      }else{\n\n        alert(\"save pdf\")\n      }\n    }\n    // render() {\n    return (\n        <Aux>\n\n            <Row>\n                <Col>\n                    <button className=\"btn btn-info\" onClick={() => getdata()} > <span className=\"fa fa-refresh\"></span>  Actualiser</button>\n\n\n                    <hr />\n                    <Tabs defaultActiveKey=\"home\">\n                        <Tab eventKey=\"home\" title={i18n.t('status-waiting')}>\n                            {/* <div>value:{showMessage.toString()}</div> */}\n                            {showMessageParams.display && <MessageModal message={showMessageParams.message} design={showMessageParams.type} showit={showMessageParams.display} />}\n                            <Card className=\"card-box mb-4\">\n                                <div className=\"card-header\">\n                                    {/*   <Button\n                                        variant=\"success\"\n                                        onClick={() => nextstep(\"ee\")}\n                                    >\n                                        {\" \"}\n                                        <span className=\"fa fa-download\"></span>\n                                    </Button> */}\n                                    <DropdownButton\n                                        title={<span className=\"fa fa-download\"></span>}\n                                        variant=\"success\"\n                                        id={`dropdown-variants-success`}\n                                        key=\"success\"\n                                        onSelect={(e) => downloadfile(e, pendingPackages)}\n                                    >\n                                        <Dropdown.Item eventKey=\"pdf\">{i18n.t('pdf')}</Dropdown.Item>\n                                        <Dropdown.Item eventKey=\"csv\">{i18n.t('excel')} </Dropdown.Item>\n\n                                    </DropdownButton>\n                                    <div className=\"card-header--title\">\n                                        {/* <b>This table card has custom content</b> */}\n                                    </div>\n                                    <Box className=\"card-header--actions\">\n                                        <IconButton\n                                            size=\"small\"\n                                            color=\"primary\"\n                                            className=\"text-primary\"\n                                            title=\"View details\"\n                                        ></IconButton>\n                                    </Box>\n                                </div>\n                                <CardContent className=\"p-0\">\n                                    <div className=\"table-responsive\">\n                                        <div className=\"table-responsive\" style={{ height: \"100%\" }}>\n                                            <div className=\"app-row\">\n                                                <div className=\"app-col-xs-12 app-col-md-12\">\n                                                    <BootstrapTable\n                                                        striped\n                                                        bordered\n                                                        hover\n                                                        variant=\"dark\"\n                                                        //   expandRow={expandRow}\n                                                        bootstrap4={true}\n                                                        keyField=\"id\"\n                                                        data={pendingPackages}\n                                                        columns={columns}\n                                                        pagination={paginationFactory({\n                                                            sizePerPage: 10,\n                                                            sizePerPageList: [5, 10, 15, 20, 25],\n                                                        })}\n                                                        filter={filterFactory()}\n                                                        headerClasses=\"table thead-light mb-0\"\n                                                    ></BootstrapTable>\n\n\n\n\n                                                </div>\n                                            </div>\n                                        </div>\n                                        {/*      <table className=\"table  table-hover text-nowrap mb-0\">\n                                            <thead className=\"table thead-light mb-0\">\n                                                <tr>\n                                                    <th>Fournisseur</th>\n                                                    <th className=\"text-center\">customer</th>\n                                                    <th className=\"text-center\">address</th>\n                                                    <th className=\"text-center\">Chauffeur</th>\n                                                    <th className=\"text-center\">Date prélèvement</th>\n                                                    <th className=\"text-center\">Actions</th>\n                                                    <th className=\"text-center\"></th>\n                                                </tr>\n                                            </thead>\n                                            <tbody>\n                                                {pendingPackages.map((pickup, index) => (\n                                                    <tr key={index}>\n                                                        <td>\n                                                            <div className=\"d-flex align-items-center\">\n                                                                <a\n                                                                    href=\"#/\"\n                                                                    onClick={(e) => e.preventDefault()}\n                                                                    className=\"font-weight-bold text-black\"\n                                                                    title=\"...\"\n                                                                >\n\n                                                                    {pickup.check_replanification === 1 ? <i className=\"fa fa-circle text-c-red f-10 m-r-15\" /> : <i className=\"fa fa-circle text-c-green f-10 m-r-15\" />}\n                                                                    {pickup.colis.provider.username} :{\" \"}\n                                                                    {pickup.colis.provider.phone_number}\n                                                                </a>\n\n                                                            </div>\n                                                        </td>\n                                                        <td className=\"text-center\">\n                                                            <div className=\"h-auto \">\n                                                                {pickup.colis.name_complete} : {pickup.colis.phone_number}\n                                                                <span >\n\n                                                                </span>\n                                                            </div>\n                                                        </td>\n                                                        <td className=\"text-center\">\n                                                            <div className=\"h-auto \">\n                                                                {pickup.colis.code_postal} :{\" \"}\n                                                                {pickup.colis.address}\n                                                            </div>\n                                                        </td>\n                                                        <td className=\"text-center\">\n\n                                                            {pickup.driver\n                                                                ? pickup.driver.username\n                                                                : <div style={{ background: \"#e863da\" }}> \"not approved\" </div>}\n\n                                                        </td>\n                                                        <td className=\"text-center\">\n                                                            <div className=\"h-auto \">\n                                                                {pickup.colis.created_at}\n                                                            </div>\n                                                        </td>\n\n                                                        <td>\n                                                            <InputGroup className=\"mb-3\">\n                                                                <FormControl\n                                                                    as=\"select\"\n                                                                    id=\"{driver}\"\n                                                                    onChange={(value) =>\n                                                                        savedriver(\n                                                                            value.target.value,\n                                                                            pickup.colis.id\n                                                                        )\n                                                                    }\n                                                                    custom\n                                                                >\n                                                                    <option>Sélectionner un chauffeur</option>\n\n                                                                    {drivers.map((driver, index) => (\n                                                                        <option\n                                                                            className=\" badge badge-info\"\n                                                                            key={driver.id}\n                                                                            value={driver.id}\n                                                                        >\n                                                                            {driver.username}\n                                                                        </option>\n                                                                    ))}\n                                                                </FormControl>\n                                                            </InputGroup>\n                                                        </td>\n                                                        <td>\n\n                                                            <TemplatePrint Template={pickup} > </TemplatePrint>\n                                                        </td>\n                                                        <td>\n                                                            {/* <div className=\"h-auto  badge badge-danger\"> \n                          <button className=\"badge-info\" onClick={()=>this.savedriver()}>savedriver</button>\n\n                    </div> \n                        <div className=\" badge badge-danger\">\n                          delete\n\n                   </div> \n                                                        </td>\n                                                        <td className=\"text-center\">\n                                                            <Box>\n                                                                <IconButton color=\"primary\" size=\"small\">\n                                                                    {/* <FontAwesomeIcon icon={['fas', 'ellipsis-h']} /> \n                                                                </IconButton>\n                                                            </Box>\n                                                        </td>\n                                                    </tr>\n                                                ))}\n                                            </tbody>\n                                        </table>\n                                    */}\n                                    </div>\n                                </CardContent>\n                            </Card>\n                        </Tab>\n                        <Tab eventKey=\"profile\" title={i18n.t('status-engoing')}>\n                            <Card className=\"card-box mb-4\">\n                                <div className=\"card-header\">\n                                <DropdownButton\n                                        title={<span className=\"fa fa-download\"></span>}\n                                        variant=\"success\"\n                                        id={`dropdown-variants-success`}\n                                        key=\"success\"\n                                        onSelect={(e) => downloadfile(e, ongoingPackages)}\n                                    >\n                                        <Dropdown.Item eventKey=\"pdf\">pdf</Dropdown.Item>\n                                        <Dropdown.Item eventKey=\"csv\">excel </Dropdown.Item>\n\n                                    </DropdownButton>\n                                    <div className=\"card-header--title\">\n                                        {/* <b>This table card has custom content</b> */}\n                                    </div>\n                                    <Box className=\"card-header--actions\">\n                                        <IconButton\n                                            size=\"small\"\n                                            color=\"primary\"\n                                            className=\"text-primary\"\n                                            title=\"View details\"\n                                        ></IconButton>\n                                    </Box>\n                                </div>\n                                <CardContent className=\"p-0\">\n                                    <div className=\"table-responsive\">\n                                        \n                                        <div className=\"table-responsive\" style={{ height: \"2000px\" }}>\n                                            <div className=\"app-row\">\n                                                <div className=\"app-col-xs-12 app-col-md-12\">\n                                                    <BootstrapTable\n                                                        striped\n                                                        bordered\n                                                        hover\n                                                        variant=\"dark\"\n                                                        //   expandRow={expandRow}\n                                                        bootstrap4={true}\n                                                        keyField=\"id\"\n                                                        data={ongoingPackages}\n                                                        columns={columnsongoing}\n                                                        pagination={paginationFactory({\n                                                            sizePerPage: 15,\n                                                            sizePerPageList: [5, 10, 15, 20, 25],\n                                                        })}\n                                                        filter={filterFactory()}\n                                                        headerClasses=\"table thead-light mb-0\"\n                                                    ></BootstrapTable>\n\n                                                </div>\n                                            </div>\n                                        </div>\n                                        {/*      <table className=\"table  table-hover text-nowrap mb-0\">\n                                            <thead className=\"table thead-light mb-0\">\n                                                <tr>\n                                                    <th>Fournisseur</th>\n                                                    <th className=\"text-center\">customer</th>\n                                                    <th className=\"text-center\">address</th>\n                                                    <th className=\"text-center\">Chauffeur</th>\n                                                    <th className=\"text-center\">Date prélèvement</th>\n                                                    <th className=\"text-center\"></th>\n                                                    <th className=\"text-center\"></th>\n\n                                                </tr>\n                                            </thead>\n                                            <tbody>\n                                                {ongoingPackages.map((pickup, index) => (\n\n                                                    <tr key={index}>\n                                                        <td>\n                                                            <div className=\"d-flex align-items-center\">\n                                                                <a\n                                                                    href=\"#/\"\n                                                                    onClick={(e) => e.preventDefault()}\n                                                                    className=\"font-weight-bold text-black\"\n                                                                    title=\"...\"\n                                                                >\n\n                                                                    {pickup.check_replanification === \"1\" ? <i className=\"fa fa-circle text-c-red f-10 m-r-15\" /> : <i className=\"fa fa-circle text-c-green f-10 m-r-15\" />}\n                                                                    {pickup.colis.provider.username} :{\" \"}\n                                                                    {pickup.colis.provider.phone_number}\n                                                                </a>\n\n                                                            </div>\n                                                        </td>\n                                                        <td className=\"text-center\">\n                                                            <div className=\"h-auto \">\n                                                                {pickup.colis.name_complete} : {pickup.colis.phone_number}\n                                                                <span >\n\n                                                                </span>\n                                                            </div>\n                                                        </td>\n                                                        <td className=\"text-center\">\n                                                            <div className=\"h-auto \">\n                                                                {pickup.colis.code_postal} :{\" \"}\n                                                                {pickup.colis.address}\n                                                            </div>\n                                                        </td>\n                                                        <td className=\"text-center\">\n\n                                                            {pickup.driver\n                                                                ? pickup.driver.username\n                                                                : <div style={{ background: \"#e863da\" }}> </div>}\n\n                                                        </td>\n                                                        <td className=\"text-center\">\n                                                            <div className=\"h-auto \">\n                                                                {pickup.date_enlevement}\n                                                            </div>\n                                                        </td>\n\n\n                                                        <td>\n\n                                                           <TemplatePrint Template={pickup} > </TemplatePrint> \n                                                        </td>\n                                                        <td>\n                                                            {/* <div className=\"h-auto  badge badge-danger\"> \n                          <button className=\"badge-info\" onClick={()=>this.savedriver()}>savedriver</button>\n\n                    </div> \n                        <div className=\" badge badge-danger\">\n                          delete\n\n                   </div> \n                                                        </td>\n                                                        <td className=\"text-center\">\n                                                            <Box>\n                                                                <IconButton color=\"primary\" size=\"small\">\n                                                                    {/* <FontAwesomeIcon icon={['fas', 'ellipsis-h']} /> \n                                                                </IconButton>\n                                                            </Box>\n                                                        </td>\n                                                    </tr>\n                                                ))}\n                                            </tbody>\n                                        </table>\n                                    */}\n                                    </div>\n                                </CardContent>\n                            </Card>\n                        </Tab>\n                        <Tab eventKey=\"contact\" title={i18n.t('pickups')}>\n                            <Card className=\"card-box mb-4\">\n                                <div className=\"card-header\">\n                                <DropdownButton\n                                        title={<span className=\"fa fa-download\"></span>}\n                                        variant=\"success\"\n                                        id={`dropdown-variants-success`}\n                                        key=\"success\"\n                                        onSelect={(e) => downloadfile(e, enlevePackages)}\n                                    >\n                                        <Dropdown.Item eventKey=\"pdf\">pdf</Dropdown.Item>\n                                        <Dropdown.Item eventKey=\"csv\">excel </Dropdown.Item>\n\n                                    </DropdownButton>\n                                    <div className=\"card-header--title\">\n                                        {/* <b>This table card has custom content</b> */}\n                                    </div>\n                                    <Box className=\"card-header--actions\">\n                                        <IconButton\n                                            size=\"small\"\n                                            color=\"primary\"\n                                            className=\"text-primary\"\n                                            title=\"View details\"\n                                        ></IconButton>\n                                    </Box>\n                                </div>\n                                <CardContent className=\"p-0\">\n                                    <div className=\"table-responsive\">\n                                        <div className=\"table-responsive\" style={{ height: \"2000px\" }}>\n                                            <div className=\"app-row\">\n                                                <div className=\"app-col-xs-12 app-col-md-12\">\n                                                    <BootstrapTable\n                                                        striped\n                                                        bordered\n                                                        hover\n                                                        variant=\"dark\"\n                                                        //   expandRow={expandRow}\n                                                        bootstrap4={true}\n                                                        keyField=\"id\"\n                                                        data={enlevePackages}\n                                                        columns={columnsdone}\n                                                        pagination={paginationFactory({\n                                                            sizePerPage: 15,\n                                                            sizePerPageList: [5, 10, 15, 20, 25],\n                                                        })}\n                                                        filter={filterFactory()}\n                                                        headerClasses=\"table thead-light mb-0\"\n                                                    ></BootstrapTable>\n\n                                                </div>\n                                            </div>\n                                        </div>\n                                        {/* <table className=\"table  table-hover text-nowrap mb-0\">\n                                            <thead className=\"table thead-light mb-0\">\n                                                <tr>\n                                                    <th>Fournisseur</th>\n                                                    <th className=\"text-center\">Quantité</th>\n                                                    <th className=\"text-center\">address</th>\n                                                    <th className=\"text-center\">chauffeur</th>\n                                                    <th className=\"text-center\">Date prélèvement</th>\n                                                    <th className=\"text-center\">check_magasinier</th>\n\n                                                </tr>\n                                            </thead>\n                                            <tbody>\n                                                {enlevePackages.map((pickup, index) => (\n                                                    <tr key={index}>\n                                                        <td>\n                                                            <div className=\"d-flex align-items-center\">\n                                                                <a\n                                                                    href=\"#/\"\n                                                                    onClick={(e) => e.preventDefault()}\n                                                                    className=\"font-weight-bold text-black\"\n                                                                    title=\"...\"\n                                                                >\n\n                                                                    {pickup.check_replanification === \"1\" ? <i className=\"fa fa-circle text-c-red f-10 m-r-15\" /> : <i className=\"fa fa-circle text-c-green f-10 m-r-15\" />}\n                                                                    {pickup.colis.provider.username} :{\" \"}\n                                                                    {pickup.colis.provider.phone_number}\n                                                                </a>\n\n                                                            </div>\n                                                        </td>\n                                                        <td className=\"text-center\">\n                                                            <div className=\"h-auto \">\n                                                                {pickup.colis.name_complete} : {pickup.colis.phone_number}\n                                                                <span >\n\n                                                                </span>\n                                                            </div>\n                                                        </td>\n                                                        <td className=\"text-center\">\n                                                            <div className=\"h-auto \">\n                                                                {pickup.colis.code_postal} :{\" \"}\n                                                                {pickup.colis.address}\n                                                            </div>\n                                                        </td>\n                                                        <td className=\"text-center\">\n\n                                                            {pickup.driver\n                                                                ? pickup.driver.username\n                                                                : <div style={{ background: \"#e863da\" }}> </div>}\n\n                                                        </td>\n                                                        <td className=\"text-center\">\n                                                            <div className=\"h-auto \">\n                                                                {pickup.date_enlevement}\n                                                            </div>\n                                                        </td>\n                                                        <td className=\"text-center\">\n                                                            <div className=\"h-auto \">\n                                                                {pickup.check_magasinier === 1 ? <i className=\"fa fa-circle text-c-green f-10 m-r-15\" /> : <i className=\"fa fa-circle text-c-red f-10 m-r-15\" />}\n                                                            </div>\n                                                        </td>\n                                                        <td>\n\n                                                            <TemplatePrint Template={pickup} > </TemplatePrint> \n                                                        </td>\n                                                    </tr>\n                                                ))}\n                                            </tbody>\n                                        </table> */}\n                                    </div>\n                                </CardContent>\n                            </Card>\n                        </Tab>\n                    </Tabs>\n                </Col>\n            </Row>\n        </Aux>\n    );\n\n}\n\nexport default ListPickupAdmin;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"title\", \"children\", \"bsPrefix\", \"rootCloseEvent\", \"variant\", \"size\", \"menuAlign\", \"menuRole\", \"renderMenuOnMount\", \"disabled\", \"href\", \"id\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Dropdown from './Dropdown';\nimport DropdownToggle from './DropdownToggle';\nimport DropdownMenu, { alignPropType } from './DropdownMenu';\nvar propTypes = {\n  /**\n   * An html id attribute for the Toggle button, necessary for assistive technologies, such as screen readers.\n   * @type {string|number}\n   * @required\n   */\n  id: PropTypes.any,\n\n  /** An `href` passed to the Toggle component */\n  href: PropTypes.string,\n\n  /** An `onClick` handler passed to the Toggle component */\n  onClick: PropTypes.func,\n\n  /** The content of the non-toggle Button.  */\n  title: PropTypes.node.isRequired,\n\n  /** Disables both Buttons  */\n  disabled: PropTypes.bool,\n\n  /**\n   * Aligns the dropdown menu responsively.\n   *\n   * _see [DropdownMenu](#dropdown-menu-props) for more details_\n   *\n   * @type {\"left\"|\"right\"|{ sm: \"left\"|\"right\" }|{ md: \"left\"|\"right\" }|{ lg: \"left\"|\"right\" }|{ xl: \"left\"|\"right\"} }\n   */\n  menuAlign: alignPropType,\n\n  /** An ARIA accessible role applied to the Menu component. When set to 'menu', The dropdown */\n  menuRole: PropTypes.string,\n\n  /** Whether to render the dropdown menu in the DOM before the first time it is shown */\n  renderMenuOnMount: PropTypes.bool,\n\n  /**\n   *  Which event when fired outside the component will cause it to be closed.\n   *\n   * _see [DropdownMenu](#dropdown-menu-props) for more details_\n   */\n  rootCloseEvent: PropTypes.string,\n\n  /** @ignore */\n  bsPrefix: PropTypes.string,\n\n  /** @ignore */\n  variant: PropTypes.string,\n\n  /** @ignore */\n  size: PropTypes.string\n};\n/**\n * A convenience component for simple or general use dropdowns. Renders a `Button` toggle and all `children`\n * are passed directly to the default `Dropdown.Menu`. This component accepts all of\n * [`Dropdown`'s props](#dropdown-props).\n *\n * _All unknown props are passed through to the `Dropdown` component._ Only\n * the Button `variant`, `size` and `bsPrefix` props are passed to the toggle,\n * along with menu-related props are passed to the `Dropdown.Menu`\n */\n\nvar DropdownButton = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var title = _ref.title,\n      children = _ref.children,\n      bsPrefix = _ref.bsPrefix,\n      rootCloseEvent = _ref.rootCloseEvent,\n      variant = _ref.variant,\n      size = _ref.size,\n      menuAlign = _ref.menuAlign,\n      menuRole = _ref.menuRole,\n      renderMenuOnMount = _ref.renderMenuOnMount,\n      disabled = _ref.disabled,\n      href = _ref.href,\n      id = _ref.id,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(Dropdown, _extends({\n    ref: ref\n  }, props), /*#__PURE__*/React.createElement(DropdownToggle, {\n    id: id,\n    href: href,\n    size: size,\n    variant: variant,\n    disabled: disabled,\n    childBsPrefix: bsPrefix\n  }, title), /*#__PURE__*/React.createElement(DropdownMenu, {\n    align: menuAlign,\n    role: menuRole,\n    renderOnMount: renderMenuOnMount,\n    rootCloseEvent: rootCloseEvent\n  }, children));\n});\nDropdownButton.displayName = 'DropdownButton';\nDropdownButton.propTypes = propTypes;\nexport default DropdownButton;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _class, _temp2;\n\nexports.confirmAlert = confirmAlert;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _reactDom = require('react-dom');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar ReactConfirmAlert = (_temp2 = _class = function (_Component) {\n  _inherits(ReactConfirmAlert, _Component);\n\n  function ReactConfirmAlert() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, ReactConfirmAlert);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = ReactConfirmAlert.__proto__ || Object.getPrototypeOf(ReactConfirmAlert)).call.apply(_ref, [this].concat(args))), _this), _this.handleClickButton = function (button) {\n      if (button.onClick) button.onClick();\n      _this.close();\n    }, _this.handleClickOverlay = function (e) {\n      var _this$props = _this.props,\n          closeOnClickOutside = _this$props.closeOnClickOutside,\n          onClickOutside = _this$props.onClickOutside;\n\n      var isClickOutside = e.target === _this.overlay;\n\n      if (closeOnClickOutside && isClickOutside) {\n        onClickOutside();\n        _this.close();\n      }\n    }, _this.close = function () {\n      var afterClose = _this.props.afterClose;\n\n      removeBodyClass();\n      removeElementReconfirm();\n      removeSVGBlurReconfirm(afterClose);\n    }, _this.keyboardClose = function (event) {\n      var _this$props2 = _this.props,\n          closeOnEscape = _this$props2.closeOnEscape,\n          onKeypressEscape = _this$props2.onKeypressEscape;\n\n      var isKeyCodeEscape = event.keyCode === 27;\n\n      if (closeOnEscape && isKeyCodeEscape) {\n        onKeypressEscape(event);\n        _this.close();\n      }\n    }, _this.componentDidMount = function () {\n      document.addEventListener('keydown', _this.keyboardClose, false);\n    }, _this.componentWillUnmount = function () {\n      document.removeEventListener('keydown', _this.keyboardClose, false);\n      _this.props.willUnmount();\n    }, _this.renderCustomUI = function () {\n      var _this$props3 = _this.props,\n          title = _this$props3.title,\n          message = _this$props3.message,\n          buttons = _this$props3.buttons,\n          customUI = _this$props3.customUI;\n\n      var dataCustomUI = {\n        title: title,\n        message: message,\n        buttons: buttons,\n        onClose: _this.close\n      };\n\n      return customUI(dataCustomUI);\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(ReactConfirmAlert, [{\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var _props = this.props,\n          title = _props.title,\n          message = _props.message,\n          buttons = _props.buttons,\n          childrenElement = _props.childrenElement,\n          customUI = _props.customUI,\n          overlayClassName = _props.overlayClassName;\n\n\n      return _react2.default.createElement(\n        'div',\n        {\n          className: 'react-confirm-alert-overlay ' + overlayClassName,\n          ref: function ref(dom) {\n            return _this2.overlay = dom;\n          },\n          onClick: this.handleClickOverlay\n        },\n        _react2.default.createElement(\n          'div',\n          { className: 'react-confirm-alert' },\n          customUI ? this.renderCustomUI() : _react2.default.createElement(\n            'div',\n            { className: 'react-confirm-alert-body' },\n            title && _react2.default.createElement(\n              'h1',\n              null,\n              title\n            ),\n            message,\n            childrenElement(),\n            _react2.default.createElement(\n              'div',\n              { className: 'react-confirm-alert-button-group' },\n              buttons.map(function (button, i) {\n                return _react2.default.createElement(\n                  'button',\n                  { key: i, onClick: function onClick() {\n                      return _this2.handleClickButton(button);\n                    }, className: button.className },\n                  button.label\n                );\n              })\n            )\n          )\n        )\n      );\n    }\n  }]);\n\n  return ReactConfirmAlert;\n}(_react.Component), _class.propTypes = {\n  title: _propTypes2.default.string,\n  message: _propTypes2.default.string,\n  buttons: _propTypes2.default.array.isRequired,\n  childrenElement: _propTypes2.default.func,\n  customUI: _propTypes2.default.func,\n  closeOnClickOutside: _propTypes2.default.bool,\n  closeOnEscape: _propTypes2.default.bool,\n  willUnmount: _propTypes2.default.func,\n  afterClose: _propTypes2.default.func,\n  onClickOutside: _propTypes2.default.func,\n  onKeypressEscape: _propTypes2.default.func,\n  overlayClassName: _propTypes2.default.string\n}, _class.defaultProps = {\n  buttons: [{\n    label: 'Cancel',\n    onClick: function onClick() {\n      return null;\n    },\n    className: null\n  }, {\n    label: 'Confirm',\n    onClick: function onClick() {\n      return null;\n    },\n    className: null\n  }],\n  childrenElement: function childrenElement() {\n    return null;\n  },\n  closeOnClickOutside: true,\n  closeOnEscape: true,\n  willUnmount: function willUnmount() {\n    return null;\n  },\n  afterClose: function afterClose() {\n    return null;\n  },\n  onClickOutside: function onClickOutside() {\n    return null;\n  },\n  onKeypressEscape: function onKeypressEscape() {\n    return null;\n  }\n}, _temp2);\nexports.default = ReactConfirmAlert;\n\n\nfunction createSVGBlurReconfirm() {\n  // If has svg ignore to create the svg\n  var svg = document.getElementById('react-confirm-alert-firm-svg');\n  if (svg) return;\n  var svgNS = 'http://www.w3.org/2000/svg';\n  var feGaussianBlur = document.createElementNS(svgNS, 'feGaussianBlur');\n  feGaussianBlur.setAttribute('stdDeviation', '0.3');\n\n  var filter = document.createElementNS(svgNS, 'filter');\n  filter.setAttribute('id', 'gaussian-blur');\n  filter.appendChild(feGaussianBlur);\n\n  var svgElem = document.createElementNS(svgNS, 'svg');\n  svgElem.setAttribute('id', 'react-confirm-alert-firm-svg');\n  svgElem.setAttribute('class', 'react-confirm-alert-svg');\n  svgElem.appendChild(filter);\n\n  document.body.appendChild(svgElem);\n}\n\nfunction removeSVGBlurReconfirm(afterClose) {\n  var svg = document.getElementById('react-confirm-alert-firm-svg');\n  if (svg) {\n    svg.parentNode.removeChild(svg);\n  }\n  document.body.children[0].classList.remove('react-confirm-alert-blur');\n  afterClose();\n}\n\nfunction createElementReconfirm(properties) {\n  var divTarget = document.getElementById('react-confirm-alert');\n  if (divTarget) {\n    // Rerender - the mounted ReactConfirmAlert\n    (0, _reactDom.render)(_react2.default.createElement(ReactConfirmAlert, properties), divTarget);\n  } else {\n    // Mount the ReactConfirmAlert component\n    document.body.children[0].classList.add('react-confirm-alert-blur');\n    divTarget = document.createElement('div');\n    divTarget.id = 'react-confirm-alert';\n    document.body.appendChild(divTarget);\n    (0, _reactDom.render)(_react2.default.createElement(ReactConfirmAlert, properties), divTarget);\n  }\n}\n\nfunction removeElementReconfirm() {\n  var target = document.getElementById('react-confirm-alert');\n  if (target) {\n    (0, _reactDom.unmountComponentAtNode)(target);\n    target.parentNode.removeChild(target);\n  }\n}\n\nfunction addBodyClass() {\n  document.body.classList.add('react-confirm-alert-body-element');\n}\n\nfunction removeBodyClass() {\n  document.body.classList.remove('react-confirm-alert-body-element');\n}\n\nfunction confirmAlert(properties) {\n  addBodyClass();\n  createSVGBlurReconfirm();\n  createElementReconfirm(properties);\n}"],"names":["urlbackend","require","useState","pendingPackages","setpendingPackages","ongoingPackages","setongoingPackages","enlevePackages","setenlevePackages","display","type","message","showMessageParams","setShowMessageParams","drivers","setdrivers","priceFormatter","column","colIndex","sortElement","filterElement","style","flexDirection","className","text","ModifierColis","cell","row","rowIndex","formatExtraData","colisModifier","colis","reloaddata","getdata","Impression","Template","providerindex","provider","config","headers","localStorage","getItem","getpendingPackages","axios","getongoingpackage","getdonepackage","getdrivers","then","response","console","log","data","catch","errors","error","useEffect","Annulercolis","id","confirmAlert","title","buttons","label","onClick","res","e","columns","dataField","i18n","headerFormatter","filter","textFilter","placeholder","sort","formatter","username","phone_number","textAlign","gouvernorat","address","as","onChange","value","savedriver","target","custom","map","driver","index","attrs","headerStyle","colum","width","variant","nextstepongoing","url","columnsongoing","city","nextstep","columnsdone","check_magasinier","iddriver","idpacket","coliss","downloadfile","list","listdownload","index_colis","name_complete","price","payment_mode","type_envoi","moment","created_at","format","wb","Sheets","XLSX","SheetNames","excelBuffer","bookType","Blob","FileSaver","alert","defaultActiveKey","eventKey","design","showit","onSelect","size","color","height","striped","bordered","hover","bootstrap4","keyField","pagination","paginationFactory","sizePerPage","sizePerPageList","filterFactory","headerClasses","_excluded","propTypes","PropTypes","href","disabled","menuAlign","alignPropType","menuRole","renderMenuOnMount","rootCloseEvent","bsPrefix","DropdownButton","React","_ref","ref","children","props","_objectWithoutPropertiesLoose","Dropdown","_extends","DropdownToggle","childBsPrefix","DropdownMenu","align","role","renderOnMount","displayName","_class","_temp2","_createClass","defineProperties","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","Constructor","protoProps","staticProps","prototype","exports","properties","document","body","classList","add","getElementById","svgNS","feGaussianBlur","createElementNS","setAttribute","appendChild","svgElem","createSVGBlurReconfirm","divTarget","createElement","_reactDom","render","_react2","default","ReactConfirmAlert","createElementReconfirm","_react","_interopRequireDefault","_propTypes2","obj","__esModule","_classCallCheck","instance","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_Component","_temp","_this","this","_len","arguments","args","Array","_key","__proto__","getPrototypeOf","apply","concat","handleClickButton","button","close","handleClickOverlay","_this$props","closeOnClickOutside","onClickOutside","isClickOutside","overlay","afterClose","removeBodyClass","removeElementReconfirm","removeSVGBlurReconfirm","keyboardClose","event","_this$props2","closeOnEscape","onKeypressEscape","isKeyCodeEscape","keyCode","componentDidMount","addEventListener","componentWillUnmount","removeEventListener","willUnmount","renderCustomUI","_this$props3","customUI","onClose","subClass","superClass","create","constructor","setPrototypeOf","_inherits","_this2","_props","childrenElement","overlayClassName","dom","Component","string","array","isRequired","func","bool","defaultProps","svg","parentNode","removeChild","remove","unmountComponentAtNode"],"sourceRoot":""}