{"version":3,"file":"static/js/8978.4c4e583d.chunk.js","mappings":"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","sources":["Address/Gouvernerat.js","App/components/UcFirst.js","Components/CustomInput.js","Components/InputStatus.js","Routes/ModificationColis/Modification.colis.js","Routes/ModificationColis/Modal.modification.colis.js","Routes/Ticket/New.Valeur.Ticker.js","Routes/Ticket/List.Ticket.Details.js","../node_modules/file-saver/src/FileSaver.js","../node_modules/react-bootstrap/esm/CardImg.js","../node_modules/react-bootstrap/esm/Card.js","../node_modules/react-bootstrap/esm/Table.js"],"sourcesContent":["// const Address =[\n//     {    \n//         \"lang\": \"36.86250\",\n//         \"lat\": \"10.19556\",\n//         \"GOUV\": \"Ariana\"\n//     },\n//     {\n//         \"lang\": \"36.73333\",\n//         \"lat\": \"9.18333\",\n//         \"GOUV\": \"Béja\"\n//     },\n//     {\n//         \"lang\": \"36.75333\",\n//         \"lat\": \"10.2222\",\n//         \"GOUV\": \"Ben Arous\"\n//     },\n//     {\n//         \"lang\": \"37.29\",\n//         \"lat\": \"9.87\",\n//         \"GOUV\": \"Bizerte\"\n//     },\n//     {\n//         \"lang\": \"33.88333\",\n//         \"lat\": \"10.11667\",\n//         \"GOUV\": \"Gabès\"\n//     },\n//     {\n//         \"lang\": \"34.42500\",\n//         \"lat\": \"8.78417\",\n//         \"GOUV\": \"Gafsa\"\n//     },\n//     {\n//         \"lang\": \"36.50111\",\n//         \"lat\": \"8.77944\",\n//         \"GOUV\": \"Jendouba\"\n//     },\n//     {\n//         \"lang\": \"35.68\",\n//         \"lat\": \"10.10\",\n//         \"GOUV\": \"kairouan\"\n//     },\n//     {\n//         \"lang\": \"35.18\",\n//         \"lat\": \"8.83\",\n//         \"GOUV\": \"Kasserine\"\n//     },\n//     {\n//         \"lang\": \"33.70194\",\n//         \"lat\": \"8.97361\",\n//         \"GOUV\": \"Kebili\"\n//     },\n//     {\n//         \"lang\": \"36.19\",\n//         \"lat\": \"8.71\",\n//         \"GOUV\": \"El Kef\"\n//     },\n//     {\n//         \"lang\": \"35.52\",\n//         \"lat\": \"11.07\",\n//         \"GOUV\": \"Mahdia\"\n//     },\n//     {\n//         \"lang\": \"36.80778\",\n//         \"lat\": \"10.10111\",\n//         \"GOUV\": \"Manouba\"\n//     },\n//     {\n//         \"lang\": \"33.35\",\n//         \"lat\": \"10.49\",\n//         \"GOUV\": \"Medenine\"\n//     },\n//     {\n//         \"lang\": \"35.79\",\n//         \"lat\": \"10.82\",\n//         \"GOUV\": \"Monastir\"\n//     },\n//     {\n//         \"lang\": \"36.45000\",\n//         \"lat\": \"10.73333\",\n//         \"GOUV\": \"Nabeul\"\n//     },\n//     {\n//         \"lang\": \"34.74056\",\n//         \"lat\": \"10.76028\",\n//         \"GOUV\": \"Sfax\"\n//     },\n//     {\n//         \"lang\": \"35.04028\",\n//         \"lat\": \"9.49361\",\n//         \"GOUV\": \"Sidi Bouzid\"\n//     },\n//     {\n//         \"lang\": \"36.08333\",\n//         \"lat\": \"9.36667\",\n//         \"GOUV\": \"Siliana\"\n//     },\n//     {\n//         \"lang\": \"35.82556\",\n//         \"lat\": \"10.64111\",\n//         \"GOUV\": \"Sousse\"\n//     },\n//     {\n//         \"lang\": \"32.93333\",\n//         \"lat\": \"10.45000\",\n//         \"GOUV\": \"Tataouine\",\n        \n//     },\n//     {\n//         \"lang\": \"33.93\",\n//         \"lat\": \"8.13\",\n//         \"GOUV\": \"Tozeur\"\n//     },\n//     {\n//         \"lang\": \"36.80278\",\n//         \"lat\": \"10.17972\",\n//         \"GOUV\": \"Tunis\",\n//     },\n//     {\n//         \"lang\": \"36.40\",\n//         \"lat\": \"10.14\",\n//         \"GOUV\": \"zaghouan\"\n//     }\n// ]\nconst Address =[\n    {\n        \"delegation\":[ \"Carthage \",\" La Médina \",\" Bab Bhar \",\" Bab Souika \",\" Omrane \",\" Omrane Supérieur \",\" Attahrir \",\" El Menzah \",\" Cité Alkhadhra \",\" Bardo \",\" Séjoumi \",\" Azzouhour \",\" Alhrairia \",\" Sidi Hsine \",\" Ouardia \",\" Kabaria \",\" Sidi Elbéchir \",\" Jebel Jelloud \",\" La Goulette \",\" Le Kram \",\" La Marsa\"],\n        \"Nbre\": \"21\",\n        \"Gouvernorat\": \"TUNIS\"\n    },\n    {\n        \"delegation\":[ \"Ariana Ville \",\" Soukra \",\" Raouède \",\" Kalâat Andalous \",\" Sidi Thabet \",\" Cité Attadhamon \",\" M’nihla\"],\n        \"Nbre\": \"7\",\n        \"Gouvernorat\": \"ARIANA\"\n    },\n    {\n        \"delegation\":[ \"Manouba \",\" Oued Ellil \",\"Tebourba \",\" Battan \",\" Jedaida \",\" Mornaguia \",\" Borj Amri \",\" Douar Hicher\"],\n        \"Nbre\": \"8\",\n        \"Gouvernorat\": \"MANOUBA\"\n    },\n    {\n        \"delegation\":[ \"Ben Arous \",\" Nouvelle Médina \",\" Mourouj \",\" Hammam Lif \",\" Hammam Chatt \",\" Boumhel Bassatine \",\" Ezzahra \",\" Radès \",\" Megrine \",\" M’hamdia \",\" Fouchana \",\" Mornag\"],\n        \"Nbre\": \"12\",\n        \"Gouvernorat\": \"BEN AROUS\"\n    },\n    {\n        \"delegation\":[ \"Nabeul \",\" Dar Chaâbane Elfehri \",\" Béni Khiar \",\" Korba \",\" Menzel Temime \",\" Mida \",\" Kelibia \",\" Hammam Ghezaz \",\" Haouaria \",\" Takelsa \",\" Slimane \",\" Menzel Bouzelfa \",\" Béni Khalled \",\" Grombalia \",\" Bouârgoub \",\" Hammamet\"],\n        \"Nbre\": \"16\",\n        \"Gouvernorat\": \"NABEUL\"\n    },\n    {\n        \"delegation\":[ \"Bizerte Nord \",\" Jarzouna \",\" Bizerte Sud \",\" Sejnane \",\" Joumine \",\" Mateur \",\" Ghezala \",\" Menzel Bourguiba \",\" Tinja \",\" Utique \",\" Ghar El Melh \",\" Menzel Jemil \",\" El Alia \",\" Ras Jebel\"],\n        \"Nbre\": \"14\",\n        \"Gouvernorat\": \"BIZERTE\"\n    },\n    {\n        \"delegation\":[ \"Zaghouan \",\" Zériba \",\" Bir Mecharga \",\" Fahs \",\" Nadhour \",\" Saouaf\"],\n        \"Nbre\": \"6\",\n        \"Gouvernorat\": \"ZAGHOUAN\"\n    },\n    {\n        \"delegation\":[ \"Sousse Ville \",\" Zaouia Ksiba Thrayat \",\" Sousse Ryadh \",\" Sousse Jawhara \",\" Sousse Sidi Abdelhamid \",\" Hammam sousse \",\" Akouda \",\" Kalâa Elkébira \",\" Sidi Bouali \",\" Hergla \",\" Enfidha \",\" Bouficha \",\" Koundar \",\" Sidi Elheni \",\" Msaken \",\" Kalâa Ességhira\"],\n        \"Nbre\": \"16\",\n        \"Gouvernorat\": \"SOUSSE\"\n    },\n    {\n        \"delegation\":[ \"Monastir \",\" Ouerdanine \",\" Sahline \",\" Zéramdine \",\" Béni Hassan \",\" Jammel \",\" Benbla \",\" Moknine \",\" Bekalta \",\" Teboulba \",\" Ksar Helal \",\" Ksibet Medyouni \",\" Sayada Lamta Bouhjar\"],\n        \"Nbre\": \"13\",\n        \"Gouvernorat\": \"MONASTIR\"\n    },\n    {\n        \"delegation\":[ \"Mahdia \",\" Boumerdes \",\" Ouled Chamekh \",\" Chorbane \",\" Hbira \",\" Souassi \",\" Eljem \",\" Chebba \",\" Malloulech \",\" Sidi Alouane \",\" Ksour Essef\"],\n        \"Nbre\": \"11\",\n        \"Gouvernorat\": \"MAHDIA\"\n    },\n    {\n        \"delegation\":[ \"Sfax Ville \",\" Sfax Ouest \",\" Sakiet Ezzit \",\" Sakiet Eddaier \",\" Sfax sud \",\" Tina \",\" Agareb \",\" Jebeniana \",\"El Amra \",\" El Hencha \",\"Menzel chaker \",\" Ghraiba \",\" Bir Ali Ben Khelifa \",\" Sekhira \",\" Mahrès \",\" Kerkennah\"],\n        \"Nbre\": \"16\",\n        \"Gouvernorat\": \"SFAX\"\n    },\n    {\n        \"delegation\":[ \"Béja nord \",\" Béja sud \",\" Amdoun \",\" Nefza \",\" Teboursouk \",\" Tibar \",\" Testour \",\" Goubellat \",\" Mejez El Bab\"],\n        \"Nbre\": \"9\",\n        \"Gouvernorat\": \"BÉJA\"\n    },\n    {\n        \"delegation\":[ \"Jendouba \",\" Jendouba Nord \",\" Boussalem \",\" Tabarka \",\" Ain Drahem \",\" Fernana \",\" Ghardimaou \",\" Oued Mliz \",\" Balta Bouaouene\"],\n        \"Nbre\": \"9\",\n        \"Gouvernorat\": \"JENDOUBA\"\n    },\n    {\n        \"delegation\":[ \"Kef Ouest \",\" Kef Est \",\" Nebeur \",\" Sakiet Sidi Youssef \",\" Tejerouine \",\" Kalâat sinane \",\" Kalâa El khasba \",\" Jerissa \",\" Gsour \",\" Dahmani \",\" Le Sers\"],\n        \"Nbre\": \"11\",\n        \"Gouvernorat\": \"KEF\"\n    },\n    {\n        \"delegation\":[ \"Siliana nord \",\" Siliana sud \",\" Bouarada \",\"Gâafour \",\" El Aroussa \",\" Le Krib \",\" Bourouis \",\" Makther \",\" Rouhia \",\" Kesra \",\" Bargou\"],\n        \"Nbre\": \"11\",\n        \"Gouvernorat\": \"SILIANA\"\n    },\n    {\n        \"delegation\":[ \"Kairouan Nord \",\"Kairouan Sud \",\" Chebika \",\" Sebikha \",\" Oueslatia \",\" Haffouz \",\" El Ala \",\" Hajeb El Ayoun \",\" Nasrallah \",\" Cherarda \",\" Bouhajla\"],\n        \"Nbre\": \"11\",\n        \"Gouvernorat\": \"KAIROUAN\"\n    },\n    {\n        \"delegation\":[ \"Sidi Bouzid Ouest \",\" Sidi Bouzid Est \",\" Jelma \",\" Sabbalet Ouled Askar \",\" Bir Hfay \",\" Sidi Ali Benôun - Menzel Bouzayane \",\" Meknassi \",\" Souk Jedid \",\" Mezouna \",\" Regueb \",\" Ouled Haffouz\"],\n        \"Nbre\": \"12\",\n        \"Gouvernorat\": \"SIDI BOUZID\"\n    },\n    {\n        \"delegation\":[ \"Kasserine Nord \",\" Kasserine Sud \",\" Azzouhour \",\" Hassi ferid \",\" Sbitla \",\" Sbiba \",\" Jedliane \",\" El Ayoun \",\" Tela \",\" Hidra \",\" Foussana \",\" Feriana \",\" Mejel Bel Abbes\"],\n        \"Nbre\": \"13\",\n        \"Gouvernorat\": \"KASSERINE\"\n    },\n    {\n        \"delegation\":[ \"Gabès ville \",\" Gabès ouest \",\" Gabès sud \",\" Ghannouch \",\" Metouia \",\" Menzel habib \",\" Hamma \",\" Matmata \",\" Matmata nouvelle \",\" Mareth\"],\n        \"Nbre\": \"10\",\n        \"Gouvernorat\": \"GABÈS\"\n    },\n    {\n        \"delegation\":[ \"Mednine Nord \",\" Mednine Sud \",\" Béni khedach \",\" Ben Guerdene \",\" Zazis \",\" Jerba Houmet Souk \",\" Jerba Midoun \",\" Jerba Ajim \",\" Sidi Makhlouf\"],\n        \"Nbre\": \"9\",\n        \"Gouvernorat\": \"MEDENINE\"\n    },\n    {\n        \"delegation\":[ \"Gafsa Nord \",\" Sidi Aich \",\" El Ksar \",\" Gafsa Sud \",\" Moulares \",\" Redyef \",\" Métlaoui \",\" El Mdhilla \",\" El Guettar \",\" Belkhir \",\" Sned\"],\n        \"Nbre\": \"11\",\n        \"Gouvernorat\": \"GAFSA\"\n    },\n    {\n        \"delegation\":[ \"Tozeur \",\" Degueche \",\" Tameghza \",\" Nefta \",\" Hezoua\"],\n        \"Nbre\": \"5\",\n        \"Gouvernorat\": \"TOUZER\"\n    },\n    {\n        \"delegation\":[ \"Tataouine Nord \",\" Tataouine Sud \",\" Smar \",\" Bir Lahmer \",\" Ghomrassen \",\" Dhehiba \",\" Remada\"],\n        \"Nbre\": \"7\",\n        \"Gouvernorat\": \"TATAOUINE\"\n    },\n    {\n        \"delegation\":[ \"Kébili Sud \",\" Kébili Nord \",\" Souk El Ahad \",\" Douz nord \",\" Douz sud \",\" El Faouar\"],\n        \"Nbre\": \"6\",\n        \"Gouvernorat\": \"KÉBILI\"\n    }\n]\nexport default Address;","import React from 'react';\r\n\r\nclass UcFirst extends React.Component {\r\n    render() {\r\n        const string = this.props.text;\r\n        return string.charAt(0).toUpperCase() + string.slice(1);\r\n    }\r\n}\r\n\r\nexport default UcFirst;","import React from 'react';\nimport { InputGroup, FormControl} from 'react-bootstrap';\nimport InputStatus from './InputStatus';\n\nconst CustomInput = ({ name,label, onChange , onBlur, value,type, isInvalid, errors,touched\n  \n}) => {\n  \n    \n  return (\n   <>\n   {\n       label === 'Phone' ? (\n        <>   \n        <label htmlFor=\"basic-url\">{name} <InputStatus errors={errors} touched={touched}/></label>\n        \n       <InputGroup className=\"mb-3\">\n       <InputGroup.Prepend>\n          <InputGroup.Text id=\"basic-addon1\">+216</InputGroup.Text>\n        </InputGroup.Prepend>\n           <FormControl\n               placeholder={label}\n               aria-label={name}\n               aria-describedby={name}\n               onChange={onChange}\n               onBlur={onBlur}\n               value={value}\n               isInvalid={isInvalid}\n               label={label}\n               name={name}\n               type={type}\n   \n           />\n       </InputGroup>\n       </>\n        ):(\n            <>\n            \n            <label htmlFor=\"basic-url\">{label}  <InputStatus errors={errors} touched={touched}/></label>\n\n       <InputGroup className=\"mb-3\">\n   \n           <FormControl\n               placeholder={label}\n               aria-label={label}\n               aria-describedby={label}\n               onChange={onChange}\n               onBlur={onBlur}\n               value={value}\n               isInvalid={isInvalid}\n               label={label}\n               name={name}\n               type={type}\n\n               \n   \n           />\n       </InputGroup>\n       </>\n        )\n      \n   }\n    \n    </>  \n   \n  );\n};\nexport default CustomInput;","import React from 'react';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport '../assets/scss/index.scss';\nimport i18n from './../i18n';\n\nconst getConfig = (errors, touched) => {\n  if (!touched) {\n    return [];\n  }\n\n  \n\n  if (errors && touched) {\n    return ['fa-times-circle-o input-invalid', errors];\n  }\n\n  if (!errors && touched) {\n    return ['fa-check-circle-o input-valid', i18n.t('valid-field')];\n  }\n};\n\nconst InputStatus = ({ errors, touched }) => {\n  const [classes, extra] = getConfig(errors, touched);\n  \n  return (\n    <Tooltip\n      title={\n        !Array.isArray(extra) ? (\n          <span className=\"tooltip-message\">\n            {extra} <br />\n          </span>\n        ) : (\n          extra.map(e => (\n            <span className=\"tooltip-message\">\n              {e} <br />\n            </span>\n          ))\n        )\n      }\n      placement=\"right\">\n      <span>\n        <i className={'fa ' + classes} />\n      </span>\n    </Tooltip>\n  );\n};\n\nexport default InputStatus;","import React, { useEffect, useState } from \"react\";\nimport {\n    Row,\n    Col,\n    Card,\n    Button,\n    InputGroup,\n    FormControl,\n} from \"react-bootstrap\";\n\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport axios from \"axios\";\n\nimport Aux from \"../../hoc/_Aux\";\nimport CustomInput from \"../../Components/CustomInput\";\n\nimport InputStatus from \"../../Components/InputStatus\"\nimport Address from \"../../Address/Gouvernerat\"\n//import MessageModal from \"../../Components/Alert/Alert\";\n\nvar urlbackend = require(\"../../env/env\")();\n\n\nconst Modifiercolis = (props) => {\n    const [Zones, setZones] = useState([])\n    const [city, setcity] = useState([])\n    const [gouvernorat, setgouvernorat] = useState('')\n    // const [showMessageParams, setShowMessageParams] = useState({\n    //     display: false,\n    //     type: \"success\",\n    //     message: null\n    // })\n    useEffect(() => {\n\n\n\n    })\n\n\n\n\n    const choosedelegeation = (value) => {\n        setgouvernorat(value)\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Access-Control-Allow-Headers\": \"x-access-token\",\n                \"x-access-token\": localStorage.getItem('token'),\n                'Authorization': 'Bearer ' + localStorage.getItem('token'),\n            },\n        };\n\n        axios\n            .get(urlbackend + \"/zone\", config)\n            .then((response) => {\n                console.log(\"this respon list\", response.data);\n                setZones(response.data.data.filter(e => e.gouvernorat === value))\n            })\n            .catch((e) => {\n                console.log(e);\n            });\n    }\n\n\n\n\n    return (\n\n\n        <Aux>\n            <Row>\n                {/*             {showMessageParams.display && <MessageModal message={showMessageParams.message} design={showMessageParams.type} showit={showMessageParams.display} />}\n */}\n                <Col>\n                    <Card>\n                        <Card.Header>\n                            <Card.Title as=\"h5\">ModifierColis {props.colisModifier.index_colis}  </Card.Title>\n                        </Card.Header>\n                        <Card.Body>\n\n                            <Formik\n                                initialValues={{\n                                    name_complete: props.colisModifier.name_complete,\n                                    phone_number: props.colisModifier.phone_number,\n                                    code_postal: \"\",\n                                    email: \"\",\n                                    address:props.colisModifier.address ,\n                                    price: props.colisModifier.price,\n                                    type_envoi: props.colisModifier.type_envoi,\n                                    designation:props.colisModifier.designation,\n                                    lot:props.colisModifier.lot ,\n                                    gouvernorat: props.colisModifier.gouvernorat,\n                                    payment_status: props.colisModifier.payment_status,\n                                    payment_mode:  props.colisModifier.payment_mode,\n                                    city: props.colisModifier.city,\n\n                                }}\n                                validationSchema={\n                                    Yup.object().shape({\n                                        name_complete: Yup.string().max(255).required('Nom is required'),\n                                        phone_number: Yup.string().max(8).min(8).required('Nom is required'),\n                                        gouvernorat: Yup.string().max(255).required('Nom is required'),\n                                        //  email: Yup.string().max(255).required('Nom is required'),\n                                        address: Yup.string().max(255).required('Nom is required'),\n                                        price: Yup.string().max(255).required('Nom is required'),\n                                        designation: Yup.string().max(255).required('Nom is required'),\n\n\n                                    })\n                                }\n                                onSubmit={(values, { resetForm }) => {\n\n                                    console.log(values)\n                                    console.log(city)\n                                    console.log(gouvernorat)\n\n                                    const config = {\n                                        headers: {\n                                            'Content-Type': 'application/json',\n                                            'Access-Control-Allow-Headers': 'Authorization',\n                                            \"x-access-token\": localStorage.getItem('token'),\n                                            'Authorization': 'Bearer ' + localStorage.getItem('token'),\n                                        },\n                                    };\n                                    axios.put(urlbackend + \"/colis/update/\"+props.colisModifier.id, values, config)\n                                        .then(response => {\n                                            console.log(response.data)\n                                            alert(\"Modifier success\")\n                                            //  window.location.href = \"/datta-able/react/default/v3/Modifiercolis\"\n                                            resetForm()\n                                            props.reloaddata()\n\n                                        })\n                                        .catch(e => {\n                                            console.log(e)\n                                        })\n\n                                    // axios.post(urlpostuser + '/gestionnaire/add', {\n                                    //   lastname: values.lastName,\n                                    //   firstname: values.firstName,\n                                    //   addresse: values.addresse,\n                                    //   Phone: values.Phone,\n                                    //   email: values.email,\n                                    //   password: values.password,\n                                    //   typeroles:exercicest\n\n                                    // }).then((response) => {\n\n                                    //  if(response.data.code ===\"success\"){\n                                    //   alert(\"gestionnaire enrigstré\");\n                                    //   reloadthi()\n                                    //   handleClose()\n\n                                    //  }else {\n                                    //    alert(\"Adresse mail existe déjà\")\n                                    //  }\n\n\n\n                                    // }).catch(()=>{\n                                    //   alert(\"Adresse mail existe déjà\")\n\n                                    // })\n\n\n\n\n\n                                }}\n                            >\n                                {({\n                                    errors,\n                                    handleBlur,\n                                    handleChange,\n                                    handleSubmit,\n                                    isSubmitting,\n                                    touched,\n                                    values\n                                }) => (\n                                    <form onSubmit={handleSubmit}>\n\n                                        <Card>\n\n                                            <Aux>\n\n                                                <Row>\n                                                    <Col md={6}>\n                                                        <CustomInput\n                                                            name=\"name_complete\"\n                                                            onChange={handleChange}\n                                                            onBlur={handleBlur}\n                                                            value={values.name_complete}\n                                                            errors={errors.name_complete}\n                                                            touched={touched.name_complete}\n                                                            label=\"Nom et prénom\"\n                                                        />\n\n\n                                                        <CustomInput\n                                                            name=\"phone_number\"\n                                                            label=\"Tél.\"\n                                                            type=\"number\"\n                                                            onChange={handleChange}\n                                                            onBlur={handleBlur}\n                                                            value={values.phone_number}\n                                                            errors={errors.phone_number}\n                                                            touched={touched.phone_number}\n                                                        />\n\n                                                        {/*      <CustomInput\n                                                            name=\"code_postal\"\n                                                            label=\"Code postal\"\n                                                            onChange={handleChange}\n                                                            onBlur={handleBlur}\n                                                            value={values.code_postal}\n                                                            errors={errors.code_postal}\n                                                            touched={touched.code_postal}\n                                                            type=\"code_postal\"\n                                                        /> */}\n\n\n                                                        <label htmlFor=\"basic-url\">GOUVERNORAT <InputStatus errors={errors.gouvernorat} touched={touched.gouvernorat} /> </label>\n\n                                                        <InputGroup className=\"mb-3\">\n                                                            <FormControl\n                                                                as=\"select\"\n                                                                id=\"gouvernorat\"\n                                                                custom\n                                                                onChange={(e) => {\n                                                                    handleChange(e);\n                                                                    choosedelegeation(e.target.value);\n\n                                                                }\n                                                                }\n                                                                onBlur={handleBlur}\n                                                                value={values.gouvernorat}\n                                                                errors={errors.gouvernorat}\n                                                            >\n                                                                <option>GOUVERNORAT</option>\n\n                                                                {Address.map((zone, index) => (\n                                                                    <option onClick={(e) => choosedelegeation(e.target.value)} key={zone.Gouvernorat} value={zone.Gouvernorat}>\n                                                                        {zone.Gouvernorat}\n                                                                    </option>\n                                                                ))}\n                                                            </FormControl>\n                                                        </InputGroup>\n                                                        {/* <label htmlFor=\"basic-url\">Zone (Ville) <InputStatus errors={errors.zone} touched={touched.zone} /> </label>\n\n                                                        <InputGroup className=\"mb-3\">\n                                                            <FormControl\n                                                                as=\"select\"\n                                                                id=\"zone\"\n                                                                custom\n                                                                onChange={(e) => {\n                                                                    handleChange(e);\n                                                                    setcity(e.target.value);\n\n                                                                }\n                                                                }\n                                                                onBlur={handleBlur}\n                                                                value={values.zone}\n                                                                errors={errors.zone}\n                                                            >\n                                                                <option>zone</option>\n\n                                                                {Zones.map((zone, index) => (\n                                                                    <option onClick={(e) => setcity(Zones[index].city)} key={zone.city} value={Zones[index].city}>\n                                                                        {zone.city}\n                                                                    </option>\n                                                                ))}\n                                                            </FormControl>\n                                                        </InputGroup> */}\n                                                        {/* <CustomInput\n                                                            name=\"ville address\"\n                                                            label=\"Délegation ou ville\"\n                                                            onChange={handleChange}\n                                                            onBlur={handleBlur}\n                                                            value={values.city}\n                                                            errors={errors.city}\n                                                            touched={touched.city}\n                                                        /> */}\n\n                                                        <CustomInput\n                                                            name=\"address\"\n                                                            label=\"Addresse\"\n                                                            onChange={handleChange}\n                                                            onBlur={handleBlur}\n                                                            value={values.address}\n                                                            errors={errors.address}\n                                                            touched={touched.address}\n                                                        />\n\n\n                                                    </Col>\n                                                    <Col md={6}>\n                                                        {/*     <CustomInput\n                                                            name=\"email\"\n                                                            label=\"E-mail\"\n                                                            onChange={handleChange}\n                                                            onBlur={handleBlur}\n                                                            value={values.email}\n                                                            errors={errors.email}\n                                                            touched={touched.email}\n                                                        /> */}\n                                                        {/*   <CustomInput\n                                            name=\"payement\"\n                                            label=\"payement\"\n                                            onChange={handleChange}\n                                            onBlur={handleBlur}\n                                            value={values.payement}\n                                            touched={touched.payement}\n                                        />  */}\n                                                        {/* <label htmlFor=\"basic-url\">Paiement</label>\n\n                                                        <InputGroup className=\"mb-3\">\n                                                            <FormControl\n                                                                as=\"select\"\n                                                                id=\"payment_status\"\n                                                                custom\n\n                                                                onChange={handleChange}\n                                                                onBlur={handleBlur}\n                                                                value={values.payment_status}\n                                                            >\n                                                                <option>choisir le statut de paiement</option>\n\n                                                                {[{ statepay: \"colis Payé\", valuep: \"0\" }, { statepay: \"non Payé\", valuep: \"1\" }].map((zone, index) => (\n                                                                    <option key={zone.statepay} value={zone.valuep}>\n                                                                        {zone.statepay}\n                                                                    </option>\n                                                                ))}\n                                                            </FormControl>\n                                                        </InputGroup> */}\n                                                        {values.payment_status ===\"1\" && <CustomInput\n                                                            name=\"price\"\n                                                            label=\"Prix\"\n                                                            type=\"number\"\n                                                            onChange={handleChange}\n                                                            onBlur={handleBlur}\n                                                            value={values.price}\n                                                            touched={touched.price}\n                                                            errors={errors.price}\n                                                            readOnly\n                                                        />\n                                                        }\n\n                                                        <label htmlFor=\"basic-url\">Mode de paiement</label>\n\n                                                        <InputGroup className=\"mb-3\">\n                                                            <FormControl\n                                                                as=\"select\"\n                                                                id=\"payment_mode\"\n                                                                custom\n                                                                onChange={handleChange}\n                                                                onBlur={handleBlur}\n                                                                value={values.payment_mode}\n                                                            >\n                                                                <option>choisir le mode de paiement</option>\n\n                                                                {[\"espèces\", \"chèque\", \"espèces ou chèque\"].map((zone, index) => (\n                                                                    <option key={zone} value={zone}>\n                                                                        {zone}\n                                                                    </option>\n                                                                ))}\n                                                            </FormControl>\n                                                        </InputGroup>\n                                                        <label htmlFor=\"basic-url\">type_envoi <InputStatus errors={errors.type_envoi} touched={touched.type_envoi} /></label>\n\n                                                        <InputGroup className=\"mb-3\">\n                                                            <FormControl\n                                                                as=\"select\"\n                                                                id=\"type_envoi\"\n                                                                custom\n                                                                onChange={handleChange}\n                                                                onBlur={handleBlur}\n                                                                value={values.Formateur}\n                                                            >\n                                                                <option>type envoi</option>\n\n                                                                {[\"LIVRAISON A DOMICILE\", \"ECHANGE\", \"RECUPERATION\"].map((type_envoi, index) => (\n                                                                    <option key={type_envoi} value={type_envoi}>\n                                                                        {type_envoi}\n                                                                    </option>\n                                                                ))}\n                                                            </FormControl>\n                                                        </InputGroup>\n                                                        <CustomInput\n                                                            name=\"designation\"\n                                                            label=\"designation\"\n                                                            onChange={handleChange}\n                                                            onBlur={handleBlur}\n                                                            value={values.designation}\n                                                            touched={touched.designation}\n                                                            errors={errors.designation}\n\n                                                        />\n\n                                                        <CustomInput\n                                                            name=\"lot\"\n                                                            label=\"lot\"\n                                                            type=\"number\"\n                                                            onChange={handleChange}\n                                                            onBlur={handleBlur}\n                                                            value={values.lot}\n                                                            touched={touched.lot}\n                                                            errors={errors.lot}\n\n                                                        />\n\n\n\n\n\n                                                    </Col>\n                                                    <Col>\n                                                        <Button\n\n                                                            type=\"submit\"\n                                                            color=\"info\"\n                                                            variant=\"info\"\n                                                        >\n                                                            Confirmer\n                                                        </Button>\n                                                    </Col>\n\n                                                </Row>\n                                            </Aux>\n\n                                        </Card>\n\n                                    </form>\n\n                                )}\n\n                            </Formik>\n                        </Card.Body>\n                    </Card>\n                </Col>\n\n            </Row>\n        </Aux>\n\n    );\n};\n\n\nexport default Modifiercolis;\n\n","\nimport React, { useEffect, useState } from 'react';\nimport {\n\n    Button,\n    Modal,\n\n} from \"react-bootstrap\";\nimport \"./style.css\";\nimport Modifiercolis from './Modification.colis'\n\nfunction ModalModifierColis(props) {\n    const [show, setShow] = useState(false);\n    //const [pickupsUpdate] = useState(props.pickup)\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n    useEffect(() => {\n    }, [])\n\n    return (\n        <>\n            <Button style={{background:\"#a958f4\"}}\n                onClick={handleShow}> <span className=\"fa fa-pencil\"></span></Button>\n\n\n            <Modal dialogClassName=\"my-modal\" show={show} onHide={handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title> </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    \n              <Modifiercolis  colisModifier ={ props.colisModifier} reloaddata={()=>{props.reloaddata();handleClose()}} /> \n         \n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        Close\n                    </Button>\n                    {/* <Button variant=\"primary\" onClick={handleClose}>\n            Save Changes\n            </Button> */}\n                </Modal.Footer>\n            </Modal>\n        </>\n    );\n}\n\nexport default ModalModifierColis","\nimport React, { useEffect, useState } from 'react';\nimport {\n\n    Button,\n    Modal,\n    Table\n\n} from \"react-bootstrap\";\nimport i18n from './../../i18n';\n\nimport \"./style.css\";\n\n\nfunction NewValeurTicket(props) {\n    const [show, setShow] = useState(false);\n    const [newVaue, setnewvalue] = useState({})\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n    useEffect(() => {\n        setnewvalue(JSON.parse((props.ticket.value)))\n    }, [])\n\n    return (\n        <>\n            <Button variant=\"secondary\"\n                onClick={handleShow}> <span className=\"fa fa-list\"></span></Button>\n\n\n            <Modal dialogClassName=\"my-modal\" show={show} onHide={handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title> Les Valeurs à changer </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Table striped responsive>\n                        <thead>\n                            <tr>\n                            \n                            </tr>\n                        </thead>\n                        <tbody>\n\n                            <tr >\n                                <td> {i18n.t('address')}</td>\n                                <td>{newVaue.address} </td>\n\n                            </tr>\n                            <tr >\n                                <td> {i18n.t('city-delegation')}</td>\n                                <td>{newVaue.city} </td>\n\n                            </tr>\n                            <tr >\n                                <td> {i18n.t('governorate')}</td>\n                                <td>{newVaue.gouvernorat} </td>\n\n                            </tr>\n                            <tr >\n                                <td> {i18n.t('payment-type')}</td>\n                                <td>{newVaue.payment_mode} </td>\n\n                            </tr>\n\n                            <tr >\n                                <td> {i18n.t('price')}</td>\n                                <td>{newVaue.price}</td>\n\n                            </tr>\n                        \n\n                        </tbody>\n                    </Table>\n\n\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        Close\n                    </Button>\n                    {/* <Button variant=\"primary\" onClick={handleClose}>\n            Save Changes\n            </Button> */}\n                </Modal.Footer>\n            </Modal>\n        </>\n    );\n}\n\nexport default NewValeurTicket","// import axios from 'axios';\n// import React, { useEffect, useState } from 'react';\n// import { Tab, Nav } from 'react-bootstrap';\n// import {\n//     Row,\n//     Col,\n//     Card,\n//     Button\n// } from \"react-bootstrap\";\n// import Aux from \"../../hoc/_Aux\";\n// import PoitionColis from './Position.Colis'\n// import FlatList from 'flatlist-react';\n// var urlbackend = require(\"../../env/env\")();\n// const divStyle = {\n//     \"overflow-y\": 'scroll',\n//     \"border\": '1px solid ',\n//     \"height\": '1000px',\n//     \"with\": \"100%\",\n//     \"position\": 'relative'\n// };\n// function ListticketDetails() {\n//     const [ticket, setticket] = useState([])\n//     const [ticketraite, setticketraite] = useState([])\n\n//     const getticket = () => {\n//         const config = {\n//             headers: {\n//                 'Content-Type': 'application/json',\n//                 'Access-Control-Allow-Headers': 'Authorization',\n//                 \"x-access-token\": localStorage.getItem('token'),\n//                 'Authorization': 'Bearer ' + localStorage.getItem('token'),\n//             },\n//         };\n//         axios.get(urlbackend + \"/ticket/list?current_page=1&per_page=500\", config).then((response) => {\n//             setticket(response.data.data.data)\n//             setticketraite(response.data.data.data.filter(e => e.status !== 0))\n//             console.log(response.data.data.data)\n\n//         }).catch(() => {\n//             console.log(\"'eeh\")\n//         })\n//     }\n//     const renderTicket = (person, idx) => {\n//         return (\n//             <Col md={4}>\n//                 <Card  >\n//                     <Card.Title> {person.code}</Card.Title>\n//                     <Card.Body>{person.type}\n\n\n//                         <p style={{ fontWeight: \"bold\" }} >{person.message}</p>\n//                         <PoitionColis id={person.colis} />\n\n//                     </Card.Body>\n//                 </Card>\n//             </Col>\n//         );\n//     }\n//     useEffect(() => {\n\n//         getticket()\n\n//     }, [])\n\n//     const updateicket = (id) => {\n//         console.log(id)\n//         const config = {\n//             headers: {\n//                 'Content-Type': 'application/json',\n//                 'Access-Control-Allow-Headers': 'Authorization',\n//                 \"x-access-token\": localStorage.getItem('token'),\n//                 'Authorization': 'Bearer ' + localStorage.getItem('token'),\n//             },\n//         };\n//         axios.put(urlbackend + \"/ticket/close/\" + id, config).then((response) => {\n//             getticket()\n\n//         }).catch(() => {\n//             console.log(\"'eeh\")\n//         })\n\n//     }\n//     const validerTickey = (id) => {\n\n//         const config = {\n//             headers: {\n//                 'Content-Type': 'application/json',\n//                 'Access-Control-Allow-Headers': 'Authorization',\n//                 \"x-access-token\": localStorage.getItem('token'),\n//                 'Authorization': 'Bearer ' + localStorage.getItem('token'),\n//             },\n//         };\n//         axios.put(urlbackend + \"/ticket/valid/\" + id, config).then((response) => {\n//             getticket()\n\n//         }).catch(() => {\n//             console.log(\"'eeh\")\n//         })\n\n//     }\n\n//     const setcolor = (id) => {\n//         switch (id) {\n//             case \"0\":\n//                 return \"#d8d9e1\"\n//             case \"1\":\n//                 return \"#c5e89d\"\n//             case \"2\":\n//                 return \"#e29de8\"\n//             default:\n//                 break;\n//         }\n\n//     }\n//     return (\n\n//             <Aux>\n//                 <Tab.Container defaultActiveKey=\"home\">\n//                     <Row>\n//                         <Col sm={2}>\n//                             <Nav variant=\"pills\" className=\"flex-column\">\n//                                 <Nav.Item>\n//                                     <Nav.Link eventKey=\"home\">Ticket en cours</Nav.Link>\n//                                 </Nav.Item>\n//                                 <Nav.Item>\n//                                     <Nav.Link eventKey=\"profile\">Ticket Traités</Nav.Link>\n//                                 </Nav.Item>\n//                               {/*   <Nav.Item>\n//                                     <Nav.Link eventKey=\"contact\">CONTACT</Nav.Link>\n//                                 </Nav.Item>\n//                                 <Nav.Item>\n//                                     <Nav.Link eventKey=\"settings\">SETTINGS</Nav.Link>\n//                                 </Nav.Item> */}\n//                             </Nav>\n//                         </Col>\n//                         <Col sm={10}>\n//                             <Tab.Content>\n//                                 <Tab.Pane eventKey=\"home\">\n//                                     <Row style={{ height: \"1000px\" }}>\n//                                         <Col md={12} style={divStyle}>\n//                                             <Row >\n\n//                                                 {ticket.map(ele => (\n//                                                     <Col md={12}>\n//                                                         <Card style={{ backgroundColor: setcolor(ele.priority) }} >\n//                                                             <Card.Title style={{ fontWeight: \"bold\", color: \"#000000\" }}> {ele.code} colis : {ele?.colis.index_colis} </Card.Title>\n//                                                             <Card.Body style={{ fontWeight: \"bold\", color: \"#000000\" }}>{ele.type}\n\n\n//                                                                 <p style={{ fontWeight: \"bold\", color: \"#000000\" }} >{ele.message}</p>\n//                                                                 <p style={{ fontWeight: \"bold\", color: \"#000000\" }} >{ele.colis.index_colis}</p>\n//                                                                 <div>\n//                                                                     <PoitionColis id={ele.colis} />\n//                                                                     <Button style={{ backgroundColor: \"#8c948c\" }} onClick={() => updateicket(ele.id)} > fermer </Button>\n//                                                                     <Button style={{ backgroundColor: \"#8c948c\" }} onClick={() => validerTickey(ele.id)} > Valider </Button>\n//                                                                 </div>\n//                                                             </Card.Body>\n//                                                         </Card>\n//                                                     </Col>\n\n//                                                 ))}\n//                                             </Row>\n\n//                                         </Col>\n\n\n\n\n//                                     </Row>\n//                                 </Tab.Pane>\n//                                 <Tab.Pane eventKey=\"profile\">\n//                                     <Row style={{ height: \"1000px\" }}>\n//                                         <Col md={12} style={divStyle}>\n//                                             <Row >\n\n//                                                 <FlatList\n//                                                     list={ticketraite}\n//                                                     renderItem={renderTicket}\n//                                                     renderWhenEmpty={() => <div>List is empty!</div>}\n//                                                     sortBy={[\"code\", { key: \"lastName\", descending: true }]}\n\n//                                                 />\n//                                             </Row>\n\n//                                         </Col>\n\n\n\n\n//                                     </Row>\n//                                 </Tab.Pane>\n\n//                             </Tab.Content>\n//                         </Col>\n//                     </Row>\n//                 </Tab.Container>\n//             </Aux>\n\n\n\n//     );\n// }\n\n// export default ListticketDetails;\n\nimport React, { useEffect, useState } from \"react\";\n\n//import { PageTitle } from '../../layout-components';\nimport { IconButton, Box, Card, CardContent } from \"@material-ui/core\";\nimport axios from \"axios\";\nimport { Row, Col, Tabs, Tab, Button, DropdownButton, Dropdown } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\n//import CreateQRcode from '../../../Qrcode/Qrcodecreate'\nimport Aux from \"../../hoc/_Aux\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport filterFactory, { textFilter } from 'react-bootstrap-table2-filter';\nimport UcFirst from \"../../App/components/UcFirst\";\nimport ModalModifierColis from \"../ModificationColis/Modal.modification.colis\"\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\nimport jsPDF from \"jspdf\";\nimport moment from \"moment\"\nimport * as FileSaver from 'file-saver';\nimport * as XLSX from 'xlsx';\nimport i18n from './../../i18n';\nimport NewValeurTicket from './New.Valeur.Ticker'\nconst fileExtension = '.xlsx';\nconst fileType = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\nvar urlbackend = require(\"../../env/env\")();\n\nfunction ListticketDetails() {\n\n    const [ticket, setticket] = useState([])\n    const [requirepaymenet, setrequirepaymenet] = useState([])\n    const [ticketraite, setticketraite] = useState([])\n    function priceFormatter(column, colIndex, { sortElement, filterElement }) {\n        return (\n            <div style={{ display: 'flex', flexDirection: 'column' }}>\n                {filterElement}\n                {column.text}\n                {sortElement}\n            </div>\n        );\n    }\n    const ModifierColis = (cell, row, rowIndex, formatExtraData) => {\n        return (\n            <div>\n\n                <ModalModifierColis colisModifier={row.colis} reloaddata={()=>getdata()}  > </ModalModifierColis>\n\n\n            </div>\n        );\n    };\n    const columns = [\n        {\n            dataField: \"code\",\n            text: i18n.t('code'),\n            headerFormatter: priceFormatter,\n\n            filter: textFilter({ placeholder: i18n.t('search') }),\n            formatter: (cell, row) => {\n\n                if (row.status === 1) {\n\n                    return (<div>\n                        <p> {row.code} </p>\n                        <Button key={row.id} variant='success'>\n                            <UcFirst text=\"Traité\" />\n\n                        </Button></div>)\n                } else {\n\n                    return (<div>\n                        <p> {row.code} </p>\n                        <Button key={row.id} variant='danger'>\n                            <UcFirst text=\"non Traité\" />\n\n                        </Button></div>)\n                }\n\n\n            },\n            sort: true\n\n        },\n        {\n            dataField: \"priority\",\n            text: i18n.t('priority'),\n            formatter: (cell, row) => {\n\n                if (row.priority === \"0\") {\n                    return (<div className=\"h-auto  badge \">\n                        <p style={{ color: \"orange\" }}>Faible</p>\n                    </div>\n                    );\n\n                } else if\n                    (row.priority === \"2\") {\n                    return (<div className=\"h-auto  badge \">\n                        <p style={{ color: \"red\" }}>Urgent</p>\n                    </div>\n                    )\n                } else {\n                    return (<div className=\"h-auto  badge \">\n                        <p style={{ color: \"blue\" }}>moyenne</p>\n                    </div>\n                    );\n\n                }\n\n\n\n\n            }\n\n\n        },\n\n        {\n            dataField: \"colis.index_colis\",\n            text: i18n.t('package-number'),\n            headerFormatter: priceFormatter,\n\n            filter: textFilter({ placeholder: i18n.t('search') }),\n            sort: true\n\n        },\n\n        {\n            dataField: \"colis.name_complete\",\n            text: i18n.t('client-name'),\n            formatter: (cell, row) => {\n                return (<div>{`${row.colis.name_complete} `} : {`${row.colis.gouvernorat}`} <br /> {`${row.colis.gouvernorat}`} {`${row.colis.address}`} <br /> {`${row.colis.phone_number}`} <br/> { i18n.t('price')} : {row.colis.price} </div>);\n            },\n            headerFormatter: priceFormatter,\n\n            filter: textFilter({ placeholder: i18n.t('search') }),\n\n\n        },\n        {\n            dataField: \"message\",\n            text: \"Message\",\n            headerFormatter: priceFormatter,\n            formatter: (cell, row) => {\n                return (<div>{`${row.type} `} <br /> {`${row.message}`}  </div>);\n            },\n            filter: textFilter({ placeholder: i18n.t('search') }),\n\n\n        },\n       \n\n        {\n            dataField: \"colis.name_complete\",\n            text: \"Valeur\",\n            formatter: (cell, row) => {\n                return (<div>\n                    <NewValeurTicket ticket={row} />\n\n                </div>);\n            }\n\n\n        },\n\n        {\n            dataField: \"colis.name_complete\",\n            text: \"Valeur\",\n            formatter: (cell, row) => {\n                return (<div>\n                    <Button style={{ backgroundColor: \"#8c948c\" }} onClick={() => updateicket(row.id)} > fermer </Button>\n                    <Button style={{ backgroundColor: \"#8c948c\" }} onClick={() => validerTickey(row.id)} > Valider </Button>\n\n                </div>);\n            }\n\n\n        },\n\n        {\n            dataField: \"colis\",\n            text: \"Modifier\",\n            formatter: ModifierColis,\n            style: { textAlign: \"center\" },\n\n        },\n\n\n\n        {\n            dataField: \"colis.name_complete\",\n            text: i18n.t('history'),\n            formatter: (cell, row) => {\n                return (<div>\n                    <Link to={\"/history/colis/provider/\" + row.colis.id}>\n                        <Button\n                            variant=\"success\"\n                            onClick={() => console.log(\"not yet\")}\n                        >\n                            {\" \"}\n                            <span className=\"fa fa-file\"></span>\n                        </Button>\n                    </Link>\n\n                </div>);\n            }\n\n\n        },\n\n\n\n\n    ]\n    const columns2 = [\n   \n\n        {\n            dataField: \"provider.username\",\n            text: \"username\",\n            \n            headerFormatter: priceFormatter,\n            filter: textFilter(),\n\n        },\n        {\n            dataField: \"provider.phone_number\",\n            text: \"Telphone\",\n            \n            headerFormatter: priceFormatter,\n            filter: textFilter(),\n\n        },\n        {\n            dataField: \"provider.lastname\",\n            text: \"code_fiscal\",\n            headerFormatter: priceFormatter,\n            formatter: (cell, row) => {\n                return (<div>{`${row.provider.company} `} {`${row.provider.code_fiscal}`}</div>);\n            },\n            filter: textFilter(),\n\n        },\n\n        {\n            dataField: \"provider.username\",\n            text: \"Action\",\n            formatter: (cell, row) => {\n                return (<div>\n                    <Button style={{ backgroundColor: \"#8c948c\" }} onClick={() => colserequirepayment(row.id)} > Accepter </Button>\n\n                </div>);\n            }\n\n\n        },\n\n\n\n\n\n    ]\n    const updateicket = (id) => {\n        console.log(id)\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                'Access-Control-Allow-Headers': 'Authorization',\n                \"x-access-token\": localStorage.getItem('token'),\n                'Authorization': 'Bearer ' + localStorage.getItem('token'),\n            },\n        };\n        axios.put(urlbackend + \"/ticket/close/\" + id, config).then((response) => {\n            getdata()\n\n        }).catch(() => {\n            console.log(\"'eeh\")\n        })\n\n    }\n    const colserequirepayment = (id) => {\n        console.log(id)\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                'Access-Control-Allow-Headers': 'Authorization',\n                \"x-access-token\": localStorage.getItem('token'),\n                'Authorization': 'Bearer ' + localStorage.getItem('token'),\n            },\n        };\n        axios.put(urlbackend + \"/requirepayment/valider/\" + id, config).then((response) => {\n            getdata()\n\n        }).catch(() => {\n            console.log(\"'eeh\")\n        })\n\n    }\n    const validerTickey = (id) => {\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                'Access-Control-Allow-Headers': 'Authorization',\n                \"x-access-token\": localStorage.getItem('token'),\n                'Authorization': 'Bearer ' + localStorage.getItem('token'),\n            },\n        };\n        axios.put(urlbackend + \"/ticket/valid/\" + id, config).then((response) => {\n            getdata()\n\n        }).catch(() => {\n            console.log(\"'eeh\")\n        })\n\n    }\n    const calculersume = (tabe) => {\n        var myTotal = 0;  // Variable to hold your total\n\n        for (var i = 0, len = tabe.length; i < len; i++) {\n            myTotal += parseFloat(tabe[i].colis.price);  // Iterate over your first array and then grab the second element add the values up\n        }\n        return myTotal\n    }\n\n\n    useEffect(() => {\n        getdata()\n\n    }, [])\n\n    const getdata = () => {\n        console.log(\"ici datataaaa\")\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                'Access-Control-Allow-Headers': 'Authorization',\n                \"x-access-token\": localStorage.getItem('token'),\n                'Authorization': 'Bearer ' + localStorage.getItem('token'),\n            },\n        };\n\n        axios.get(urlbackend + \"/ticket/list?current_page=1&per_page=500\", config).then((response) => {\n            setticket(response.data.data.data)\n\n            console.log(response.data.data.data)\n\n        }).catch(() => {\n            console.log(\"'eeh\")\n        })\n        axios.get(urlbackend + \"/requirepayment/list\", config).then((response) => {\n            setrequirepaymenet(response.data.data)\n\n\n        }).catch(() => {\n            console.log(\"'eeh\")\n        })\n    }\n    const reloaddata = () => {\n        getdata()\n    }\n\n    return (\n        <Aux>\n            <Row>\n                <Col>\n                    <h5>{i18n.t('packages-list')}</h5>\n                    <button className=\"btn btn-info\" onClick={() => reloaddata()} >{i18n.t('refresh')}</button>\n\n                    <hr />\n                    <Tabs defaultActiveKey=\"home\">\n                        <Tab eventKey=\"home\" title=\"Demande\">\n                            <Card className=\"card-box mb-4\">\n\n                                <div className=\"card-header\">\n                                    <div className=\"card-header--title\">\n                                        {/* <b>This table card has custom content</b> */}\n                                    </div>\n                                    <Box className=\"card-header--actions\">\n                                        <IconButton\n                                            size=\"small\"\n                                            color=\"primary\"\n                                            className=\"text-primary\"\n                                            title=\"View details\"\n                                        ></IconButton>\n\n                                    </Box>\n                                </div>\n                                <CardContent className=\"p-0\">\n                                    <div className=\"table-responsive\">\n                                        <div className=\"app-row\">\n                                            <div className=\"app-col-xs-12 app-col-md-12\">\n                                                <BootstrapTable\n                                                    striped\n                                                    bordered\n                                                    hover\n                                                    loading={true}\n                                                    variant=\"dark\"\n                                                    bootstrap4={true}\n                                                    keyField=\"id\"\n                                                    data={ticket}\n                                                    columns={columns}\n                                                    pagination={paginationFactory({\n                                                        sizePerPage: 15,\n                                                        sizePerPageList: [5, 10, 15, 20, 25],\n                                                    })}\n                                                    filter={filterFactory()}\n                                                    headerClasses=\"table thead-light mb-0\"\n                                                ></BootstrapTable>\n\n                                            </div>\n                                        </div>\n\n                                    </div>\n                                </CardContent>\n                            </Card>\n                        </Tab>\n                        <Tab eventKey=\"demand\" title=\"Demande paiement\">\n                            <Card className=\"card-box mb-4\">\n\n                                <div className=\"card-header\">\n                                    <div className=\"card-header--title\">\n                                        {/* <b>This table card has custom content</b> */}\n                                    </div>\n                                    <Box className=\"card-header--actions\">\n                                        <IconButton\n                                            size=\"small\"\n                                            color=\"primary\"\n                                            className=\"text-primary\"\n                                            title=\"View details\"\n                                        ></IconButton>\n\n                                    </Box>\n                                </div>\n                                <CardContent className=\"p-0\">\n                                    <div className=\"table-responsive\">\n                                        <div className=\"app-row\">\n                                            <div className=\"app-col-xs-12 app-col-md-12\">\n                                                <BootstrapTable\n                                                    striped\n                                                    bordered\n                                                    hover\n                                                    loading={true}\n                                                    variant=\"dark\"\n                                                    bootstrap4={true}\n                                                    keyField=\"id\"\n                                                    data={requirepaymenet}\n                                                    columns={columns2}\n                                                    pagination={paginationFactory({\n                                                        sizePerPage: 15,\n                                                        sizePerPageList: [5, 10, 15, 20, 25],\n                                                    })}\n                                                    filter={filterFactory()}\n                                                    headerClasses=\"table thead-light mb-0\"\n                                                ></BootstrapTable>\n\n                                            </div>\n                                        </div>\n\n                                    </div>\n                                </CardContent>\n                            </Card>\n                        </Tab>\n                    </Tabs>\n                </Col>\n            </Row>\n        </Aux>\n    );\n\n}\n\nexport default ListticketDetails;\n\n\n","/*\n* FileSaver.js\n* A saveAs() FileSaver implementation.\n*\n* By Eli Grey, http://eligrey.com\n*\n* License : https://github.com/eligrey/FileSaver.js/blob/master/LICENSE.md (MIT)\n* source  : http://purl.eligrey.com/github/FileSaver.js\n*/\n\n// The one and only way of getting global scope in all environments\n// https://stackoverflow.com/q/3277182/1008999\nvar _global = typeof window === 'object' && window.window === window\n  ? window : typeof self === 'object' && self.self === self\n  ? self : typeof global === 'object' && global.global === global\n  ? global\n  : this\n\nfunction bom (blob, opts) {\n  if (typeof opts === 'undefined') opts = { autoBom: false }\n  else if (typeof opts !== 'object') {\n    console.warn('Deprecated: Expected third argument to be a object')\n    opts = { autoBom: !opts }\n  }\n\n  // prepend BOM for UTF-8 XML and text/* types (including HTML)\n  // note: your browser will automatically convert UTF-16 U+FEFF to EF BB BF\n  if (opts.autoBom && /^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(blob.type)) {\n    return new Blob([String.fromCharCode(0xFEFF), blob], { type: blob.type })\n  }\n  return blob\n}\n\nfunction download (url, name, opts) {\n  var xhr = new XMLHttpRequest()\n  xhr.open('GET', url)\n  xhr.responseType = 'blob'\n  xhr.onload = function () {\n    saveAs(xhr.response, name, opts)\n  }\n  xhr.onerror = function () {\n    console.error('could not download file')\n  }\n  xhr.send()\n}\n\nfunction corsEnabled (url) {\n  var xhr = new XMLHttpRequest()\n  // use sync to avoid popup blocker\n  xhr.open('HEAD', url, false)\n  try {\n    xhr.send()\n  } catch (e) {}\n  return xhr.status >= 200 && xhr.status <= 299\n}\n\n// `a.click()` doesn't work for all browsers (#465)\nfunction click (node) {\n  try {\n    node.dispatchEvent(new MouseEvent('click'))\n  } catch (e) {\n    var evt = document.createEvent('MouseEvents')\n    evt.initMouseEvent('click', true, true, window, 0, 0, 0, 80,\n                          20, false, false, false, false, 0, null)\n    node.dispatchEvent(evt)\n  }\n}\n\n// Detect WebView inside a native macOS app by ruling out all browsers\n// We just need to check for 'Safari' because all other browsers (besides Firefox) include that too\n// https://www.whatismybrowser.com/guides/the-latest-user-agent/macos\nvar isMacOSWebView = _global.navigator && /Macintosh/.test(navigator.userAgent) && /AppleWebKit/.test(navigator.userAgent) && !/Safari/.test(navigator.userAgent)\n\nvar saveAs = _global.saveAs || (\n  // probably in some web worker\n  (typeof window !== 'object' || window !== _global)\n    ? function saveAs () { /* noop */ }\n\n  // Use download attribute first if possible (#193 Lumia mobile) unless this is a macOS WebView\n  : ('download' in HTMLAnchorElement.prototype && !isMacOSWebView)\n  ? function saveAs (blob, name, opts) {\n    var URL = _global.URL || _global.webkitURL\n    var a = document.createElement('a')\n    name = name || blob.name || 'download'\n\n    a.download = name\n    a.rel = 'noopener' // tabnabbing\n\n    // TODO: detect chrome extensions & packaged apps\n    // a.target = '_blank'\n\n    if (typeof blob === 'string') {\n      // Support regular links\n      a.href = blob\n      if (a.origin !== location.origin) {\n        corsEnabled(a.href)\n          ? download(blob, name, opts)\n          : click(a, a.target = '_blank')\n      } else {\n        click(a)\n      }\n    } else {\n      // Support blobs\n      a.href = URL.createObjectURL(blob)\n      setTimeout(function () { URL.revokeObjectURL(a.href) }, 4E4) // 40s\n      setTimeout(function () { click(a) }, 0)\n    }\n  }\n\n  // Use msSaveOrOpenBlob as a second approach\n  : 'msSaveOrOpenBlob' in navigator\n  ? function saveAs (blob, name, opts) {\n    name = name || blob.name || 'download'\n\n    if (typeof blob === 'string') {\n      if (corsEnabled(blob)) {\n        download(blob, name, opts)\n      } else {\n        var a = document.createElement('a')\n        a.href = blob\n        a.target = '_blank'\n        setTimeout(function () { click(a) })\n      }\n    } else {\n      navigator.msSaveOrOpenBlob(bom(blob, opts), name)\n    }\n  }\n\n  // Fallback to using FileReader and a popup\n  : function saveAs (blob, name, opts, popup) {\n    // Open a popup immediately do go around popup blocker\n    // Mostly only available on user interaction and the fileReader is async so...\n    popup = popup || open('', '_blank')\n    if (popup) {\n      popup.document.title =\n      popup.document.body.innerText = 'downloading...'\n    }\n\n    if (typeof blob === 'string') return download(blob, name, opts)\n\n    var force = blob.type === 'application/octet-stream'\n    var isSafari = /constructor/i.test(_global.HTMLElement) || _global.safari\n    var isChromeIOS = /CriOS\\/[\\d]+/.test(navigator.userAgent)\n\n    if ((isChromeIOS || (force && isSafari) || isMacOSWebView) && typeof FileReader !== 'undefined') {\n      // Safari doesn't allow downloading of blob URLs\n      var reader = new FileReader()\n      reader.onloadend = function () {\n        var url = reader.result\n        url = isChromeIOS ? url : url.replace(/^data:[^;]*;/, 'data:attachment/file;')\n        if (popup) popup.location.href = url\n        else location = url\n        popup = null // reverse-tabnabbing #460\n      }\n      reader.readAsDataURL(blob)\n    } else {\n      var URL = _global.URL || _global.webkitURL\n      var url = URL.createObjectURL(blob)\n      if (popup) popup.location = url\n      else location.href = url\n      popup = null // reverse-tabnabbing #460\n      setTimeout(function () { URL.revokeObjectURL(url) }, 4E4) // 40s\n    }\n  }\n)\n\n_global.saveAs = saveAs.saveAs = saveAs\n\nif (typeof module !== 'undefined') {\n  module.exports = saveAs;\n}\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"className\", \"variant\", \"as\"];\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  variant: null\n};\nvar CardImg = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\nfunction (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      variant = _ref.variant,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'img' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref,\n    className: classNames(variant ? prefix + \"-\" + variant : prefix, className)\n  }, props));\n});\nCardImg.displayName = 'CardImg';\nCardImg.defaultProps = defaultProps;\nexport default CardImg;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"className\", \"bg\", \"text\", \"border\", \"body\", \"children\", \"as\"];\nimport classNames from 'classnames';\nimport React, { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nimport CardContext from './CardContext';\nimport CardImg from './CardImg';\nvar DivStyledAsH5 = divWithClassName('h5');\nvar DivStyledAsH6 = divWithClassName('h6');\nvar CardBody = createWithBsPrefix('card-body');\nvar CardTitle = createWithBsPrefix('card-title', {\n  Component: DivStyledAsH5\n});\nvar CardSubtitle = createWithBsPrefix('card-subtitle', {\n  Component: DivStyledAsH6\n});\nvar CardLink = createWithBsPrefix('card-link', {\n  Component: 'a'\n});\nvar CardText = createWithBsPrefix('card-text', {\n  Component: 'p'\n});\nvar CardHeader = createWithBsPrefix('card-header');\nvar CardFooter = createWithBsPrefix('card-footer');\nvar CardImgOverlay = createWithBsPrefix('card-img-overlay');\nvar defaultProps = {\n  body: false\n};\nvar Card = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      bg = _ref.bg,\n      text = _ref.text,\n      border = _ref.border,\n      body = _ref.body,\n      children = _ref.children,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'card');\n  var cardContext = useMemo(function () {\n    return {\n      cardHeaderBsPrefix: prefix + \"-header\"\n    };\n  }, [prefix]);\n  return /*#__PURE__*/React.createElement(CardContext.Provider, {\n    value: cardContext\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, prefix, bg && \"bg-\" + bg, text && \"text-\" + text, border && \"border-\" + border)\n  }), body ?\n  /*#__PURE__*/\n  // @ts-ignore\n  React.createElement(CardBody, null, children) : children));\n});\nCard.displayName = 'Card';\nCard.defaultProps = defaultProps;\nCard.Img = CardImg;\nCard.Title = CardTitle;\nCard.Subtitle = CardSubtitle;\nCard.Body = CardBody;\nCard.Link = CardLink;\nCard.Text = CardText;\nCard.Header = CardHeader;\nCard.Footer = CardFooter;\nCard.ImgOverlay = CardImgOverlay;\nexport default Card;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"className\", \"striped\", \"bordered\", \"borderless\", \"hover\", \"size\", \"variant\", \"responsive\"];\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar Table = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      striped = _ref.striped,\n      bordered = _ref.bordered,\n      borderless = _ref.borderless,\n      hover = _ref.hover,\n      size = _ref.size,\n      variant = _ref.variant,\n      responsive = _ref.responsive,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\n  var classes = classNames(className, decoratedBsPrefix, variant && decoratedBsPrefix + \"-\" + variant, size && decoratedBsPrefix + \"-\" + size, striped && decoratedBsPrefix + \"-striped\", bordered && decoratedBsPrefix + \"-bordered\", borderless && decoratedBsPrefix + \"-borderless\", hover && decoratedBsPrefix + \"-hover\");\n  var table = /*#__PURE__*/React.createElement(\"table\", _extends({}, props, {\n    className: classes,\n    ref: ref\n  }));\n\n  if (responsive) {\n    var responsiveClass = decoratedBsPrefix + \"-responsive\";\n\n    if (typeof responsive === 'string') {\n      responsiveClass = responsiveClass + \"-\" + responsive;\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: responsiveClass\n    }, table);\n  }\n\n  return table;\n});\nexport default Table;"],"names":["UcFirst","string","this","props","text","charAt","toUpperCase","slice","React","name","label","onChange","onBlur","value","type","isInvalid","errors","touched","htmlFor","className","id","placeholder","i18n","getConfig","classes","extra","Tooltip","title","Array","isArray","map","e","placement","urlbackend","require","useState","setZones","city","gouvernorat","setgouvernorat","useEffect","choosedelegeation","config","headers","localStorage","getItem","axios","then","response","console","log","data","filter","catch","Row","Col","Card","as","colisModifier","index_colis","initialValues","name_complete","phone_number","code_postal","email","address","price","type_envoi","designation","lot","payment_status","payment_mode","validationSchema","Yup","shape","max","required","min","onSubmit","values","resetForm","alert","reloaddata","handleBlur","handleChange","handleSubmit","isSubmitting","md","CustomInput","InputStatus","InputGroup","FormControl","custom","target","Address","zone","index","onClick","Gouvernorat","readOnly","Formateur","Button","color","variant","show","setShow","handleClose","style","background","Modal","dialogClassName","onHide","closeButton","newVaue","setnewvalue","JSON","parse","ticket","Table","striped","responsive","setticket","requirepaymenet","setrequirepaymenet","priceFormatter","column","colIndex","sortElement","filterElement","display","flexDirection","columns","dataField","headerFormatter","textFilter","formatter","cell","row","status","code","sort","priority","colis","message","backgroundColor","updateicket","validerTickey","rowIndex","formatExtraData","getdata","textAlign","Link","to","columns2","provider","company","code_fiscal","colserequirepayment","Tabs","defaultActiveKey","Tab","eventKey","Box","IconButton","size","CardContent","bordered","hover","loading","bootstrap4","keyField","pagination","paginationFactory","sizePerPage","sizePerPageList","filterFactory","headerClasses","b","a","autoBom","warn","test","Blob","c","d","XMLHttpRequest","open","responseType","onload","g","onerror","error","send","dispatchEvent","MouseEvent","document","createEvent","initMouseEvent","window","f","self","global","navigator","userAgent","saveAs","HTMLAnchorElement","prototype","h","i","URL","webkitURL","j","createElement","download","rel","href","origin","location","createObjectURL","setTimeout","revokeObjectURL","msSaveOrOpenBlob","body","innerText","HTMLElement","safari","FileReader","k","onloadend","result","replace","readAsDataURL","l","m","module","exports","_excluded","CardImg","_ref","ref","bsPrefix","_ref$as","Component","_objectWithoutPropertiesLoose","prefix","useBootstrapPrefix","_extends","classNames","displayName","defaultProps","DivStyledAsH5","divWithClassName","DivStyledAsH6","CardBody","createWithBsPrefix","CardTitle","CardSubtitle","CardLink","CardText","CardHeader","CardFooter","CardImgOverlay","bg","border","children","cardContext","useMemo","cardHeaderBsPrefix","CardContext","Img","Title","Subtitle","Body","Text","Header","Footer","ImgOverlay","borderless","decoratedBsPrefix","table","responsiveClass"],"sourceRoot":""}