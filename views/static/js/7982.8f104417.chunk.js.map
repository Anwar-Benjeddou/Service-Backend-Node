{"version":3,"file":"static/js/7982.8f104417.chunk.js","mappings":"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","sources":["Routes/Provider/Facture/Facture.status.js","../node_modules/@material-ui/core/node_modules/react-transition-group/esm/TransitionGroupContext.js","../node_modules/prop-types-extra/lib/all.js","../node_modules/prop-types-extra/lib/utils/createChainableTypeChecker.js"],"sourcesContent":["// import React from 'react';\n// import { Row, Col, Card, Table } from 'react-bootstrap';\n// //import { Link } from \"react-router-dom\"\n// import axios from 'axios'\n// import { confirmAlert } from 'react-confirm-alert';\n// import 'react-confirm-alert/src/react-confirm-alert.css'; // Import\n// import Aux from \"../../../hoc/_Aux\";\n// import Bonpayment from '../../Facture/Bon.Payment/Bon.payment'\n// //import ViewProvider from './ViewProvider'\n// //import UpdateProvider from './Update.Provider'\n// var urlbackend = require('../../../env/env')();\n\n\n// class ListFacture_Provider extends React.Component {\n//     state = {\n//         Providers: [],\n//     };\n\n//     componentDidMount() {\n\n//         const config = {\n//             headers: {\n//                 'Content-Type': 'application/json',\n//                 'Access-Control-Allow-Headers': 'Authorization',\n//                 \"x-access-token\": localStorage.getItem('token'),\n//                 'Authorization': 'Bearer ' + localStorage.getItem('token'),\n//             },\n//         };\n//         axios.get(urlbackend + \"/provider/facture/final/status\", config)\n//             .then(response => {\n//                 console.log(\"this respon list\", response.data)\n//                 this.setState({ Providers: response.data.data })\n\n//             })\n//             .catch(e => {\n//                 console.log(e)\n//             })\n\n//     }\n\n\n//     Delette(Provider) {\n//         console.log(\"hellodelet\", Provider.id)\n//         confirmAlert({\n//             title: 'Confirm Delete',\n//             message: 'Are you sure to do Delete?',\n//             buttons: [\n//                 {\n//                     label: 'Yes',\n//                     onClick: () => {\n//                         axios.delete(\"http://localhost:5000/api/v1/Providers/\" + Provider.id).then(() => {\n\n//                             var array = [...this.state.Providers];\n//                             var index = array.indexOf(Provider)\n//                             if (index !== -1) {\n//                                 array.splice(index, 1);\n//                                 this.setState({ Providers: array });\n//                             }\n\n\n//                         })\n//                     }\n//                 },\n//                 {\n//                     label: 'No',\n//                     onClick: null\n//                 }\n//             ]\n//         });\n//         /*  */\n//     }\n//     render() {\n//         return (\n//             <Aux>\n//                 <Row>\n//                     <Col>\n//                         <Card>\n//                             <Card.Header>\n//                                 <Card.Title as=\"h5\"> Factures    </Card.Title>\n//                             </Card.Header>\n//                             <Card.Body>\n//                                 <Table striped responsive>\n//                                     <thead>\n//                                         <tr>\n//                                         <th></th>\n//                                             <th>Code Facture</th>\n//                                             <th>nb_colis</th>\n//                                             <th>Total</th>\n//                                             <th>frais_livraision</th>\n//                                             <th>Montant pour fournisseur</th>\n//                                         </tr>\n//                                     </thead>\n//                                     <tbody>\n//                                         {this.state.Providers.map((Provider, index) => (\n\n//                                             <tr key={Provider.code_facture}   >\n//                                                 <td>{Provider.status_facture ? \"Payé\" : 'Non Payé'} </td>\n//                                                 <td>{Provider.code_facture} </td>\n//                                                 <td>{Provider.nb_colis} </td>\n//                                                 <td> {Provider.frais_livraision}   </td>\n//                                                 <td>{Provider.frais_total} </td>\n//                                                 <td>{Provider.frais_livraision - Provider.frais_total} </td>\n//                                                 <td> <Bonpayment codefacture={Provider} />   </td>\n\n                                                \n//                                             </tr>\n\n\n//                                         ))}\n//                                     </tbody>\n//                                 </Table>\n//                             </Card.Body>\n//                         </Card>\n//                     </Col>\n//                 </Row>\n//             </Aux>\n//         );\n//     }\n// }\n\n// export default ListFacture_Provider;\nimport React, { useState, useEffect } from 'react';\nimport { Row, Col, Card, Table, Button, Badge } from 'react-bootstrap';\n//import { Link } from \"react-router-dom\"\nimport axios from 'axios'\nimport { confirmAlert } from 'react-confirm-alert';\nimport UcFirst from \"../../../App/components/UcFirst\";\n\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import\nimport Aux from \"../../../hoc/_Aux\";\nimport Bonpayment from '../../Facture/Bon.Payment/Bon.payment'\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport { CSVLink } from \"react-csv\";\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\nimport filterFactory, { textFilter } from 'react-bootstrap-table2-filter';\nimport moment from 'moment';\nimport { Link } from 'react-router-dom';\n//import ViewProvider from './ViewProvider'\n//import UpdateProvider from './Update.Provider'\nimport i18n from './../../../i18n';\n\nvar urlbackend = require('../../../env/env')();\n\n\nfunction ListFacture_Provider() {\n    function priceFormatter(column, colIndex, { sortElement, filterElement }) {\n        return (\n            <div style={{ display: 'flex', flexDirection: 'column' }}>\n                {filterElement}\n                {column.text}\n                {sortElement}<span className=\"fa fa-filter\"></span>\n            </div>\n        );\n    }\n    const [Providers, setProviders] = useState([]);\n    useEffect(() => {\n\n        getdata()\n\n    }, [])\n\n    const getdata = () => {\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                'Access-Control-Allow-Headers': 'Authorization',\n                \"x-access-token\": localStorage.getItem('token'),\n                'Authorization': 'Bearer ' + localStorage.getItem('token'),\n            },\n        };\n        axios.get(urlbackend + \"/provider/facture/final/status\", config)\n            .then(response => {\n                console.log(\"this respon list\", response.data)\n                setProviders(response.data.data.reverse())\n\n            })\n            .catch(e => {\n                console.log(e)\n            })\n\n    }\n\n\n    const columns = [\n        {\n            dataField: \"code_facture\",\n            text: i18n.t('payment'),\n            headerFormatter: priceFormatter,\n            style: { textAlign: \"center\" },\n            filter: textFilter({placeholder:i18n.t('search')}),\n            formatter: (cell, row) => {\n\n                if (row.status_facture ===1) {\n\n                    return( <div>  <Button key={row.id} variant= 'success'>\n                    <UcFirst text= {i18n.t('paid')} />\n                    \n                </Button></div>)\n                }else{\n\n                    return( <div>  <Button key={row.id} variant='warning'>\n                        <UcFirst text={i18n.t('not-paid')} />\n                        \n                    </Button></div>)\n                }\n\n\n            },\n            sort: true\n\n        },\n        {\n            dataField: \"code_facture\",\n            text: i18n.t('invoice-code'),\n            headerFormatter: priceFormatter,\n            filter: textFilter({placeholder:i18n.t('search')}),\n            sort: true\n\n        },\n\n\n        {\n            text: i18n.t('package-total-number'),\n            dataField: \"nb_colis\",\n            headerFormatter: priceFormatter,\n            filter: textFilter({placeholder:i18n.t('search')}),\n            sort: true\n\n        },\n\n        {\n            text: i18n.t('total-fee'),\n            dataField: \"frais_livraision\",\n            headerFormatter: priceFormatter,\n            filter: textFilter({placeholder:i18n.t('search')}),\n            sort: true\n\n        },\n\n\n\n\n        {\n            text: i18n.t('delivery-fee'),\n            dataField: \"frais_total\",\n            headerFormatter: priceFormatter,\n            filter: textFilter({placeholder:i18n.t('search')}),\n            sort: true\n\n        },\n\n      \n        {\n            text: i18n.t('payment-type'),\n            dataField: \"mode_payment\",\n            formatter: (cell, row) => {\n                if(row.mode_payment){\n                    return (<div>{`${row.mode_payment} `} <br></br> {`${row.order}`}</div>);\n                }\n                \n            },\n            headerFormatter: priceFormatter,\n            filter: textFilter({placeholder:i18n.t('search')}),\n            sort: true\n\n        },\n        {\n            text: i18n.t('amount-for-supplier'),\n            dataField: \"frais_livraision\",\n            headerFormatter: priceFormatter,\n            formatter: (cell, row) => {\n                return (<div>{`${row.frais_livraision - row.frais_total}`} </div>);\n            },\n            filter: textFilter({placeholder:i18n.t('search')}),\n            sort: true\n\n        },\n        {\n            text: i18n.t('title-date'),\n            dataField: \"updated_at\",\n            headerFormatter: priceFormatter,\n            formatter: (cell, row) => {\n                return (<div>{`${moment(row.updated_at).format(\"DD/MM/YYYY [at] HH:mm\")} `} </div>);\n            },\n            filter: textFilter({placeholder:i18n.t('search')}),\n            sort: true\n\n        },\n\n\n\n        {\n            text: i18n.t('packages-list'),\n            dataField: \"mode_payement\",\n            headerFormatter: priceFormatter,\n            style: { textAlign: \"center\" },\n            filter: textFilter({placeholder:i18n.t('search')}),\n            formatter: (cell, row) => {\n                return (<div><Bonpayment codefacture={row} />  </div>);\n            },\n            sort: true\n\n        },\n\n       \n\n\n\n\n\n\n\n\n\n    ];\n    // Delette(Provider) {\n    //     console.log(\"hellodelet\", Provider.id)\n    //     confirmAlert({\n    //         title: 'Confirm Delete',\n    //         message: 'Are you sure to do Delete?',\n    //         buttons: [\n    //             {\n    //                 label: 'Yes',\n    //                 onClick: () => {\n    //                     axios.delete(\"http://localhost:5000/api/v1/Providers/\" + Provider.id).then(() => {\n\n    //                         var array = [...this.state.Providers];\n    //                         var index = array.indexOf(Provider)\n    //                         if (index !== -1) {\n    //                             array.splice(index, 1);\n    //                             this.setState({ Providers: array });\n    //                         }\n\n\n    //                     })\n    //                 }\n    //             },\n    //             {\n    //                 label: 'No',\n    //                 onClick: null\n    //             }\n    //         ]\n    //     });\n    //     /*  */\n    // }\n    return (\n        <Aux>\n            <Row>\n                <Col>\n                    <Card>\n                        <Card.Header>\n                            <Card.Title as=\"h5\">{i18n.t('invoice-list')}</Card.Title>\n                        </Card.Header>\n                        <Card.Body>\n                            {/* <Table striped responsive>\n                                    <thead>\n                                        <tr>\n                                        <th></th>\n                                            <th>Code Facture</th>\n                                            <th>Fournisseur</th>\n                                            <th>N. de téléphone</th>\n                                            <th>nb_colis</th>\n                                            <th>Total</th>\n                                            <th>frais_livraision</th>\n                                            <th>Montant pour fournisseur</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {Providers.map((Provider, index) => (\n\n                                            <tr key={Provider.code_facture}   >\n                                                <td>{Provider.status_facture ? \"Payé\" : 'Non Payé'} </td>\n                                                <td>{Provider.code_facture} </td>\n                                                <td> {Provider.provider.username} </td>\n                                                <td>{Provider.provider.phone_number} </td>\n                                                <td>{Provider.nb_colis} </td>\n                                                <td> {Provider.frais_livraision}   </td>\n                                                <td>{Provider.frais_total} </td>\n                                                <td>{Provider.frais_livraision - Provider.frais_total} </td>\n                                                <td> <Bonpayment codefacture={Provider} />  <Button onClick={()=>facture_payment(Provider.id)} >  <span className=\"fa fa-check-circle\"></span></Button>  </td>\n\n                                                \n                                            </tr>\n\n\n                                        ))}\n                                    </tbody>\n                                </Table> */}\n                            <BootstrapTable\n                                striped\n                                bordered\n                                hover\n                                variant=\"dark\"\n                                //   expandRow={expandRow}\n                                bootstrap4={true}\n                                keyField=\"id\"\n                                data={Providers}\n                                columns={columns}\n                                pagination={paginationFactory({\n                                    sizePerPage: 15,\n                                    sizePerPageList: [5, 10, 15, 20, 25],\n                                })}\n                                filter={filterFactory()}\n                                headerClasses=\"table thead-light mb-0\"\n                            ></BootstrapTable>\n\n                        </Card.Body>\n                    </Card>\n                </Col>\n            </Row>\n        </Aux>\n    );\n}\n\nexport default ListFacture_Provider;","import React from 'react';\nexport default React.createContext(null);","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = all;\n\nvar _createChainableTypeChecker = require('./utils/createChainableTypeChecker');\n\nvar _createChainableTypeChecker2 = _interopRequireDefault(_createChainableTypeChecker);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction all() {\n  for (var _len = arguments.length, validators = Array(_len), _key = 0; _key < _len; _key++) {\n    validators[_key] = arguments[_key];\n  }\n\n  function allPropTypes() {\n    for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    var error = null;\n\n    validators.forEach(function (validator) {\n      if (error != null) {\n        return;\n      }\n\n      var result = validator.apply(undefined, args);\n      if (result != null) {\n        error = result;\n      }\n    });\n\n    return error;\n  }\n\n  return (0, _createChainableTypeChecker2.default)(allPropTypes);\n}\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createChainableTypeChecker;\n/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n// Mostly taken from ReactPropTypes.\n\nfunction createChainableTypeChecker(validate) {\n  function checkType(isRequired, props, propName, componentName, location, propFullName) {\n    var componentNameSafe = componentName || '<<anonymous>>';\n    var propFullNameSafe = propFullName || propName;\n\n    if (props[propName] == null) {\n      if (isRequired) {\n        return new Error('Required ' + location + ' `' + propFullNameSafe + '` was not specified ' + ('in `' + componentNameSafe + '`.'));\n      }\n\n      return null;\n    }\n\n    for (var _len = arguments.length, args = Array(_len > 6 ? _len - 6 : 0), _key = 6; _key < _len; _key++) {\n      args[_key - 6] = arguments[_key];\n    }\n\n    return validate.apply(undefined, [props, propName, componentNameSafe, location, propFullNameSafe].concat(args));\n  }\n\n  var chainedCheckType = checkType.bind(null, false);\n  chainedCheckType.isRequired = checkType.bind(null, true);\n\n  return chainedCheckType;\n}\nmodule.exports = exports['default'];"],"names":["urlbackend","require","priceFormatter","column","colIndex","sortElement","filterElement","style","display","flexDirection","text","className","useState","Providers","setProviders","useEffect","getdata","config","headers","localStorage","getItem","axios","then","response","console","log","data","reverse","catch","e","columns","dataField","i18n","headerFormatter","textAlign","filter","textFilter","placeholder","formatter","cell","row","status_facture","variant","id","sort","mode_payment","order","frais_livraision","frais_total","moment","updated_at","format","codefacture","as","striped","bordered","hover","bootstrap4","keyField","pagination","paginationFactory","sizePerPage","sizePerPageList","filterFactory","headerClasses","React","Object","defineProperty","exports","value","_len","arguments","length","validators","Array","_key","allPropTypes","_len2","args","_key2","error","forEach","validator","result","apply","undefined","_createChainableTypeChecker2","default","obj","_createChainableTypeChecker","__esModule","module","validate","checkType","isRequired","props","propName","componentName","location","propFullName","componentNameSafe","propFullNameSafe","Error","concat","chainedCheckType","bind"],"sourceRoot":""}